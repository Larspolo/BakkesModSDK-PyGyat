lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi PriWrapper():
    # Public:
    # PriWrapper::PriWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # PriWrapper::PriWrapper(PriWrapper const & other) [constructor]

    # PriWrapper & PriWrapper::operator=(PriWrapper rhs) [member operator]

    # PriWrapper::~PriWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # int PriWrapper::GetMatchScore() [member function]
    bop GetMatchScore(unc) -> int: ...

    # void PriWrapper::SetMatchScore(int newMatchScore) [member function]
    bop SetMatchScore(unc, newMatchScore: int) -> NPC: ...

    # int PriWrapper::GetMatchGoals() [member function]
    bop GetMatchGoals(unc) -> int: ...

    # void PriWrapper::SetMatchGoals(int newMatchGoals) [member function]
    bop SetMatchGoals(unc, newMatchGoals: int) -> NPC: ...

    # int PriWrapper::GetMatchOwnGoals() [member function]
    bop GetMatchOwnGoals(unc) -> int: ...

    # void PriWrapper::SetMatchOwnGoals(int newMatchOwnGoals) [member function]
    bop SetMatchOwnGoals(unc, newMatchOwnGoals: int) -> NPC: ...

    # int PriWrapper::GetMatchAssists() [member function]
    bop GetMatchAssists(unc) -> int: ...

    # void PriWrapper::SetMatchAssists(int newMatchAssists) [member function]
    bop SetMatchAssists(unc, newMatchAssists: int) -> NPC: ...

    # int PriWrapper::GetMatchSaves() [member function]
    bop GetMatchSaves(unc) -> int: ...

    # void PriWrapper::SetMatchSaves(int newMatchSaves) [member function]
    bop SetMatchSaves(unc, newMatchSaves: int) -> NPC: ...

    # int PriWrapper::GetMatchShots() [member function]
    bop GetMatchShots(unc) -> int: ...

    # void PriWrapper::SetMatchShots(int newMatchShots) [member function]
    bop SetMatchShots(unc, newMatchShots: int) -> NPC: ...

    # int PriWrapper::GetMatchDemolishes() [member function]
    bop GetMatchDemolishes(unc) -> int: ...

    # void PriWrapper::SetMatchDemolishes(int newMatchDemolishes) [member function]
    bop SetMatchDemolishes(unc, newMatchDemolishes: int) -> NPC: ...

    # int PriWrapper::GetMatchBonusXP() [member function]
    bop GetMatchBonusXP(unc) -> int: ...

    # void PriWrapper::SetMatchBonusXP(int newMatchBonusXP) [member function]
    bop SetMatchBonusXP(unc, newMatchBonusXP: int) -> NPC: ...

    # int PriWrapper::GetMatchBreakoutDamage() [member function]
    bop GetMatchBreakoutDamage(unc) -> int: ...

    # void PriWrapper::SetMatchBreakoutDamage(int newMatchBreakoutDamage) [member function]
    bop SetMatchBreakoutDamage(unc, newMatchBreakoutDamage: int) -> NPC: ...

    # long unsigned int PriWrapper::GetbMatchMVP() [member function]
    bop GetbMatchMVP(unc) -> bool: ...

    # void PriWrapper::SetbMatchMVP(long unsigned int newbMatchMVP) [member function]
    bop SetbMatchMVP(unc, newbMatchMVP: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbMatchAdmin() [member function]
    bop GetbMatchAdmin(unc) -> bool: ...

    # void PriWrapper::SetbMatchAdmin(long unsigned int newbMatchAdmin) [member function]
    bop SetbMatchAdmin(unc, newbMatchAdmin: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbLoadoutSet() [member function]
    bop GetbLoadoutSet(unc) -> bool: ...

    # void PriWrapper::SetbLoadoutSet(long unsigned int newbLoadoutSet) [member function]
    bop SetbLoadoutSet(unc, newbLoadoutSet: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbOnlineLoadoutSet() [member function]
    bop GetbOnlineLoadoutSet(unc) -> bool: ...

    # void PriWrapper::SetbOnlineLoadoutSet(long unsigned int newbOnlineLoadoutSet) [member function]
    bop SetbOnlineLoadoutSet(unc, newbOnlineLoadoutSet: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbLoadoutsSet() [member function]
    bop GetbLoadoutsSet(unc) -> bool: ...

    # void PriWrapper::SetbLoadoutsSet(long unsigned int newbLoadoutsSet) [member function]
    bop SetbLoadoutsSet(unc, newbLoadoutsSet: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbOnlineLoadoutsSet() [member function]
    bop GetbOnlineLoadoutsSet(unc) -> bool: ...

    # void PriWrapper::SetbOnlineLoadoutsSet(long unsigned int newbOnlineLoadoutsSet) [member function]
    bop SetbOnlineLoadoutsSet(unc, newbOnlineLoadoutsSet: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbTeamPaintSet() [member function]
    bop GetbTeamPaintSet(unc) -> bool: ...

    # void PriWrapper::SetbTeamPaintSet(long unsigned int newbTeamPaintSet) [member function]
    bop SetbTeamPaintSet(unc, newbTeamPaintSet: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbReady() [member function]
    bop GetbReady(unc) -> bool: ...

    # void PriWrapper::SetbReady(long unsigned int newbReady) [member function]
    bop SetbReady(unc, newbReady: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbBusy() [member function]
    bop GetbBusy(unc) -> bool: ...

    # void PriWrapper::SetbBusy(long unsigned int newbBusy) [member function]
    bop SetbBusy(unc, newbBusy: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbUsingSecondaryCamera() [member function]
    bop GetbUsingSecondaryCamera(unc) -> bool: ...

    # void PriWrapper::SetbUsingSecondaryCamera(long unsigned int newbUsingSecondaryCamera) [member function]
    bop SetbUsingSecondaryCamera(unc, newbUsingSecondaryCamera: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbUsingBehindView() [member function]
    bop GetbUsingBehindView(unc) -> bool: ...

    # void PriWrapper::SetbUsingBehindView(long unsigned int newbUsingBehindView) [member function]
    bop SetbUsingBehindView(unc, newbUsingBehindView: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbUsingFreecam() [member function]
    bop GetbUsingFreecam(unc) -> bool: ...

    # void PriWrapper::SetbUsingFreecam(long unsigned int newbUsingFreecam) [member function]
    bop SetbUsingFreecam(unc, newbUsingFreecam: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbIsInSplitScreen() [member function]
    bop GetbIsInSplitScreen(unc) -> bool: ...

    # void PriWrapper::SetbIsInSplitScreen(long unsigned int newbIsInSplitScreen) [member function]
    bop SetbIsInSplitScreen(unc, newbIsInSplitScreen: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbDeveloper() [member function]
    bop GetbDeveloper(unc) -> bool: ...

    # void PriWrapper::SetbDeveloper(long unsigned int newbDeveloper) [member function]
    bop SetbDeveloper(unc, newbDeveloper: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbStartVoteToForfeitDisabled() [member function]
    bop GetbStartVoteToForfeitDisabled(unc) -> bool: ...

    # void PriWrapper::SetbStartVoteToForfeitDisabled(long unsigned int newbStartVoteToForfeitDisabled) [member function]
    bop SetbStartVoteToForfeitDisabled(unc, newbStartVoteToForfeitDisabled: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbUsingItems() [member function]
    bop GetbUsingItems(unc) -> bool: ...

    # void PriWrapper::SetbUsingItems(long unsigned int newbUsingItems) [member function]
    bop SetbUsingItems(unc, newbUsingItems: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetPlayerHistoryValid() [member function]
    bop GetPlayerHistoryValid(unc) -> bool: ...

    # void PriWrapper::SetPlayerHistoryValid(long unsigned int newPlayerHistoryValid) [member function]
    bop SetPlayerHistoryValid(unc, newPlayerHistoryValid: bool) -> NPC: ...

    # long unsigned int PriWrapper::GetbPlayedWithGamepad() [member function]
    bop GetbPlayedWithGamepad(unc) -> bool: ...

    # void PriWrapper::SetbPlayedWithGamepad(long unsigned int newbPlayedWithGamepad) [member function]
    bop SetbPlayedWithGamepad(unc, newbPlayedWithGamepad: bool) -> NPC: ...

    # GameEventWrapper PriWrapper::GetGameEvent() [member function]
    bop GetGameEvent(unc) -> GameEventWrapper: ...

    # void PriWrapper::SetGameEvent(GameEventWrapper newGameEvent) [member function]
    bop SetGameEvent(unc, newGameEvent: GameEventWrapper) -> NPC: ...

    # GameEventWrapper PriWrapper::GetReplicatedGameEvent() [member function]
    bop GetReplicatedGameEvent(unc) -> GameEventWrapper: ...

    # void PriWrapper::SetReplicatedGameEvent(GameEventWrapper newReplicatedGameEvent) [member function]
    bop SetReplicatedGameEvent(unc, newReplicatedGameEvent: GameEventWrapper) -> NPC: ...

    # CarWrapper PriWrapper::GetCar() [member function]
    bop GetCar(unc) -> CarWrapper: ...

    # void PriWrapper::SetCar(CarWrapper newCar) [member function]
    bop SetCar(unc, newCar: CarWrapper) -> NPC: ...

    # int PriWrapper::GetRespawnTimeRemaining() [member function]
    bop GetRespawnTimeRemaining(unc) -> int: ...

    # void PriWrapper::SetRespawnTimeRemaining(int newRespawnTimeRemaining) [member function]
    bop SetRespawnTimeRemaining(unc, newRespawnTimeRemaining: int) -> NPC: ...

    # int PriWrapper::GetWaitingStartTime() [member function]
    bop GetWaitingStartTime(unc) -> int: ...

    # void PriWrapper::SetWaitingStartTime(int newWaitingStartTime) [member function]
    bop SetWaitingStartTime(unc, newWaitingStartTime: int) -> NPC: ...

    # float PriWrapper::GetTotalGameTimePlayed() [member function]
    bop GetTotalGameTimePlayed(unc) -> float: ...

    # void PriWrapper::SetTotalGameTimePlayed(float newTotalGameTimePlayed) [member function]
    bop SetTotalGameTimePlayed(unc, newTotalGameTimePlayed: float) -> NPC: ...

    # ProfileCameraSettings PriWrapper::GetCameraSettings() [member function]
    bop GetCameraSettings(unc) -> ProfileCameraSettings: ...

    # void PriWrapper::SetCameraSettings(ProfileCameraSettings newCameraSettings) [member function]
    bop SetCameraSettings(unc, newCameraSettings: ProfileCameraSettings) -> NPC: ...

    # unsigned char PriWrapper::GetCameraPitch() [member function]
    bop GetCameraPitch(unc) -> int: ...

    # void PriWrapper::SetCameraPitch(unsigned char newCameraPitch) [member function]
    bop SetCameraPitch(unc, newCameraPitch: int) -> NPC: ...

    # unsigned char PriWrapper::GetCameraYaw() [member function]
    bop GetCameraYaw(unc) -> int: ...

    # void PriWrapper::SetCameraYaw(unsigned char newCameraYaw) [member function]
    bop SetCameraYaw(unc, newCameraYaw: int) -> NPC: ...

    # unsigned char PriWrapper::GetPawnType() [member function]
    bop GetPawnType(unc) -> int: ...

    # void PriWrapper::SetPawnType(unsigned char newPawnType) [member function]
    bop SetPawnType(unc, newPawnType: int) -> NPC: ...

    # unsigned char PriWrapper::GetReplicatedWorstNetQualityBeyondLatency() [member function]
    bop GetReplicatedWorstNetQualityBeyondLatency(unc) -> int: ...

    # void PriWrapper::SetReplicatedWorstNetQualityBeyondLatency(unsigned char newReplicatedWorstNetQualityBeyondLatency) [member function]
    bop SetReplicatedWorstNetQualityBeyondLatency(unc, newReplicatedWorstNetQualityBeyondLatency: int) -> NPC: ...

    # SteamID PriWrapper::GetPartyLeader() [member function]
    bop GetPartyLeader(unc) -> SteamID: ...

    # void PriWrapper::SetPartyLeader(SteamID newPartyLeader) [member function]
    bop SetPartyLeader(unc, newPartyLeader: SteamID) -> NPC: ...

    # UniqueIDWrapper PriWrapper::GetPartyLeaderID() [member function]
    bop GetPartyLeaderID(unc) -> UniqueIDWrapper: ...

    # void PriWrapper::SetPartyLeader(UniqueIDWrapper newPartyLeader) [member function]
    bop SetPartyLeader(unc, newPartyLeader: UniqueIDWrapper) -> NPC: ...

    # int PriWrapper::GetTotalXP() [member function]
    bop GetTotalXP(unc) -> int: ...

    # void PriWrapper::SetTotalXP(int newTotalXP) [member function]
    bop SetTotalXP(unc, newTotalXP: int) -> NPC: ...

    # int PriWrapper::GetXpLevel() [member function]
    bop GetXpLevel(unc) -> int: ...

    # void PriWrapper::SetXpLevel(int newXpLevel) [member function]
    bop SetXpLevel(unc, newXpLevel: int) -> NPC: ...

    # float PriWrapper::GetDodgeInputThreshold() [member function]
    bop GetDodgeInputThreshold(unc) -> float: ...

    # void PriWrapper::SetDodgeInputThreshold(float newDodgeInputThreshold) [member function]
    bop SetDodgeInputThreshold(unc, newDodgeInputThreshold: float) -> NPC: ...

    # float PriWrapper::GetSteeringSensitivity() [member function]
    bop GetSteeringSensitivity(unc) -> float: ...

    # void PriWrapper::SetSteeringSensitivity(float newSteeringSensitivity) [member function]
    bop SetSteeringSensitivity(unc, newSteeringSensitivity: float) -> NPC: ...

    # float PriWrapper::GetAirControlSensitivity() [member function]
    bop GetAirControlSensitivity(unc) -> float: ...

    # void PriWrapper::SetAirControlSensitivity(float newAirControlSensitivity) [member function]
    bop SetAirControlSensitivity(unc, newAirControlSensitivity: float) -> NPC: ...

    # float PriWrapper::GetNextTimeRestrictedStatEventAllowedTime() [member function]
    bop GetNextTimeRestrictedStatEventAllowedTime(unc) -> float: ...

    # void PriWrapper::SetNextTimeRestrictedStatEventAllowedTime(float newNextTimeRestrictedStatEventAllowedTime) [member function]
    bop SetNextTimeRestrictedStatEventAllowedTime(unc, newNextTimeRestrictedStatEventAllowedTime: float) -> NPC: ...

    # float PriWrapper::GetLastTimeRestrictedStatEventTime() [member function]
    bop GetLastTimeRestrictedStatEventTime(unc) -> float: ...

    # void PriWrapper::SetLastTimeRestrictedStatEventTime(float newLastTimeRestrictedStatEventTime) [member function]
    bop SetLastTimeRestrictedStatEventTime(unc, newLastTimeRestrictedStatEventTime: float) -> NPC: ...

    # int PriWrapper::GetTimeTillItem() [member function]
    bop GetTimeTillItem(unc) -> int: ...

    # void PriWrapper::SetTimeTillItem(int newTimeTillItem) [member function]
    bop SetTimeTillItem(unc, newTimeTillItem: int) -> NPC: ...

    # int PriWrapper::GetMaxTimeTillItem() [member function]
    bop GetMaxTimeTillItem(unc) -> int: ...

    # void PriWrapper::SetMaxTimeTillItem(int newMaxTimeTillItem) [member function]
    bop SetMaxTimeTillItem(unc, newMaxTimeTillItem: int) -> NPC: ...

    # int PriWrapper::GetBoostPickups() [member function]
    bop GetBoostPickups(unc) -> int: ...

    # void PriWrapper::SetBoostPickups(int newBoostPickups) [member function]
    bop SetBoostPickups(unc, newBoostPickups: int) -> NPC: ...

    # int PriWrapper::GetBallTouches() [member function]
    bop GetBallTouches(unc) -> int: ...

    # void PriWrapper::SetBallTouches(int newBallTouches) [member function]
    bop SetBallTouches(unc, newBallTouches: int) -> NPC: ...

    # int PriWrapper::GetCarTouches() [member function]
    bop GetCarTouches(unc) -> int: ...

    # void PriWrapper::SetCarTouches(int newCarTouches) [member function]
    bop SetCarTouches(unc, newCarTouches: int) -> NPC: ...

    # PriWrapper PriWrapper::GetReplacingBotPRI() [member function]
    bop GetReplacingBotPRI(unc) -> PriWrapper: ...

    # void PriWrapper::SetReplacingBotPRI(PriWrapper newReplacingBotPRI) [member function]
    bop SetReplacingBotPRI(unc, newReplacingBotPRI: PriWrapper) -> NPC: ...

    # long long unsigned int PriWrapper::GetClubID() [member function]
    bop GetClubID(unc) -> int: ...

    # void PriWrapper::SetClubID(long long unsigned int newClubID) [member function]
    bop SetClubID(unc, newClubID: int) -> NPC: ...

    # UnrealStringWrapper PriWrapper::GetPublicIP() [member function]
    bop GetPublicIP(unc) -> UnrealStringWrapper: ...

    # int PriWrapper::GetSpectatorShortcut() [member function]
    bop GetSpectatorShortcut(unc) -> int: ...

    # void PriWrapper::SetSpectatorShortcut(int newSpectatorShortcut) [member function]
    bop SetSpectatorShortcut(unc, newSpectatorShortcut: int) -> NPC: ...

    # ClubDetailsWrapper PriWrapper::GetClubDetails() [member function]
    bop GetClubDetails(unc) -> ClubDetailsWrapper: ...

    # void PriWrapper::__ClubID__ChangeNotifyFunc() [member function]
    bop __ClubID__ChangeNotifyFunc(unc) -> NPC: ...

    # void PriWrapper::__PREI__ChangeNotifyFunc() [member function]
    bop __PREI__ChangeNotifyFunc(unc) -> NPC: ...

    # void PriWrapper::__ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc() [member function]
    bop __ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc(unc) -> NPC: ...

    # void PriWrapper::eventDestroyed() [member function]
    bop eventDestroyed(unc) -> NPC: ...

    # void PriWrapper::OnSpectatorShortcutChanged() [member function]
    bop OnSpectatorShortcutChanged(unc) -> NPC: ...

    # void PriWrapper::SetSpectatorShortcut2(int InShortcut) [member function]
    bop SetSpectatorShortcut2(unc, InShortcut: int) -> NPC: ...

    # void PriWrapper::ServerSetPublicIP(std::string IP) [member function]
    bop ServerSetPublicIP(unc, IP: str) -> NPC: ...

    # void PriWrapper::OnUniqueIdChanged() [member function]
    bop OnUniqueIdChanged(unc) -> NPC: ...

    # void PriWrapper::UpdatePlayerAvatarBorder() [member function]
    bop UpdatePlayerAvatarBorder(unc) -> NPC: ...

    # void PriWrapper::UpdatePlayerBanner() [member function]
    bop UpdatePlayerBanner(unc) -> NPC: ...

    # void PriWrapper::ClientAchievementProgression(int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress) [member function]
    bop ClientAchievementProgression(unc, AchievementId: int, AchievementType: int, Progress: float, MaxProgress: float) -> NPC: ...

    # void PriWrapper::ClientUnlockAchievement(int AchievementId, unsigned char AchievementType) [member function]
    bop ClientUnlockAchievement(unc, AchievementId: int, AchievementType: int) -> NPC: ...

    # void PriWrapper::ServerSetPlayerActivatedFX(FXActorWrapper FX) [member function]
    bop ServerSetPlayerActivatedFX(unc, FX: FXActorWrapper) -> NPC: ...

    # void PriWrapper::UpdateCarLocalPlayer() [member function]
    bop UpdateCarLocalPlayer(unc) -> NPC: ...

    # void PriWrapper::OnReplacingBotPRIChanged() [member function]
    bop OnReplacingBotPRIChanged(unc) -> NPC: ...

    # void PriWrapper::OnTeamChanged() [member function]
    bop OnTeamChanged(unc) -> NPC: ...

    # void PriWrapper::ClearBotReplacement() [member function]
    bop ClearBotReplacement(unc) -> NPC: ...

    # void PriWrapper::ReportCheater(std::string Reason) [member function]
    bop ReportCheater(unc, Reason: str) -> NPC: ...

    # bool PriWrapper::ValidateLoadoutTeamPaints() [member function]
    bop ValidateLoadoutTeamPaints(unc) -> bool: ...

    # bool PriWrapper::ValidateLoadoutSlots() [member function]
    bop ValidateLoadoutSlots(unc) -> bool: ...

    # void PriWrapper::ValidateLoadoutDLC() [member function]
    bop ValidateLoadoutDLC(unc) -> NPC: ...

    # void PriWrapper::OnStartVoteToForfeitDisabledChanged() [member function]
    bop OnStartVoteToForfeitDisabledChanged(unc) -> NPC: ...

    # void PriWrapper::SetStartVoteToForfeitDisabled(long unsigned int bDisabled) [member function]
    bop SetStartVoteToForfeitDisabled(unc, bDisabled: bool) -> NPC: ...

    # void PriWrapper::ServerVoteToForfeit() [member function]
    bop ServerVoteToForfeit(unc) -> NPC: ...

    # void PriWrapper::SetUserCarPreferences(float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity) [member function]
    bop SetUserCarPreferences(unc, NewDodgeThreshold: float, NewSteeringSensitivity: float, NewAirControlSensitivity: float) -> NPC: ...

    # void PriWrapper::ServerSetUserCarPreferences(float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity) [member function]
    bop ServerSetUserCarPreferences(unc, NewDodgeThreshold: float, NewSteeringSensitivity: float, NewAirControlSensitivity: float) -> NPC: ...

    # int PriWrapper::ValidateUserInt(std::string Reason, int NewValue, int Min, int Max) [member function]
    bop ValidateUserInt(unc, Reason: str, NewValue: int, Min: int, Max: int) -> int: ...

    # float PriWrapper::ValidateUserFloat(std::string Reason, float NewValue, float Min, float Max) [member function]
    bop ValidateUserFloat(unc, Reason: str, NewValue: float, Min: float, Max: float) -> float: ...

    # void PriWrapper::SetXPInfo(int InTotalXP, int InXPLevel) [member function]
    bop SetXPInfo(unc, InTotalXP: int, InXPLevel: int) -> NPC: ...

    # void PriWrapper::SetTotalXP2(int NewXP) [member function]
    bop SetTotalXP2(unc, NewXP: int) -> NPC: ...

    # void PriWrapper::OnPawnTypeChanged() [member function]
    bop OnPawnTypeChanged(unc) -> NPC: ...

    # void PriWrapper::SetWaitingPlayer(long unsigned int B) [member function]
    bop SetWaitingPlayer(unc, B: bool) -> NPC: ...

    # void PriWrapper::SetPawnType2(unsigned char NewPawnType) [member function]
    bop SetPawnType2(unc, NewPawnType: int) -> NPC: ...

    # bool PriWrapper::IsPlayer() [member function]
    bop IsPlayer(unc) -> bool: ...

    # bool PriWrapper::IsEditor() [member function]
    bop IsEditor(unc) -> bool: ...

    # bool PriWrapper::IsSpectator() [member function]
    bop IsSpectator(unc) -> bool: ...

    # void PriWrapper::ServerSpectate() [member function]
    bop ServerSpectate(unc) -> NPC: ...

    # void PriWrapper::ClientChangeTeamFailed(int TeamNum) [member function]
    bop ClientChangeTeamFailed(unc, TeamNum: int) -> NPC: ...

    # void PriWrapper::ServerChangeTeam(int TeamNum) [member function]
    bop ServerChangeTeam(unc, TeamNum: int) -> NPC: ...

    # void PriWrapper::ReplicatePodiumTitles() [member function]
    bop ReplicatePodiumTitles(unc) -> NPC: ...

    # void PriWrapper::OnMatchAdmin() [member function]
    bop OnMatchAdmin(unc) -> NPC: ...

    # void PriWrapper::OnMVPChange() [member function]
    bop OnMVPChange(unc) -> NPC: ...

    # void PriWrapper::NotifyWonMVP() [member function]
    bop NotifyWonMVP(unc) -> NPC: ...

    # bool PriWrapper::IsInvalidName() [member function]
    bop IsInvalidName(unc) -> bool: ...

    # bool PriWrapper::IsInWarmUpMode() [member function]
    bop IsInWarmUpMode(unc) -> bool: ...

    # void PriWrapper::SetReady(long unsigned int bNewReady) [member function]
    bop SetReady(unc, bNewReady: bool) -> NPC: ...

    # void PriWrapper::ServerMatchAdminSetPaused(long unsigned int bPause) [member function]
    bop ServerMatchAdminSetPaused(unc, bPause: bool) -> NPC: ...

    # void PriWrapper::ServerMatchAdminSetScoreAndTime(int NewScoreTeam0, int NewScoreTeam1, int SecondsRemaining, long unsigned int bOverTime, long unsigned int bRestartRound) [member function]
    bop ServerMatchAdminSetScoreAndTime(unc, NewScoreTeam0: int, NewScoreTeam1: int, SecondsRemaining: int, bOverTime: bool, bRestartRound: bool) -> NPC: ...

    # void PriWrapper::SetMatchAdmin(long unsigned int bIsMatchAdmin) [member function]
    bop SetMatchAdmin(unc, bIsMatchAdmin: bool) -> NPC: ...

    # void PriWrapper::ServerReadyUp() [member function]
    bop ServerReadyUp(unc) -> NPC: ...

    # bool PriWrapper::ShouldBroadCastWelcomeMessage(long unsigned int bExiting) [member function]
    bop ShouldBroadCastWelcomeMessage(unc, bExiting: bool) -> bool: ...

    # void PriWrapper::UpdateOnlineProductStats() [member function]
    bop UpdateOnlineProductStats(unc) -> NPC: ...

    # void PriWrapper::SetWaitingStartTime2() [member function]
    bop SetWaitingStartTime2(unc) -> NPC: ...

    # void PriWrapper::OnRespawnTimeRemainingChanged() [member function]
    bop OnRespawnTimeRemainingChanged(unc) -> NPC: ...

    # void PriWrapper::SetRespawnTime2(int NewTime) [member function]
    bop SetRespawnTime2(unc, NewTime: int) -> NPC: ...

    # void PriWrapper::ClientScoredGoal(Vector & BallHitLocation) [member function]
    bop ClientScoredGoal(unc, BallHitLocation: Vector) -> NPC: ...

    # void PriWrapper::OnScoredGoal(Vector & BallHitLocation) [member function]
    bop OnScoredGoal(unc, BallHitLocation: Vector) -> NPC: ...

    # void PriWrapper::OnRep_SteeringSensitivity() [member function]
    bop OnRep_SteeringSensitivity(unc) -> NPC: ...

    # void PriWrapper::OnRep_ClientScorePoint() [member function]
    bop OnRep_ClientScorePoint(unc) -> NPC: ...

    # void PriWrapper::ResetScore() [member function]
    bop ResetScore(unc) -> NPC: ...

    # void PriWrapper::RemovePoints(int Points) [member function]
    bop RemovePoints(unc, Points: int) -> NPC: ...

    # void PriWrapper::ScorePoint2(int AdditionalScore) [member function]
    bop ScorePoint2(unc, AdditionalScore: int) -> NPC: ...

    # bool PriWrapper::CanAwardTimeRestrictedStatEvent() [member function]
    bop CanAwardTimeRestrictedStatEvent(unc) -> bool: ...

    # void PriWrapper::RecordTimeRestrictedStatEvent() [member function]
    bop RecordTimeRestrictedStatEvent(unc) -> NPC: ...

    # void PriWrapper::ResetTimeRestrictedStatEvent() [member function]
    bop ResetTimeRestrictedStatEvent(unc) -> NPC: ...

    # int PriWrapper::GetMatchXP() [member function]
    bop GetMatchXP(unc) -> int: ...

    # void PriWrapper::CommitStats() [member function]
    bop CommitStats(unc) -> NPC: ...

    # void PriWrapper::UpdateFromLoadout() [member function]
    bop UpdateFromLoadout(unc) -> NPC: ...

    # void PriWrapper::UpdateUserCarPreferences(AirControlComponentWrapper AirControlComponent) [member function]
    bop UpdateUserCarPreferences(unc, AirControlComponent: AirControlComponentWrapper) -> NPC: ...

    # void PriWrapper::HandleAirControl(AirControlComponentWrapper AirControlComp) [member function]
    bop HandleAirControl(unc, AirControlComp: AirControlComponentWrapper) -> NPC: ...

    # void PriWrapper::SetCar2(CarWrapper NewCar) [member function]
    bop SetCar2(unc, NewCar: CarWrapper) -> NPC: ...

    # bool PriWrapper::IsClientPlayerPRI() [member function]
    bop IsClientPlayerPRI(unc) -> bool: ...

    # bool PriWrapper::IsLocalPlayerPRI() [member function]
    bop IsLocalPlayerPRI(unc) -> bool: ...

    # void PriWrapper::Unregister() [member function]
    bop Unregister(unc) -> NPC: ...

    # void PriWrapper::AddLocalPlayerToGameEvent() [member function]
    bop AddLocalPlayerToGameEvent(unc) -> NPC: ...

    # void PriWrapper::OnLoadoutsSetInternal() [member function]
    bop OnLoadoutsSetInternal(unc) -> NPC: ...

    # bool PriWrapper::AreLoadoutsSet() [member function]
    bop AreLoadoutsSet(unc) -> bool: ...

    # void PriWrapper::OnLoadoutsOnlineSet() [member function]
    bop OnLoadoutsOnlineSet(unc) -> NPC: ...

    # void PriWrapper::OnLoadoutsSet2() [member function]
    bop OnLoadoutsSet2(unc) -> NPC: ...

    # void PriWrapper::RemoveCertifiedProductStat(long long unsigned int InstanceID) [member function]
    bop RemoveCertifiedProductStat(unc, InstanceID: int) -> NPC: ...

    # void PriWrapper::InitLoadoutAttributesForTeam(PriXWrapper PRI) [member function]
    bop InitLoadoutAttributesForTeam(unc, PRI: PriXWrapper) -> NPC: ...

    # bool PriWrapper::ShouldValidateOnlineProducts() [member function]
    bop ShouldValidateOnlineProducts(unc) -> bool: ...

    # void PriWrapper::OnSplitScreenStatusChanged() [member function]
    bop OnSplitScreenStatusChanged(unc) -> NPC: ...

    # void PriWrapper::ServerSplitScreenStatusChanged(long unsigned int bInSplitScreen) [member function]
    bop ServerSplitScreenStatusChanged(unc, bInSplitScreen: bool) -> NPC: ...

    # void PriWrapper::UpdateSplitScreenStatus() [member function]
    bop UpdateSplitScreenStatus(unc) -> NPC: ...

    # void PriWrapper::OnPartyLeaderChanged() [member function]
    bop OnPartyLeaderChanged(unc) -> NPC: ...

    # void PriWrapper::ServerSetPartyLeader(SteamID & InPartyLeader, long unsigned int bInParty) [member function]
    bop ServerSetPartyLeader(unc, InPartyLeader: SteamID, bInParty: bool) -> NPC: ...

    # void PriWrapper::SetPartyLeader2(SteamID & InPartyLeader, long unsigned int bInParty) [member function]
    bop SetPartyLeader2(unc, InPartyLeader: SteamID, bInParty: bool) -> NPC: ...

    # void PriWrapper::UpdatePartyStatus() [member function]
    bop UpdatePartyStatus(unc) -> NPC: ...

    # void PriWrapper::OnSkillTierChanged() [member function]
    bop OnSkillTierChanged(unc) -> NPC: ...

    # void PriWrapper::ReplicateSkillTier(int NewTier) [member function]
    bop ReplicateSkillTier(unc, NewTier: int) -> NPC: ...

    # void PriWrapper::OnTitleChanged() [member function]
    bop OnTitleChanged(unc) -> NPC: ...

    # void PriWrapper::SyncPlayerTitle() [member function]
    bop SyncPlayerTitle(unc) -> NPC: ...

    # void PriWrapper::UpdateTitleFromLoadout() [member function]
    bop UpdateTitleFromLoadout(unc) -> NPC: ...

    # void PriWrapper::UpdateTitle2() [member function]
    bop UpdateTitle2(unc) -> NPC: ...

    # void PriWrapper::GetNewFriendKey() [member function]
    bop GetNewFriendKey(unc) -> NPC: ...

    # void PriWrapper::ServerSetPlayerHistoryKey(unsigned char * HistoryKeyArray) [member function]
    bop ServerSetPlayerHistoryKey(unc, HistoryKeyArray: str) -> NPC: ...

    # void PriWrapper::OnRep_UniqueId() [member function]
    bop OnRep_UniqueId(unc) -> NPC: ...

    # void PriWrapper::EventOwnerChanged(PriWrapper PRI) [member function]
    bop EventOwnerChanged(unc, PRI: PriWrapper) -> NPC: ...

    # void PriWrapper::EventSpectatorShortcutChanged(PriWrapper PRI) [member function]
    bop EventSpectatorShortcutChanged(unc, PRI: PriWrapper) -> NPC: ...

    # void PriWrapper::EventServerAchievementProgression(PriWrapper PRI, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress) [member function]
    bop EventServerAchievementProgression(unc, PRI: PriWrapper, AchievementId: int, AchievementType: int, Progress: float, MaxProgress: float) -> NPC: ...

    # void PriWrapper::EventStartVoteToForfeitDisabledChanged(PriWrapper PRI) [member function]
    bop EventStartVoteToForfeitDisabledChanged(unc, PRI: PriWrapper) -> NPC: ...

    # void PriWrapper::EventCarPreUpdate(PriWrapper PRI) [member function]
    bop EventCarPreUpdate(unc, PRI: PriWrapper) -> NPC: ...

    # void PriWrapper::EventVanityChanged() [member function]
    bop EventVanityChanged(unc) -> NPC: ...

    # Private:
    # PriWrapper::Impl [class declaration]

    # PriWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



