lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi VehicleWrapper():
    # Public:
    # VehicleWrapper::VehicleWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # VehicleWrapper::VehicleWrapper(VehicleWrapper const & other) [constructor]

    # VehicleWrapper & VehicleWrapper::operator=(VehicleWrapper rhs) [member operator]

    # VehicleWrapper::~VehicleWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbCanJump() [member function]
    bop GetbCanJump(unc) -> bool: ...

    # void VehicleWrapper::SetbCanJump(long unsigned int newbCanJump) [member function]
    bop SetbCanJump(unc, newbCanJump: bool) -> NPC: ...

    # VehicleSimWrapper VehicleWrapper::GetVehicleSim() [member function]
    bop GetVehicleSim(unc) -> VehicleSimWrapper: ...

    # void VehicleWrapper::SetVehicleSim(VehicleSimWrapper newVehicleSim) [member function]
    bop SetVehicleSim(unc, newVehicleSim: VehicleSimWrapper) -> NPC: ...

    # StickyForceData VehicleWrapper::GetStickyForce() [member function]
    bop GetStickyForce(unc) -> StickyForceData: ...

    # void VehicleWrapper::SetStickyForce(StickyForceData newStickyForce) [member function]
    bop SetStickyForce(unc, newStickyForce: StickyForceData) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbDriving() [member function]
    bop GetbDriving(unc) -> bool: ...

    # void VehicleWrapper::SetbDriving(long unsigned int newbDriving) [member function]
    bop SetbDriving(unc, newbDriving: bool) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbReplicatedHandbrake() [member function]
    bop GetbReplicatedHandbrake(unc) -> bool: ...

    # void VehicleWrapper::SetbReplicatedHandbrake(long unsigned int newbReplicatedHandbrake) [member function]
    bop SetbReplicatedHandbrake(unc, newbReplicatedHandbrake: bool) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbJumped() [member function]
    bop GetbJumped(unc) -> bool: ...

    # void VehicleWrapper::SetbJumped(long unsigned int newbJumped) [member function]
    bop SetbJumped(unc, newbJumped: bool) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbDoubleJumped() [member function]
    bop GetbDoubleJumped(unc) -> bool: ...

    # void VehicleWrapper::SetbDoubleJumped(long unsigned int newbDoubleJumped) [member function]
    bop SetbDoubleJumped(unc, newbDoubleJumped: bool) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbOnGround() [member function]
    bop GetbOnGround(unc) -> bool: ...

    # void VehicleWrapper::SetbOnGround(long unsigned int newbOnGround) [member function]
    bop SetbOnGround(unc, newbOnGround: bool) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbSuperSonic() [member function]
    bop GetbSuperSonic(unc) -> bool: ...

    # void VehicleWrapper::SetbSuperSonic(long unsigned int newbSuperSonic) [member function]
    bop SetbSuperSonic(unc, newbSuperSonic: bool) -> NPC: ...

    # long unsigned int VehicleWrapper::GetbPodiumMode() [member function]
    bop GetbPodiumMode(unc) -> bool: ...

    # void VehicleWrapper::SetbPodiumMode(long unsigned int newbPodiumMode) [member function]
    bop SetbPodiumMode(unc, newbPodiumMode: bool) -> NPC: ...

    # ControllerInput VehicleWrapper::GetInput() [member function]
    bop GetInput(unc) -> ControllerInput: ...

    # void VehicleWrapper::SetInput(ControllerInput newInput) [member function]
    bop SetInput(unc, newInput: ControllerInput) -> NPC: ...

    # unsigned char VehicleWrapper::GetReplicatedThrottle() [member function]
    bop GetReplicatedThrottle(unc) -> int: ...

    # void VehicleWrapper::SetReplicatedThrottle(unsigned char newReplicatedThrottle) [member function]
    bop SetReplicatedThrottle(unc, newReplicatedThrottle: int) -> NPC: ...

    # unsigned char VehicleWrapper::GetReplicatedSteer() [member function]
    bop GetReplicatedSteer(unc) -> int: ...

    # void VehicleWrapper::SetReplicatedSteer(unsigned char newReplicatedSteer) [member function]
    bop SetReplicatedSteer(unc, newReplicatedSteer: int) -> NPC: ...

    # AIControllerWrapper VehicleWrapper::GetAIController() [member function]
    bop GetAIController(unc) -> AIControllerWrapper: ...

    # PlayerControllerWrapper VehicleWrapper::GetPlayerController() [member function]
    bop GetPlayerController(unc) -> PlayerControllerWrapper: ...

    # void VehicleWrapper::SetPlayerController(PlayerControllerWrapper newPlayerController) [member function]
    bop SetPlayerController(unc, newPlayerController: PlayerControllerWrapper) -> NPC: ...

    # PriWrapper VehicleWrapper::GetPRI() [member function]
    bop GetPRI(unc) -> PriWrapper: ...

    # void VehicleWrapper::SetPRI(PriWrapper newPRI) [member function]
    bop SetPRI(unc, newPRI: PriWrapper) -> NPC: ...

    # int VehicleWrapper::GetVehicleUpdateTag() [member function]
    bop GetVehicleUpdateTag(unc) -> int: ...

    # void VehicleWrapper::SetVehicleUpdateTag(int newVehicleUpdateTag) [member function]
    bop SetVehicleUpdateTag(unc, newVehicleUpdateTag: int) -> NPC: ...

    # Vector VehicleWrapper::GetLocalCollisionOffset() [member function]
    bop GetLocalCollisionOffset(unc) -> Vector: ...

    # void VehicleWrapper::SetLocalCollisionOffset(Vector newLocalCollisionOffset) [member function]
    bop SetLocalCollisionOffset(unc, newLocalCollisionOffset: Vector) -> NPC: ...

    # Vector VehicleWrapper::GetLocalCollisionExtent() [member function]
    bop GetLocalCollisionExtent(unc) -> Vector: ...

    # void VehicleWrapper::SetLocalCollisionExtent(Vector newLocalCollisionExtent) [member function]
    bop SetLocalCollisionExtent(unc, newLocalCollisionExtent: Vector) -> NPC: ...

    # int VehicleWrapper::GetLastBallTouchFrame() [member function]
    bop GetLastBallTouchFrame(unc) -> int: ...

    # void VehicleWrapper::SetLastBallTouchFrame(int newLastBallTouchFrame) [member function]
    bop SetLastBallTouchFrame(unc, newLastBallTouchFrame: int) -> NPC: ...

    # int VehicleWrapper::GetLastBallImpactFrame() [member function]
    bop GetLastBallImpactFrame(unc) -> int: ...

    # void VehicleWrapper::SetLastBallImpactFrame(int newLastBallImpactFrame) [member function]
    bop SetLastBallImpactFrame(unc, newLastBallImpactFrame: int) -> NPC: ...

    # BoostWrapper VehicleWrapper::GetBoostComponent() [member function]
    bop GetBoostComponent(unc) -> BoostWrapper: ...

    # DodgeComponentWrapper VehicleWrapper::GetDodgeComponent() [member function]
    bop GetDodgeComponent(unc) -> DodgeComponentWrapper: ...

    # AirControlComponentWrapper VehicleWrapper::GetAirControlComponent() [member function]
    bop GetAirControlComponent(unc) -> AirControlComponentWrapper: ...

    # JumpComponentWrapper VehicleWrapper::GetJumpComponent() [member function]
    bop GetJumpComponent(unc) -> JumpComponentWrapper: ...

    # DoubleJumpComponentWrapper VehicleWrapper::GetDoubleJumpComponent() [member function]
    bop GetDoubleJumpComponent(unc) -> DoubleJumpComponentWrapper: ...

    # void VehicleWrapper::SetDoubleJumpComponent(DoubleJumpComponentWrapper newDoubleJumpComponent) [member function]
    bop SetDoubleJumpComponent(unc, newDoubleJumpComponent: DoubleJumpComponentWrapper) -> NPC: ...

    # float VehicleWrapper::GetTimeBelowSupersonicSpeed() [member function]
    bop GetTimeBelowSupersonicSpeed(unc) -> float: ...

    # void VehicleWrapper::SetTimeBelowSupersonicSpeed(float newTimeBelowSupersonicSpeed) [member function]
    bop SetTimeBelowSupersonicSpeed(unc, newTimeBelowSupersonicSpeed: float) -> NPC: ...

    # void VehicleWrapper::ForceNetPacketIfNearBall() [member function]
    bop ForceNetPacketIfNearBall(unc) -> NPC: ...

    # bool VehicleWrapper::IsCarWithinForwardEllipticalCone(VehicleWrapper OtherCar, float YawAngleDegrees, float PitchAngleDegrees) [member function]
    bop IsCarWithinForwardEllipticalCone(unc, OtherCar: VehicleWrapper, YawAngleDegrees: float, PitchAngleDegrees: float) -> bool: ...

    # float VehicleWrapper::GetForwardSpeed() [member function]
    bop GetForwardSpeed(unc) -> float: ...

    # float VehicleWrapper::GetTimeOffGround() [member function]
    bop GetTimeOffGround(unc) -> float: ...

    # float VehicleWrapper::GetTimeOnGround() [member function]
    bop GetTimeOnGround(unc) -> float: ...

    # Vector VehicleWrapper::GetGroundNormal() [member function]
    bop GetGroundNormal(unc) -> Vector: ...

    # bool VehicleWrapper::IsOnWall() [member function]
    bop IsOnWall(unc) -> bool: ...

    # bool VehicleWrapper::IsOnGround() [member function]
    bop IsOnGround(unc) -> bool: ...

    # int VehicleWrapper::GetNumWheelWorldContacts() [member function]
    bop GetNumWheelWorldContacts(unc) -> int: ...

    # int VehicleWrapper::GetNumWheelContacts() [member function]
    bop GetNumWheelContacts(unc) -> int: ...

    # void VehicleWrapper::ZeroMovementVariables() [member function]
    bop ZeroMovementVariables(unc) -> NPC: ...

    # void VehicleWrapper::eventSetVehicleInput(ControllerInput & NewInput) [member function]
    bop eventSetVehicleInput(unc, NewInput: ControllerInput) -> NPC: ...

    # void VehicleWrapper::EnablePodiumMode() [member function]
    bop EnablePodiumMode(unc) -> NPC: ...

    # void VehicleWrapper::SetDriving(long unsigned int bDrive) [member function]
    bop SetDriving(unc, bDrive: bool) -> NPC: ...

    # void VehicleWrapper::InitAudioParams() [member function]
    bop InitAudioParams(unc) -> NPC: ...

    # void VehicleWrapper::OnPRIChanged() [member function]
    bop OnPRIChanged(unc) -> NPC: ...

    # void VehicleWrapper::OnControllerChanged() [member function]
    bop OnControllerChanged(unc) -> NPC: ...

    # void VehicleWrapper::UnPossessed() [member function]
    bop UnPossessed(unc) -> NPC: ...

    # void VehicleWrapper::EventPRIChanged(VehicleWrapper Vehicle) [member function]
    bop EventPRIChanged(unc, Vehicle: VehicleWrapper) -> NPC: ...

    # Private:
    # VehicleWrapper::Impl [class declaration]

    # VehicleWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



