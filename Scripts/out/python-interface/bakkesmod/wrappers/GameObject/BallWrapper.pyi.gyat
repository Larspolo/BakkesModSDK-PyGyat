lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi BallWrapper():
    # Public:
    # BallWrapper::BallWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # BallWrapper::BallWrapper(BallWrapper const & other) [constructor]

    # BallWrapper & BallWrapper::operator=(BallWrapper rhs) [member operator]

    # BallWrapper::~BallWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # float BallWrapper::GetLastTouchTime() [member function]
    bop GetLastTouchTime(unc) -> float: ...

    # PredictionInfo BallWrapper::PredictPosition(float timeAhead) [member function]
    bop PredictPosition(unc, timeAhead: float) -> PredictionInfo: ...

    # FXActorWrapper BallWrapper::GetEndOfGameFXArchetype() [member function]
    bop GetEndOfGameFXArchetype(unc) -> FXActorWrapper: ...

    # void BallWrapper::SetEndOfGameFXArchetype(FXActorWrapper newEndOfGameFXArchetype) [member function]
    bop SetEndOfGameFXArchetype(unc, newEndOfGameFXArchetype: FXActorWrapper) -> NPC: ...

    # long unsigned int BallWrapper::GetbAllowPlayerExplosionOverride() [member function]
    bop GetbAllowPlayerExplosionOverride(unc) -> bool: ...

    # void BallWrapper::SetbAllowPlayerExplosionOverride(long unsigned int newbAllowPlayerExplosionOverride) [member function]
    bop SetbAllowPlayerExplosionOverride(unc, newbAllowPlayerExplosionOverride: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbNotifyGroundHit() [member function]
    bop GetbNotifyGroundHit(unc) -> bool: ...

    # void BallWrapper::SetbNotifyGroundHit(long unsigned int newbNotifyGroundHit) [member function]
    bop SetbNotifyGroundHit(unc, newbNotifyGroundHit: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbEndOfGameHidden() [member function]
    bop GetbEndOfGameHidden(unc) -> bool: ...

    # void BallWrapper::SetbEndOfGameHidden(long unsigned int newbEndOfGameHidden) [member function]
    bop SetbEndOfGameHidden(unc, newbEndOfGameHidden: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbFadeIn() [member function]
    bop GetbFadeIn(unc) -> bool: ...

    # void BallWrapper::SetbFadeIn(long unsigned int newbFadeIn) [member function]
    bop SetbFadeIn(unc, newbFadeIn: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbFadeOut() [member function]
    bop GetbFadeOut(unc) -> bool: ...

    # void BallWrapper::SetbFadeOut(long unsigned int newbFadeOut) [member function]
    bop SetbFadeOut(unc, newbFadeOut: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbPredictionOnGround() [member function]
    bop GetbPredictionOnGround(unc) -> bool: ...

    # void BallWrapper::SetbPredictionOnGround(long unsigned int newbPredictionOnGround) [member function]
    bop SetbPredictionOnGround(unc, newbPredictionOnGround: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbCanBeAttached() [member function]
    bop GetbCanBeAttached(unc) -> bool: ...

    # void BallWrapper::SetbCanBeAttached(long unsigned int newbCanBeAttached) [member function]
    bop SetbCanBeAttached(unc, newbCanBeAttached: bool) -> NPC: ...

    # long unsigned int BallWrapper::GetbItemFreeze() [member function]
    bop GetbItemFreeze(unc) -> bool: ...

    # void BallWrapper::SetbItemFreeze(long unsigned int newbItemFreeze) [member function]
    bop SetbItemFreeze(unc, newbItemFreeze: bool) -> NPC: ...

    # Vector BallWrapper::GetMagnusCoefficient() [member function]
    bop GetMagnusCoefficient(unc) -> Vector: ...

    # void BallWrapper::SetMagnusCoefficient(Vector newMagnusCoefficient) [member function]
    bop SetMagnusCoefficient(unc, newMagnusCoefficient: Vector) -> NPC: ...

    # float BallWrapper::GetRadius() [member function]
    bop GetRadius(unc) -> float: ...

    # void BallWrapper::SetRadius(float newRadius) [member function]
    bop SetRadius(unc, newRadius: float) -> NPC: ...

    # float BallWrapper::GetVisualRadius() [member function]
    bop GetVisualRadius(unc) -> float: ...

    # void BallWrapper::SetVisualRadius(float newVisualRadius) [member function]
    bop SetVisualRadius(unc, newVisualRadius: float) -> NPC: ...

    # float BallWrapper::GetLastCalculateCarHit() [member function]
    bop GetLastCalculateCarHit(unc) -> float: ...

    # Vector BallWrapper::GetInitialLocation() [member function]
    bop GetInitialLocation(unc) -> Vector: ...

    # void BallWrapper::SetInitialLocation(Vector newInitialLocation) [member function]
    bop SetInitialLocation(unc, newInitialLocation: Vector) -> NPC: ...

    # void BallWrapper::SetInitialRotation(Rotator newInitialRotation) [member function]
    bop SetInitialRotation(unc, newInitialRotation: Rotator) -> NPC: ...

    # float BallWrapper::GetLastHitWorldTime() [member function]
    bop GetLastHitWorldTime(unc) -> float: ...

    # float BallWrapper::GetReplicatedBallScale() [member function]
    bop GetReplicatedBallScale(unc) -> float: ...

    # void BallWrapper::SetReplicatedBallScale(float newReplicatedBallScale) [member function]
    bop SetReplicatedBallScale(unc, newReplicatedBallScale: float) -> NPC: ...

    # float BallWrapper::GetReplicatedWorldBounceScale() [member function]
    bop GetReplicatedWorldBounceScale(unc) -> float: ...

    # void BallWrapper::SetReplicatedWorldBounceScale(float newReplicatedWorldBounceScale) [member function]
    bop SetReplicatedWorldBounceScale(unc, newReplicatedWorldBounceScale: float) -> NPC: ...

    # float BallWrapper::GetReplicatedBallGravityScale() [member function]
    bop GetReplicatedBallGravityScale(unc) -> float: ...

    # void BallWrapper::SetReplicatedBallGravityScale(float newReplicatedBallGravityScale) [member function]
    bop SetReplicatedBallGravityScale(unc, newReplicatedBallGravityScale: float) -> NPC: ...

    # float BallWrapper::GetReplicatedBallMaxLinearSpeedScale() [member function]
    bop GetReplicatedBallMaxLinearSpeedScale(unc) -> float: ...

    # void BallWrapper::SetReplicatedBallMaxLinearSpeedScale(float newReplicatedBallMaxLinearSpeedScale) [member function]
    bop SetReplicatedBallMaxLinearSpeedScale(unc, newReplicatedBallMaxLinearSpeedScale: float) -> NPC: ...

    # float BallWrapper::GetReplicatedAddedCarBounceScale() [member function]
    bop GetReplicatedAddedCarBounceScale(unc) -> float: ...

    # void BallWrapper::SetReplicatedAddedCarBounceScale(float newReplicatedAddedCarBounceScale) [member function]
    bop SetReplicatedAddedCarBounceScale(unc, newReplicatedAddedCarBounceScale: float) -> NPC: ...

    # float BallWrapper::GetAdditionalCarGroundBounceScaleZ() [member function]
    bop GetAdditionalCarGroundBounceScaleZ(unc) -> float: ...

    # void BallWrapper::SetAdditionalCarGroundBounceScaleZ(float newAdditionalCarGroundBounceScaleZ) [member function]
    bop SetAdditionalCarGroundBounceScaleZ(unc, newAdditionalCarGroundBounceScaleZ: float) -> NPC: ...

    # float BallWrapper::GetAdditionalCarGroundBounceScaleXY() [member function]
    bop GetAdditionalCarGroundBounceScaleXY(unc) -> float: ...

    # void BallWrapper::SetAdditionalCarGroundBounceScaleXY(float newAdditionalCarGroundBounceScaleXY) [member function]
    bop SetAdditionalCarGroundBounceScaleXY(unc, newAdditionalCarGroundBounceScaleXY: float) -> NPC: ...

    # unsigned char BallWrapper::GetHitTeamNum() [member function]
    bop GetHitTeamNum(unc) -> int: ...

    # void BallWrapper::SetHitTeamNum(unsigned char newHitTeamNum) [member function]
    bop SetHitTeamNum(unc, newHitTeamNum: int) -> NPC: ...

    # ServerWrapper BallWrapper::GetGameEvent() [member function]
    bop GetGameEvent(unc) -> ServerWrapper: ...

    # float BallWrapper::GetExplosionTime() [member function]
    bop GetExplosionTime(unc) -> float: ...

    # void BallWrapper::SetExplosionTime(float newExplosionTime) [member function]
    bop SetExplosionTime(unc, newExplosionTime: float) -> NPC: ...

    # Vector BallWrapper::GetOldLocation() [member function]
    bop GetOldLocation(unc) -> Vector: ...

    # void BallWrapper::SetOldLocation(Vector newOldLocation) [member function]
    bop SetOldLocation(unc, newOldLocation: Vector) -> NPC: ...

    # float BallWrapper::GetPredictionTimestep() [member function]
    bop GetPredictionTimestep(unc) -> float: ...

    # void BallWrapper::SetPredictionTimestep(float newPredictionTimestep) [member function]
    bop SetPredictionTimestep(unc, newPredictionTimestep: float) -> NPC: ...

    # float BallWrapper::GetLastPredictionTime() [member function]
    bop GetLastPredictionTime(unc) -> float: ...

    # void BallWrapper::SetLastPredictionTime(float newLastPredictionTime) [member function]
    bop SetLastPredictionTime(unc, newLastPredictionTime: float) -> NPC: ...

    # float BallWrapper::GetGroundForce() [member function]
    bop GetGroundForce(unc) -> float: ...

    # void BallWrapper::SetGroundForce(float newGroundForce) [member function]
    bop SetGroundForce(unc, newGroundForce: float) -> NPC: ...

    # CarWrapper BallWrapper::GetCurrentAffector() [member function]
    bop GetCurrentAffector(unc) -> CarWrapper: ...

    # void BallWrapper::SetCurrentAffector(CarWrapper newCurrentAffector) [member function]
    bop SetCurrentAffector(unc, newCurrentAffector: CarWrapper) -> NPC: ...

    # Vector BallWrapper::GetTrajectoryStartVelocity() [member function]
    bop GetTrajectoryStartVelocity(unc) -> Vector: ...

    # Rotator BallWrapper::GetTrajectoryStartRotation() [member function]
    bop GetTrajectoryStartRotation(unc) -> Rotator: ...

    # Vector BallWrapper::GetTrajectoryStartLocation() [member function]
    bop GetTrajectoryStartLocation(unc) -> Vector: ...

    # bool BallWrapper::ShouldDrawTrajectory() [member function]
    bop ShouldDrawTrajectory(unc) -> bool: ...

    # float BallWrapper::GetAdditionalCarBounceScaleZ(CarWrapper Car) [member function]
    bop GetAdditionalCarBounceScaleZ(unc, Car: CarWrapper) -> float: ...

    # void BallWrapper::SetEndOfGameHidden() [member function]
    bop SetEndOfGameHidden(unc) -> NPC: ...

    # void BallWrapper::Explode(GoalWrapper ExplosionGoal, Vector & ExplodeLocation, PriWrapper Scorer) [member function]
    bop Explode(unc, ExplosionGoal: GoalWrapper, ExplodeLocation: Vector, Scorer: PriWrapper) -> NPC: ...

    # void BallWrapper::DoDestroy() [member function]
    bop DoDestroy(unc) -> NPC: ...

    # void BallWrapper::DoExplode() [member function]
    bop DoExplode(unc) -> NPC: ...

    # void BallWrapper::Launch(Vector & LaunchPosition, Vector & LaunchDirection) [member function]
    bop Launch(unc, LaunchPosition: Vector, LaunchDirection: Vector) -> NPC: ...

    # void BallWrapper::OnCarTouch(CarWrapper HitCar, unsigned char HitType) [member function]
    bop OnCarTouch(unc, HitCar: CarWrapper, HitType: int) -> NPC: ...

    # void BallWrapper::RecordCarHit(CarWrapper HitCar, Vector & HitLocation, Vector & HitNormal, unsigned char HitType) [member function]
    bop RecordCarHit(unc, HitCar: CarWrapper, HitLocation: Vector, HitNormal: Vector, HitType: int) -> NPC: ...

    # bool BallWrapper::IsGroundHit(Vector & HitNormal) [member function]
    bop IsGroundHit(unc, HitNormal: Vector) -> bool: ...

    # void BallWrapper::FellOutOfWorld() [member function]
    bop FellOutOfWorld(unc) -> NPC: ...

    # bool BallWrapper::IsRoundActive() [member function]
    bop IsRoundActive(unc) -> bool: ...

    # void BallWrapper::eventOnHitGoal(GoalWrapper Goal, Vector & HitLoc) [member function]
    bop eventOnHitGoal(unc, Goal: GoalWrapper, HitLoc: Vector) -> NPC: ...

    # void BallWrapper::TurnOff() [member function]
    bop TurnOff(unc) -> NPC: ...

    # void BallWrapper::InitAk() [member function]
    bop InitAk(unc) -> NPC: ...

    # void BallWrapper::SetWorldBounceScale(float NewScale) [member function]
    bop SetWorldBounceScale(unc, NewScale: float) -> NPC: ...

    # void BallWrapper::SetCarBounceScale(float NewScale) [member function]
    bop SetCarBounceScale(unc, NewScale: float) -> NPC: ...

    # void BallWrapper::SetBallMaxLinearSpeedScale(float InMaxLinearSpeedScale) [member function]
    bop SetBallMaxLinearSpeedScale(unc, InMaxLinearSpeedScale: float) -> NPC: ...

    # void BallWrapper::SetBallGravityScale(float InBallGravityScale) [member function]
    bop SetBallGravityScale(unc, InBallGravityScale: float) -> NPC: ...

    # void BallWrapper::SetBallScale(float NewScale) [member function]
    bop SetBallScale(unc, NewScale: float) -> NPC: ...

    # void BallWrapper::EventHitGoal(BallWrapper Ball, GoalWrapper Goal) [member function]
    bop EventHitGoal(unc, Ball: BallWrapper, Goal: GoalWrapper) -> NPC: ...

    # Private:
    # BallWrapper::Impl [class declaration]

    # BallWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



