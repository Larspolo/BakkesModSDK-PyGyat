from typing import Callable, List, Tuple, Dict, Any
from enum import Enum

class CarComponentWrapper():
    # Public:
    # CarComponentWrapper::CarComponentWrapper(uintptr_t mem) [constructor]
    def __init__(self, mem: int) -> None: ...

    # CarComponentWrapper::CarComponentWrapper(CarComponentWrapper const & other) [constructor]

    # CarComponentWrapper & CarComponentWrapper::operator=(CarComponentWrapper rhs) [member operator]

    # CarComponentWrapper::~CarComponentWrapper() [destructor]
    def __del__(self) -> None: ...

    # FXActorWrapper CarComponentWrapper::GetFXActorArchetype() [member function]
    def GetFXActorArchetype(self) -> FXActorWrapper: ...

    # void CarComponentWrapper::SetFXActorArchetype(FXActorWrapper newFXActorArchetype) [member function]
    def SetFXActorArchetype(self, newFXActorArchetype: FXActorWrapper) -> None: ...

    # long unsigned int CarComponentWrapper::GetbDisabled() [member function]
    def GetbDisabled(self) -> bool: ...

    # void CarComponentWrapper::SetbDisabled(long unsigned int newbDisabled) [member function]
    def SetbDisabled(self, newbDisabled: bool) -> None: ...

    # long unsigned int CarComponentWrapper::GetbAutoActivate() [member function]
    def GetbAutoActivate(self) -> bool: ...

    # void CarComponentWrapper::SetbAutoActivate(long unsigned int newbAutoActivate) [member function]
    def SetbAutoActivate(self, newbAutoActivate: bool) -> None: ...

    # long unsigned int CarComponentWrapper::GetbSimulateComponent() [member function]
    def GetbSimulateComponent(self) -> bool: ...

    # void CarComponentWrapper::SetbSimulateComponent(long unsigned int newbSimulateComponent) [member function]
    def SetbSimulateComponent(self, newbSimulateComponent: bool) -> None: ...

    # long unsigned int CarComponentWrapper::GetbCreated() [member function]
    def GetbCreated(self) -> bool: ...

    # void CarComponentWrapper::SetbCreated(long unsigned int newbCreated) [member function]
    def SetbCreated(self, newbCreated: bool) -> None: ...

    # long unsigned int CarComponentWrapper::GetbActive() [member function]
    def GetbActive(self) -> bool: ...

    # void CarComponentWrapper::SetbActive(long unsigned int newbActive) [member function]
    def SetbActive(self, newbActive: bool) -> None: ...

    # long unsigned int CarComponentWrapper::GetbRemovedFromCar() [member function]
    def GetbRemovedFromCar(self) -> bool: ...

    # void CarComponentWrapper::SetbRemovedFromCar(long unsigned int newbRemovedFromCar) [member function]
    def SetbRemovedFromCar(self, newbRemovedFromCar: bool) -> None: ...

    # unsigned char CarComponentWrapper::GetComponentData() [member function]
    def GetComponentData(self) -> int: ...

    # void CarComponentWrapper::SetComponentData(unsigned char newComponentData) [member function]
    def SetComponentData(self, newComponentData: int) -> None: ...

    # unsigned char CarComponentWrapper::GetReplicatedActive() [member function]
    def GetReplicatedActive(self) -> int: ...

    # void CarComponentWrapper::SetReplicatedActive(unsigned char newReplicatedActive) [member function]
    def SetReplicatedActive(self, newReplicatedActive: int) -> None: ...

    # PriWrapper CarComponentWrapper::GetActivator() [member function]
    def GetActivator(self) -> PriWrapper: ...

    # void CarComponentWrapper::SetActivator(PriWrapper newActivator) [member function]
    def SetActivator(self, newActivator: PriWrapper) -> None: ...

    # VehicleWrapper CarComponentWrapper::GetVehicle() [member function]
    def GetVehicle(self) -> VehicleWrapper: ...

    # void CarComponentWrapper::SetVehicle(VehicleWrapper newVehicle) [member function]
    def SetVehicle(self, newVehicle: VehicleWrapper) -> None: ...

    # CarWrapper CarComponentWrapper::GetCar() [member function]
    def GetCar(self) -> CarWrapper: ...

    # void CarComponentWrapper::SetCar(CarWrapper newCar) [member function]
    def SetCar(self, newCar: CarWrapper) -> None: ...

    # float CarComponentWrapper::GetActivityTime() [member function]
    def GetActivityTime(self) -> float: ...

    # void CarComponentWrapper::SetActivityTime(float newActivityTime) [member function]
    def SetActivityTime(self, newActivityTime: float) -> None: ...

    # float CarComponentWrapper::GetReplicatedActivityTime() [member function]
    def GetReplicatedActivityTime(self) -> float: ...

    # void CarComponentWrapper::SetReplicatedActivityTime(float newReplicatedActivityTime) [member function]
    def SetReplicatedActivityTime(self, newReplicatedActivityTime: float) -> None: ...

    # FXActorWrapper CarComponentWrapper::GetFXActor() [member function]
    def GetFXActor(self) -> FXActorWrapper: ...

    # void CarComponentWrapper::SetFXActor(FXActorWrapper newFXActor) [member function]
    def SetFXActor(self, newFXActor: FXActorWrapper) -> None: ...

    # void CarComponentWrapper::eventFellOutOfWorld() [member function]
    def eventFellOutOfWorld(self) -> None: ...

    # float CarComponentWrapper::GetInactiveTime() [member function]
    def GetInactiveTime(self) -> float: ...

    # float CarComponentWrapper::GetActiveTime() [member function]
    def GetActiveTime(self) -> float: ...

    # void CarComponentWrapper::ApplyForces(float ActiveTime) [member function]
    def ApplyForces(self, ActiveTime: float) -> None: ...

    # void CarComponentWrapper::PrePhysicsStep(float DeltaTime) [member function]
    def PrePhysicsStep(self, DeltaTime: float) -> None: ...

    # void CarComponentWrapper::RemoveFromCar() [member function]
    def RemoveFromCar(self) -> None: ...

    # bool CarComponentWrapper::CanDeactivate() [member function]
    def CanDeactivate(self) -> bool: ...

    # bool CarComponentWrapper::ConditionalDeactivate() [member function]
    def ConditionalDeactivate(self) -> bool: ...

    # bool CarComponentWrapper::CanActivate() [member function]
    def CanActivate(self) -> bool: ...

    # bool CarComponentWrapper::ConditionalActivate() [member function]
    def ConditionalActivate(self) -> bool: ...

    # void CarComponentWrapper::SetActive(long unsigned int bNewActive) [member function]
    def SetActive(self, bNewActive: bool) -> None: ...

    # void CarComponentWrapper::Deactivate2() [member function]
    def Deactivate2(self) -> None: ...

    # void CarComponentWrapper::Activate2() [member function]
    def Activate2(self) -> None: ...

    # void CarComponentWrapper::UnregisterCarEvents() [member function]
    def UnregisterCarEvents(self) -> None: ...

    # void CarComponentWrapper::RegisterCarEvents() [member function]
    def RegisterCarEvents(self) -> None: ...

    # void CarComponentWrapper::HandleVehicleSetup(CarWrapper InCar) [member function]
    def HandleVehicleSetup(self, InCar: CarWrapper) -> None: ...

    # void CarComponentWrapper::OnVehicleSetupComplete() [member function]
    def OnVehicleSetupComplete(self) -> None: ...

    # void CarComponentWrapper::Create2(CarWrapper OwnerCar, PriWrapper InActivator) [member function]
    def Create2(self, OwnerCar: CarWrapper, InActivator: PriWrapper) -> None: ...

    # void CarComponentWrapper::ClientUpdateActive() [member function]
    def ClientUpdateActive(self) -> None: ...

    # void CarComponentWrapper::EventActivationChanged(CarComponentWrapper CarComponent) [member function]
    def EventActivationChanged(self, CarComponent: CarComponentWrapper) -> None: ...

    # Private:
    # CarComponentWrapper::Impl [class declaration]

    # CarComponentWrapper::pimpl [variable]
    @property
    def pimpl(self) -> Any: ...


