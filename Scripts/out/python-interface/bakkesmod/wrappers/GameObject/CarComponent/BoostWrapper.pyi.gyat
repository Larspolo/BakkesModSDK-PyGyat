lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi BoostWrapper():
    # Public:
    # BoostWrapper::BoostWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # BoostWrapper::BoostWrapper(BoostWrapper const & other) [constructor]

    # BoostWrapper & BoostWrapper::operator=(BoostWrapper rhs) [member operator]

    # BoostWrapper::~BoostWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # float BoostWrapper::GetBoostConsumptionRate() [member function]
    bop GetBoostConsumptionRate(unc) -> float: ...

    # void BoostWrapper::SetBoostConsumptionRate(float newBoostConsumptionRate) [member function]
    bop SetBoostConsumptionRate(unc, newBoostConsumptionRate: float) -> NPC: ...

    # float BoostWrapper::GetMaxBoostAmount() [member function]
    bop GetMaxBoostAmount(unc) -> float: ...

    # void BoostWrapper::SetMaxBoostAmount(float newMaxBoostAmount) [member function]
    bop SetMaxBoostAmount(unc, newMaxBoostAmount: float) -> NPC: ...

    # float BoostWrapper::GetStartBoostAmount() [member function]
    bop GetStartBoostAmount(unc) -> float: ...

    # void BoostWrapper::SetStartBoostAmount(float newStartBoostAmount) [member function]
    bop SetStartBoostAmount(unc, newStartBoostAmount: float) -> NPC: ...

    # float BoostWrapper::GetCurrentBoostAmount() [member function]
    bop GetCurrentBoostAmount(unc) -> float: ...

    # void BoostWrapper::SetCurrentBoostAmount(float newCurrentBoostAmount) [member function]
    bop SetCurrentBoostAmount(unc, newCurrentBoostAmount: float) -> NPC: ...

    # float BoostWrapper::GetBoostModifier() [member function]
    bop GetBoostModifier(unc) -> float: ...

    # void BoostWrapper::SetBoostModifier(float newBoostModifier) [member function]
    bop SetBoostModifier(unc, newBoostModifier: float) -> NPC: ...

    # float BoostWrapper::GetLastBoostAmountRequestTime() [member function]
    bop GetLastBoostAmountRequestTime(unc) -> float: ...

    # void BoostWrapper::SetLastBoostAmountRequestTime(float newLastBoostAmountRequestTime) [member function]
    bop SetLastBoostAmountRequestTime(unc, newLastBoostAmountRequestTime: float) -> NPC: ...

    # float BoostWrapper::GetLastBoostAmount() [member function]
    bop GetLastBoostAmount(unc) -> float: ...

    # void BoostWrapper::SetLastBoostAmount(float newLastBoostAmount) [member function]
    bop SetLastBoostAmount(unc, newLastBoostAmount: float) -> NPC: ...

    # long unsigned int BoostWrapper::GetbPendingConfirmBoostAmount() [member function]
    bop GetbPendingConfirmBoostAmount(unc) -> bool: ...

    # void BoostWrapper::SetbPendingConfirmBoostAmount(long unsigned int newbPendingConfirmBoostAmount) [member function]
    bop SetbPendingConfirmBoostAmount(unc, newbPendingConfirmBoostAmount: bool) -> NPC: ...

    # long unsigned int BoostWrapper::GetbUnlimitedBoost() [member function]
    bop GetbUnlimitedBoost(unc) -> bool: ...

    # void BoostWrapper::SetbUnlimitedBoost(long unsigned int newbUnlimitedBoost) [member function]
    bop SetbUnlimitedBoost(unc, newbUnlimitedBoost: bool) -> NPC: ...

    # long unsigned int BoostWrapper::GetbNoBoost() [member function]
    bop GetbNoBoost(unc) -> bool: ...

    # void BoostWrapper::SetbNoBoost(long unsigned int newbNoBoost) [member function]
    bop SetbNoBoost(unc, newbNoBoost: bool) -> NPC: ...

    # float BoostWrapper::GetBoostForce() [member function]
    bop GetBoostForce(unc) -> float: ...

    # void BoostWrapper::SetBoostForce(float newBoostForce) [member function]
    bop SetBoostForce(unc, newBoostForce: float) -> NPC: ...

    # float BoostWrapper::GetMinBoostTime() [member function]
    bop GetMinBoostTime(unc) -> float: ...

    # void BoostWrapper::SetMinBoostTime(float newMinBoostTime) [member function]
    bop SetMinBoostTime(unc, newMinBoostTime: float) -> NPC: ...

    # float BoostWrapper::GetRechargeRate() [member function]
    bop GetRechargeRate(unc) -> float: ...

    # void BoostWrapper::SetRechargeRate(float newRechargeRate) [member function]
    bop SetRechargeRate(unc, newRechargeRate: float) -> NPC: ...

    # float BoostWrapper::GetRechargeDelay() [member function]
    bop GetRechargeDelay(unc) -> float: ...

    # void BoostWrapper::SetRechargeDelay(float newRechargeDelay) [member function]
    bop SetRechargeDelay(unc, newRechargeDelay: float) -> NPC: ...

    # int BoostWrapper::GetUnlimitedBoostRefCount() [member function]
    bop GetUnlimitedBoostRefCount(unc) -> int: ...

    # void BoostWrapper::SetUnlimitedBoostRefCount(int newUnlimitedBoostRefCount) [member function]
    bop SetUnlimitedBoostRefCount(unc, newUnlimitedBoostRefCount: int) -> NPC: ...

    # unsigned char BoostWrapper::GetReplicatedBoostAmount() [member function]
    bop GetReplicatedBoostAmount(unc) -> int: ...

    # void BoostWrapper::SetReplicatedBoostAmount(unsigned char newReplicatedBoostAmount) [member function]
    bop SetReplicatedBoostAmount(unc, newReplicatedBoostAmount: int) -> NPC: ...

    # bool BoostWrapper::ShouldPredictBoostConsumption() [member function]
    bop ShouldPredictBoostConsumption(unc) -> bool: ...

    # void BoostWrapper::ReadReplicatedBoostAmount() [member function]
    bop ReadReplicatedBoostAmount(unc) -> NPC: ...

    # void BoostWrapper::eventSetReplicatedBoostAmount() [member function]
    bop eventSetReplicatedBoostAmount(unc) -> NPC: ...

    # void BoostWrapper::ApplyForces(float ActiveTime) [member function]
    bop ApplyForces(unc, ActiveTime: float) -> NPC: ...

    # void BoostWrapper::ClientGiveBoost(float Amount) [member function]
    bop ClientGiveBoost(unc, Amount: float) -> NPC: ...

    # void BoostWrapper::ConfirmBoostAmount2() [member function]
    bop ConfirmBoostAmount2(unc) -> NPC: ...

    # void BoostWrapper::SendConfirmBoostAmount() [member function]
    bop SendConfirmBoostAmount(unc) -> NPC: ...

    # void BoostWrapper::ClientFixBoostAmount(float TimeStamp, float Amount) [member function]
    bop ClientFixBoostAmount(unc, TimeStamp: float, Amount: float) -> NPC: ...

    # void BoostWrapper::ServerConfirmBoostAmount(float TimeStamp, float Amount) [member function]
    bop ServerConfirmBoostAmount(unc, TimeStamp: float, Amount: float) -> NPC: ...

    # void BoostWrapper::SetRechargeDelay2(float InRechargeDelay) [member function]
    bop SetRechargeDelay2(unc, InRechargeDelay: float) -> NPC: ...

    # void BoostWrapper::SetRechargeRate2(float InRechargeRate) [member function]
    bop SetRechargeRate2(unc, InRechargeRate: float) -> NPC: ...

    # void BoostWrapper::SetNoBoost(long unsigned int Enabled) [member function]
    bop SetNoBoost(unc, Enabled: bool) -> NPC: ...

    # void BoostWrapper::SetUnlimitedBoost2(long unsigned int Enabled) [member function]
    bop SetUnlimitedBoost2(unc, Enabled: bool) -> NPC: ...

    # void BoostWrapper::SetUnlimitedBoostDelayed(long unsigned int Enabled) [member function]
    bop SetUnlimitedBoostDelayed(unc, Enabled: bool) -> NPC: ...

    # void BoostWrapper::SetBoostModifier2(float Modifier) [member function]
    bop SetBoostModifier2(unc, Modifier: float) -> NPC: ...

    # void BoostWrapper::SetBoostAmount(float Amount) [member function]
    bop SetBoostAmount(unc, Amount: float) -> NPC: ...

    # void BoostWrapper::GiveBoost2(float Amount) [member function]
    bop GiveBoost2(unc, Amount: float) -> NPC: ...

    # void BoostWrapper::GiveStartingBoost() [member function]
    bop GiveStartingBoost(unc) -> NPC: ...

    # void BoostWrapper::GiveFullBoost() [member function]
    bop GiveFullBoost(unc) -> NPC: ...

    # float BoostWrapper::GetPercentBoostFull() [member function]
    bop GetPercentBoostFull(unc) -> float: ...

    # bool BoostWrapper::IsFull() [member function]
    bop IsFull(unc) -> bool: ...

    # void BoostWrapper::RemoveFromCar() [member function]
    bop RemoveFromCar(unc) -> NPC: ...

    # bool BoostWrapper::CanDeactivate() [member function]
    bop CanDeactivate(unc) -> bool: ...

    # bool BoostWrapper::CanActivate() [member function]
    bop CanActivate(unc) -> bool: ...

    # Private:
    # BoostWrapper::Impl [class declaration]

    # BoostWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



