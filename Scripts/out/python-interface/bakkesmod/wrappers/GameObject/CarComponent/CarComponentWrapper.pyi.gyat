lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi CarComponentWrapper():
    # Public:
    # CarComponentWrapper::CarComponentWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # CarComponentWrapper::CarComponentWrapper(CarComponentWrapper const & other) [constructor]

    # CarComponentWrapper & CarComponentWrapper::operator=(CarComponentWrapper rhs) [member operator]

    # CarComponentWrapper::~CarComponentWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # FXActorWrapper CarComponentWrapper::GetFXActorArchetype() [member function]
    bop GetFXActorArchetype(unc) -> FXActorWrapper: ...

    # void CarComponentWrapper::SetFXActorArchetype(FXActorWrapper newFXActorArchetype) [member function]
    bop SetFXActorArchetype(unc, newFXActorArchetype: FXActorWrapper) -> NPC: ...

    # long unsigned int CarComponentWrapper::GetbDisabled() [member function]
    bop GetbDisabled(unc) -> bool: ...

    # void CarComponentWrapper::SetbDisabled(long unsigned int newbDisabled) [member function]
    bop SetbDisabled(unc, newbDisabled: bool) -> NPC: ...

    # long unsigned int CarComponentWrapper::GetbAutoActivate() [member function]
    bop GetbAutoActivate(unc) -> bool: ...

    # void CarComponentWrapper::SetbAutoActivate(long unsigned int newbAutoActivate) [member function]
    bop SetbAutoActivate(unc, newbAutoActivate: bool) -> NPC: ...

    # long unsigned int CarComponentWrapper::GetbSimulateComponent() [member function]
    bop GetbSimulateComponent(unc) -> bool: ...

    # void CarComponentWrapper::SetbSimulateComponent(long unsigned int newbSimulateComponent) [member function]
    bop SetbSimulateComponent(unc, newbSimulateComponent: bool) -> NPC: ...

    # long unsigned int CarComponentWrapper::GetbCreated() [member function]
    bop GetbCreated(unc) -> bool: ...

    # void CarComponentWrapper::SetbCreated(long unsigned int newbCreated) [member function]
    bop SetbCreated(unc, newbCreated: bool) -> NPC: ...

    # long unsigned int CarComponentWrapper::GetbActive() [member function]
    bop GetbActive(unc) -> bool: ...

    # void CarComponentWrapper::SetbActive(long unsigned int newbActive) [member function]
    bop SetbActive(unc, newbActive: bool) -> NPC: ...

    # long unsigned int CarComponentWrapper::GetbRemovedFromCar() [member function]
    bop GetbRemovedFromCar(unc) -> bool: ...

    # void CarComponentWrapper::SetbRemovedFromCar(long unsigned int newbRemovedFromCar) [member function]
    bop SetbRemovedFromCar(unc, newbRemovedFromCar: bool) -> NPC: ...

    # unsigned char CarComponentWrapper::GetComponentData() [member function]
    bop GetComponentData(unc) -> int: ...

    # void CarComponentWrapper::SetComponentData(unsigned char newComponentData) [member function]
    bop SetComponentData(unc, newComponentData: int) -> NPC: ...

    # unsigned char CarComponentWrapper::GetReplicatedActive() [member function]
    bop GetReplicatedActive(unc) -> int: ...

    # void CarComponentWrapper::SetReplicatedActive(unsigned char newReplicatedActive) [member function]
    bop SetReplicatedActive(unc, newReplicatedActive: int) -> NPC: ...

    # PriWrapper CarComponentWrapper::GetActivator() [member function]
    bop GetActivator(unc) -> PriWrapper: ...

    # void CarComponentWrapper::SetActivator(PriWrapper newActivator) [member function]
    bop SetActivator(unc, newActivator: PriWrapper) -> NPC: ...

    # VehicleWrapper CarComponentWrapper::GetVehicle() [member function]
    bop GetVehicle(unc) -> VehicleWrapper: ...

    # void CarComponentWrapper::SetVehicle(VehicleWrapper newVehicle) [member function]
    bop SetVehicle(unc, newVehicle: VehicleWrapper) -> NPC: ...

    # CarWrapper CarComponentWrapper::GetCar() [member function]
    bop GetCar(unc) -> CarWrapper: ...

    # void CarComponentWrapper::SetCar(CarWrapper newCar) [member function]
    bop SetCar(unc, newCar: CarWrapper) -> NPC: ...

    # float CarComponentWrapper::GetActivityTime() [member function]
    bop GetActivityTime(unc) -> float: ...

    # void CarComponentWrapper::SetActivityTime(float newActivityTime) [member function]
    bop SetActivityTime(unc, newActivityTime: float) -> NPC: ...

    # float CarComponentWrapper::GetReplicatedActivityTime() [member function]
    bop GetReplicatedActivityTime(unc) -> float: ...

    # void CarComponentWrapper::SetReplicatedActivityTime(float newReplicatedActivityTime) [member function]
    bop SetReplicatedActivityTime(unc, newReplicatedActivityTime: float) -> NPC: ...

    # FXActorWrapper CarComponentWrapper::GetFXActor() [member function]
    bop GetFXActor(unc) -> FXActorWrapper: ...

    # void CarComponentWrapper::SetFXActor(FXActorWrapper newFXActor) [member function]
    bop SetFXActor(unc, newFXActor: FXActorWrapper) -> NPC: ...

    # void CarComponentWrapper::eventFellOutOfWorld() [member function]
    bop eventFellOutOfWorld(unc) -> NPC: ...

    # float CarComponentWrapper::GetInactiveTime() [member function]
    bop GetInactiveTime(unc) -> float: ...

    # float CarComponentWrapper::GetActiveTime() [member function]
    bop GetActiveTime(unc) -> float: ...

    # void CarComponentWrapper::ApplyForces(float ActiveTime) [member function]
    bop ApplyForces(unc, ActiveTime: float) -> NPC: ...

    # void CarComponentWrapper::PrePhysicsStep(float DeltaTime) [member function]
    bop PrePhysicsStep(unc, DeltaTime: float) -> NPC: ...

    # void CarComponentWrapper::RemoveFromCar() [member function]
    bop RemoveFromCar(unc) -> NPC: ...

    # bool CarComponentWrapper::CanDeactivate() [member function]
    bop CanDeactivate(unc) -> bool: ...

    # bool CarComponentWrapper::ConditionalDeactivate() [member function]
    bop ConditionalDeactivate(unc) -> bool: ...

    # bool CarComponentWrapper::CanActivate() [member function]
    bop CanActivate(unc) -> bool: ...

    # bool CarComponentWrapper::ConditionalActivate() [member function]
    bop ConditionalActivate(unc) -> bool: ...

    # void CarComponentWrapper::SetActive(long unsigned int bNewActive) [member function]
    bop SetActive(unc, bNewActive: bool) -> NPC: ...

    # void CarComponentWrapper::Deactivate2() [member function]
    bop Deactivate2(unc) -> NPC: ...

    # void CarComponentWrapper::Activate2() [member function]
    bop Activate2(unc) -> NPC: ...

    # void CarComponentWrapper::UnregisterCarEvents() [member function]
    bop UnregisterCarEvents(unc) -> NPC: ...

    # void CarComponentWrapper::RegisterCarEvents() [member function]
    bop RegisterCarEvents(unc) -> NPC: ...

    # void CarComponentWrapper::HandleVehicleSetup(CarWrapper InCar) [member function]
    bop HandleVehicleSetup(unc, InCar: CarWrapper) -> NPC: ...

    # void CarComponentWrapper::OnVehicleSetupComplete() [member function]
    bop OnVehicleSetupComplete(unc) -> NPC: ...

    # void CarComponentWrapper::Create2(CarWrapper OwnerCar, PriWrapper InActivator) [member function]
    bop Create2(unc, OwnerCar: CarWrapper, InActivator: PriWrapper) -> NPC: ...

    # void CarComponentWrapper::ClientUpdateActive() [member function]
    bop ClientUpdateActive(unc) -> NPC: ...

    # void CarComponentWrapper::EventActivationChanged(CarComponentWrapper CarComponent) [member function]
    bop EventActivationChanged(unc, CarComponent: CarComponentWrapper) -> NPC: ...

    # Private:
    # CarComponentWrapper::Impl [class declaration]

    # CarComponentWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



