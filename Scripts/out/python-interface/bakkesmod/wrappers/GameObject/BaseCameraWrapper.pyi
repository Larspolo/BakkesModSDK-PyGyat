from typing import Callable, List, Tuple, Dict, Any
from enum import Enum

class BaseCameraWrapper():
    # Public:
    # BaseCameraWrapper::BaseCameraWrapper(uintptr_t mem) [constructor]
    def __init__(self, mem: int) -> None: ...

    # BaseCameraWrapper::BaseCameraWrapper(BaseCameraWrapper const & other) [constructor]

    # BaseCameraWrapper & BaseCameraWrapper::operator=(BaseCameraWrapper rhs) [member operator]

    # BaseCameraWrapper::~BaseCameraWrapper() [destructor]
    def __del__(self) -> None: ...

    # float BaseCameraWrapper::GetDefaultFOV() [member function]
    def GetDefaultFOV(self) -> float: ...

    # void BaseCameraWrapper::SetDefaultFOV(float newDefaultFOV) [member function]
    def SetDefaultFOV(self, newDefaultFOV: float) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbLockedFOV() [member function]
    def GetbLockedFOV(self) -> bool: ...

    # void BaseCameraWrapper::SetbLockedFOV(long unsigned int newbLockedFOV) [member function]
    def SetbLockedFOV(self, newbLockedFOV: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbConstrainAspectRatio() [member function]
    def GetbConstrainAspectRatio(self) -> bool: ...

    # void BaseCameraWrapper::SetbConstrainAspectRatio(long unsigned int newbConstrainAspectRatio) [member function]
    def SetbConstrainAspectRatio(self, newbConstrainAspectRatio: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbEnableFading() [member function]
    def GetbEnableFading(self) -> bool: ...

    # void BaseCameraWrapper::SetbEnableFading(long unsigned int newbEnableFading) [member function]
    def SetbEnableFading(self, newbEnableFading: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbFadeAudio() [member function]
    def GetbFadeAudio(self) -> bool: ...

    # void BaseCameraWrapper::SetbFadeAudio(long unsigned int newbFadeAudio) [member function]
    def SetbFadeAudio(self, newbFadeAudio: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbForceDisableTemporalAA() [member function]
    def GetbForceDisableTemporalAA(self) -> bool: ...

    # void BaseCameraWrapper::SetbForceDisableTemporalAA(long unsigned int newbForceDisableTemporalAA) [member function]
    def SetbForceDisableTemporalAA(self, newbForceDisableTemporalAA: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbEnableColorScaling() [member function]
    def GetbEnableColorScaling(self) -> bool: ...

    # void BaseCameraWrapper::SetbEnableColorScaling(long unsigned int newbEnableColorScaling) [member function]
    def SetbEnableColorScaling(self, newbEnableColorScaling: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbEnableColorScaleInterp() [member function]
    def GetbEnableColorScaleInterp(self) -> bool: ...

    # void BaseCameraWrapper::SetbEnableColorScaleInterp(long unsigned int newbEnableColorScaleInterp) [member function]
    def SetbEnableColorScaleInterp(self, newbEnableColorScaleInterp: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbUseClientSideCameraUpdates() [member function]
    def GetbUseClientSideCameraUpdates(self) -> bool: ...

    # void BaseCameraWrapper::SetbUseClientSideCameraUpdates(long unsigned int newbUseClientSideCameraUpdates) [member function]
    def SetbUseClientSideCameraUpdates(self, newbUseClientSideCameraUpdates: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbDebugClientSideCamera() [member function]
    def GetbDebugClientSideCamera(self) -> bool: ...

    # void BaseCameraWrapper::SetbDebugClientSideCamera(long unsigned int newbDebugClientSideCamera) [member function]
    def SetbDebugClientSideCamera(self, newbDebugClientSideCamera: bool) -> None: ...

    # long unsigned int BaseCameraWrapper::GetbShouldSendClientSideCameraUpdate() [member function]
    def GetbShouldSendClientSideCameraUpdate(self) -> bool: ...

    # void BaseCameraWrapper::SetbShouldSendClientSideCameraUpdate(long unsigned int newbShouldSendClientSideCameraUpdate) [member function]
    def SetbShouldSendClientSideCameraUpdate(self, newbShouldSendClientSideCameraUpdate: bool) -> None: ...

    # float BaseCameraWrapper::GetLockedFOV() [member function]
    def GetLockedFOV(self) -> float: ...

    # void BaseCameraWrapper::SetLockedFOV(float newLockedFOV) [member function]
    def SetLockedFOV(self, newLockedFOV: float) -> None: ...

    # float BaseCameraWrapper::GetConstrainedAspectRatio() [member function]
    def GetConstrainedAspectRatio(self) -> float: ...

    # void BaseCameraWrapper::SetConstrainedAspectRatio(float newConstrainedAspectRatio) [member function]
    def SetConstrainedAspectRatio(self, newConstrainedAspectRatio: float) -> None: ...

    # float BaseCameraWrapper::GetDefaultAspectRatio() [member function]
    def GetDefaultAspectRatio(self) -> float: ...

    # void BaseCameraWrapper::SetDefaultAspectRatio(float newDefaultAspectRatio) [member function]
    def SetDefaultAspectRatio(self, newDefaultAspectRatio: float) -> None: ...

    # float BaseCameraWrapper::GetOffAxisYawAngle() [member function]
    def GetOffAxisYawAngle(self) -> float: ...

    # void BaseCameraWrapper::SetOffAxisYawAngle(float newOffAxisYawAngle) [member function]
    def SetOffAxisYawAngle(self, newOffAxisYawAngle: float) -> None: ...

    # float BaseCameraWrapper::GetOffAxisPitchAngle() [member function]
    def GetOffAxisPitchAngle(self) -> float: ...

    # void BaseCameraWrapper::SetOffAxisPitchAngle(float newOffAxisPitchAngle) [member function]
    def SetOffAxisPitchAngle(self, newOffAxisPitchAngle: float) -> None: ...

    # UnrealColor BaseCameraWrapper::GetFadeColor() [member function]
    def GetFadeColor(self) -> UnrealColor: ...

    # void BaseCameraWrapper::SetFadeColor(UnrealColor newFadeColor) [member function]
    def SetFadeColor(self, newFadeColor: UnrealColor) -> None: ...

    # float BaseCameraWrapper::GetFadeAmount() [member function]
    def GetFadeAmount(self) -> float: ...

    # void BaseCameraWrapper::SetFadeAmount(float newFadeAmount) [member function]
    def SetFadeAmount(self, newFadeAmount: float) -> None: ...

    # float BaseCameraWrapper::GetCamOverridePostProcessAlpha() [member function]
    def GetCamOverridePostProcessAlpha(self) -> float: ...

    # void BaseCameraWrapper::SetCamOverridePostProcessAlpha(float newCamOverridePostProcessAlpha) [member function]
    def SetCamOverridePostProcessAlpha(self, newCamOverridePostProcessAlpha: float) -> None: ...

    # Vector BaseCameraWrapper::GetColorScale() [member function]
    def GetColorScale(self) -> Vector: ...

    # void BaseCameraWrapper::SetColorScale(Vector newColorScale) [member function]
    def SetColorScale(self, newColorScale: Vector) -> None: ...

    # Vector BaseCameraWrapper::GetDesiredColorScale() [member function]
    def GetDesiredColorScale(self) -> Vector: ...

    # void BaseCameraWrapper::SetDesiredColorScale(Vector newDesiredColorScale) [member function]
    def SetDesiredColorScale(self, newDesiredColorScale: Vector) -> None: ...

    # Vector BaseCameraWrapper::GetOriginalColorScale() [member function]
    def GetOriginalColorScale(self) -> Vector: ...

    # void BaseCameraWrapper::SetOriginalColorScale(Vector newOriginalColorScale) [member function]
    def SetOriginalColorScale(self, newOriginalColorScale: Vector) -> None: ...

    # float BaseCameraWrapper::GetColorScaleInterpDuration() [member function]
    def GetColorScaleInterpDuration(self) -> float: ...

    # void BaseCameraWrapper::SetColorScaleInterpDuration(float newColorScaleInterpDuration) [member function]
    def SetColorScaleInterpDuration(self, newColorScaleInterpDuration: float) -> None: ...

    # float BaseCameraWrapper::GetColorScaleInterpStartTime() [member function]
    def GetColorScaleInterpStartTime(self) -> float: ...

    # void BaseCameraWrapper::SetColorScaleInterpStartTime(float newColorScaleInterpStartTime) [member function]
    def SetColorScaleInterpStartTime(self, newColorScaleInterpStartTime: float) -> None: ...

    # ViewTarget BaseCameraWrapper::GetViewTarget() [member function]
    def GetViewTarget(self) -> ViewTarget: ...

    # void BaseCameraWrapper::SetViewTarget(ViewTarget newViewTarget) [member function]
    def SetViewTarget(self, newViewTarget: ViewTarget) -> None: ...

    # ViewTarget BaseCameraWrapper::GetPendingViewTarget() [member function]
    def GetPendingViewTarget(self) -> ViewTarget: ...

    # void BaseCameraWrapper::SetPendingViewTarget(ViewTarget newPendingViewTarget) [member function]
    def SetPendingViewTarget(self, newPendingViewTarget: ViewTarget) -> None: ...

    # float BaseCameraWrapper::GetBlendTimeToGo() [member function]
    def GetBlendTimeToGo(self) -> float: ...

    # void BaseCameraWrapper::SetBlendTimeToGo(float newBlendTimeToGo) [member function]
    def SetBlendTimeToGo(self, newBlendTimeToGo: float) -> None: ...

    # float BaseCameraWrapper::GetFreeCamDistance() [member function]
    def GetFreeCamDistance(self) -> float: ...

    # void BaseCameraWrapper::SetFreeCamDistance(float newFreeCamDistance) [member function]
    def SetFreeCamDistance(self, newFreeCamDistance: float) -> None: ...

    # Vector BaseCameraWrapper::GetFreeCamOffset() [member function]
    def GetFreeCamOffset(self) -> Vector: ...

    # void BaseCameraWrapper::SetFreeCamOffset(Vector newFreeCamOffset) [member function]
    def SetFreeCamOffset(self, newFreeCamOffset: Vector) -> None: ...

    # float BaseCameraWrapper::GetFadeTime() [member function]
    def GetFadeTime(self) -> float: ...

    # void BaseCameraWrapper::SetFadeTime(float newFadeTime) [member function]
    def SetFadeTime(self, newFadeTime: float) -> None: ...

    # float BaseCameraWrapper::GetFadeTimeRemaining() [member function]
    def GetFadeTimeRemaining(self) -> float: ...

    # void BaseCameraWrapper::SetFadeTimeRemaining(float newFadeTimeRemaining) [member function]
    def SetFadeTimeRemaining(self, newFadeTimeRemaining: float) -> None: ...

    # void BaseCameraWrapper::StopAllCameraAnims(long unsigned int bImmediate) [member function]
    def StopAllCameraAnims(self, bImmediate: bool) -> None: ...

    # void BaseCameraWrapper::ClearAllCameraShakes() [member function]
    def ClearAllCameraShakes(self) -> None: ...

    # float BaseCameraWrapper::CalcRadialShakeScale(BaseCameraWrapper Cam, Vector & Epicenter, float InnerRadius, float OuterRadius, float Falloff) [member function]
    def CalcRadialShakeScale(self, Cam: BaseCameraWrapper, Epicenter: Vector, InnerRadius: float, OuterRadius: float, Falloff: float) -> float: ...

    # void BaseCameraWrapper::ClearCameraLensEffects() [member function]
    def ClearCameraLensEffects(self) -> None: ...

    # void BaseCameraWrapper::ApplyAudioFade() [member function]
    def ApplyAudioFade(self) -> None: ...

    # void BaseCameraWrapper::UpdateFade(float DeltaTime) [member function]
    def UpdateFade(self, DeltaTime: float) -> None: ...

    # void BaseCameraWrapper::DoUpdateCamera(float DeltaTime) [member function]
    def DoUpdateCamera(self, DeltaTime: float) -> None: ...

    # void BaseCameraWrapper::eventUpdateCamera(float DeltaTime) [member function]
    def eventUpdateCamera(self, DeltaTime: float) -> None: ...

    # void BaseCameraWrapper::SetDesiredColorScale2(Vector & NewColorScale, float InterpTime) [member function]
    def SetDesiredColorScale2(self, NewColorScale: Vector, InterpTime: float) -> None: ...

    # Rotator BaseCameraWrapper::GetCameraRotation() [member function]
    def GetCameraRotation(self) -> Rotator: ...

    # void BaseCameraWrapper::SetFOV(float NewFOV) [member function]
    def SetFOV(self, NewFOV: float) -> None: ...

    # float BaseCameraWrapper::GetFOVAngle() [member function]
    def GetFOVAngle(self) -> float: ...

    # void BaseCameraWrapper::eventDestroyed() [member function]
    def eventDestroyed(self) -> None: ...

    # void BaseCameraWrapper::PostBeginPlay() [member function]
    def PostBeginPlay(self) -> None: ...

    # Private:
    # BaseCameraWrapper::Impl [class declaration]

    # BaseCameraWrapper::pimpl [variable]
    @property
    def pimpl(self) -> Any: ...


