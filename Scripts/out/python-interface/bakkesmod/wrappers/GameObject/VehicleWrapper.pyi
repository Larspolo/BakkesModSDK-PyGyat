from typing import Callable, List, Tuple, Dict, Any
from enum import Enum

class VehicleWrapper():
    # Public:
    # VehicleWrapper::VehicleWrapper(uintptr_t mem) [constructor]
    def __init__(self, mem: int) -> None: ...

    # VehicleWrapper::VehicleWrapper(VehicleWrapper const & other) [constructor]

    # VehicleWrapper & VehicleWrapper::operator=(VehicleWrapper rhs) [member operator]

    # VehicleWrapper::~VehicleWrapper() [destructor]
    def __del__(self) -> None: ...

    # long unsigned int VehicleWrapper::GetbCanJump() [member function]
    def GetbCanJump(self) -> bool: ...

    # void VehicleWrapper::SetbCanJump(long unsigned int newbCanJump) [member function]
    def SetbCanJump(self, newbCanJump: bool) -> None: ...

    # VehicleSimWrapper VehicleWrapper::GetVehicleSim() [member function]
    def GetVehicleSim(self) -> VehicleSimWrapper: ...

    # void VehicleWrapper::SetVehicleSim(VehicleSimWrapper newVehicleSim) [member function]
    def SetVehicleSim(self, newVehicleSim: VehicleSimWrapper) -> None: ...

    # StickyForceData VehicleWrapper::GetStickyForce() [member function]
    def GetStickyForce(self) -> StickyForceData: ...

    # void VehicleWrapper::SetStickyForce(StickyForceData newStickyForce) [member function]
    def SetStickyForce(self, newStickyForce: StickyForceData) -> None: ...

    # long unsigned int VehicleWrapper::GetbDriving() [member function]
    def GetbDriving(self) -> bool: ...

    # void VehicleWrapper::SetbDriving(long unsigned int newbDriving) [member function]
    def SetbDriving(self, newbDriving: bool) -> None: ...

    # long unsigned int VehicleWrapper::GetbReplicatedHandbrake() [member function]
    def GetbReplicatedHandbrake(self) -> bool: ...

    # void VehicleWrapper::SetbReplicatedHandbrake(long unsigned int newbReplicatedHandbrake) [member function]
    def SetbReplicatedHandbrake(self, newbReplicatedHandbrake: bool) -> None: ...

    # long unsigned int VehicleWrapper::GetbJumped() [member function]
    def GetbJumped(self) -> bool: ...

    # void VehicleWrapper::SetbJumped(long unsigned int newbJumped) [member function]
    def SetbJumped(self, newbJumped: bool) -> None: ...

    # long unsigned int VehicleWrapper::GetbDoubleJumped() [member function]
    def GetbDoubleJumped(self) -> bool: ...

    # void VehicleWrapper::SetbDoubleJumped(long unsigned int newbDoubleJumped) [member function]
    def SetbDoubleJumped(self, newbDoubleJumped: bool) -> None: ...

    # long unsigned int VehicleWrapper::GetbOnGround() [member function]
    def GetbOnGround(self) -> bool: ...

    # void VehicleWrapper::SetbOnGround(long unsigned int newbOnGround) [member function]
    def SetbOnGround(self, newbOnGround: bool) -> None: ...

    # long unsigned int VehicleWrapper::GetbSuperSonic() [member function]
    def GetbSuperSonic(self) -> bool: ...

    # void VehicleWrapper::SetbSuperSonic(long unsigned int newbSuperSonic) [member function]
    def SetbSuperSonic(self, newbSuperSonic: bool) -> None: ...

    # long unsigned int VehicleWrapper::GetbPodiumMode() [member function]
    def GetbPodiumMode(self) -> bool: ...

    # void VehicleWrapper::SetbPodiumMode(long unsigned int newbPodiumMode) [member function]
    def SetbPodiumMode(self, newbPodiumMode: bool) -> None: ...

    # ControllerInput VehicleWrapper::GetInput() [member function]
    def GetInput(self) -> ControllerInput: ...

    # void VehicleWrapper::SetInput(ControllerInput newInput) [member function]
    def SetInput(self, newInput: ControllerInput) -> None: ...

    # unsigned char VehicleWrapper::GetReplicatedThrottle() [member function]
    def GetReplicatedThrottle(self) -> int: ...

    # void VehicleWrapper::SetReplicatedThrottle(unsigned char newReplicatedThrottle) [member function]
    def SetReplicatedThrottle(self, newReplicatedThrottle: int) -> None: ...

    # unsigned char VehicleWrapper::GetReplicatedSteer() [member function]
    def GetReplicatedSteer(self) -> int: ...

    # void VehicleWrapper::SetReplicatedSteer(unsigned char newReplicatedSteer) [member function]
    def SetReplicatedSteer(self, newReplicatedSteer: int) -> None: ...

    # AIControllerWrapper VehicleWrapper::GetAIController() [member function]
    def GetAIController(self) -> AIControllerWrapper: ...

    # PlayerControllerWrapper VehicleWrapper::GetPlayerController() [member function]
    def GetPlayerController(self) -> PlayerControllerWrapper: ...

    # void VehicleWrapper::SetPlayerController(PlayerControllerWrapper newPlayerController) [member function]
    def SetPlayerController(self, newPlayerController: PlayerControllerWrapper) -> None: ...

    # PriWrapper VehicleWrapper::GetPRI() [member function]
    def GetPRI(self) -> PriWrapper: ...

    # void VehicleWrapper::SetPRI(PriWrapper newPRI) [member function]
    def SetPRI(self, newPRI: PriWrapper) -> None: ...

    # int VehicleWrapper::GetVehicleUpdateTag() [member function]
    def GetVehicleUpdateTag(self) -> int: ...

    # void VehicleWrapper::SetVehicleUpdateTag(int newVehicleUpdateTag) [member function]
    def SetVehicleUpdateTag(self, newVehicleUpdateTag: int) -> None: ...

    # Vector VehicleWrapper::GetLocalCollisionOffset() [member function]
    def GetLocalCollisionOffset(self) -> Vector: ...

    # void VehicleWrapper::SetLocalCollisionOffset(Vector newLocalCollisionOffset) [member function]
    def SetLocalCollisionOffset(self, newLocalCollisionOffset: Vector) -> None: ...

    # Vector VehicleWrapper::GetLocalCollisionExtent() [member function]
    def GetLocalCollisionExtent(self) -> Vector: ...

    # void VehicleWrapper::SetLocalCollisionExtent(Vector newLocalCollisionExtent) [member function]
    def SetLocalCollisionExtent(self, newLocalCollisionExtent: Vector) -> None: ...

    # int VehicleWrapper::GetLastBallTouchFrame() [member function]
    def GetLastBallTouchFrame(self) -> int: ...

    # void VehicleWrapper::SetLastBallTouchFrame(int newLastBallTouchFrame) [member function]
    def SetLastBallTouchFrame(self, newLastBallTouchFrame: int) -> None: ...

    # int VehicleWrapper::GetLastBallImpactFrame() [member function]
    def GetLastBallImpactFrame(self) -> int: ...

    # void VehicleWrapper::SetLastBallImpactFrame(int newLastBallImpactFrame) [member function]
    def SetLastBallImpactFrame(self, newLastBallImpactFrame: int) -> None: ...

    # BoostWrapper VehicleWrapper::GetBoostComponent() [member function]
    def GetBoostComponent(self) -> BoostWrapper: ...

    # DodgeComponentWrapper VehicleWrapper::GetDodgeComponent() [member function]
    def GetDodgeComponent(self) -> DodgeComponentWrapper: ...

    # AirControlComponentWrapper VehicleWrapper::GetAirControlComponent() [member function]
    def GetAirControlComponent(self) -> AirControlComponentWrapper: ...

    # JumpComponentWrapper VehicleWrapper::GetJumpComponent() [member function]
    def GetJumpComponent(self) -> JumpComponentWrapper: ...

    # DoubleJumpComponentWrapper VehicleWrapper::GetDoubleJumpComponent() [member function]
    def GetDoubleJumpComponent(self) -> DoubleJumpComponentWrapper: ...

    # void VehicleWrapper::SetDoubleJumpComponent(DoubleJumpComponentWrapper newDoubleJumpComponent) [member function]
    def SetDoubleJumpComponent(self, newDoubleJumpComponent: DoubleJumpComponentWrapper) -> None: ...

    # float VehicleWrapper::GetTimeBelowSupersonicSpeed() [member function]
    def GetTimeBelowSupersonicSpeed(self) -> float: ...

    # void VehicleWrapper::SetTimeBelowSupersonicSpeed(float newTimeBelowSupersonicSpeed) [member function]
    def SetTimeBelowSupersonicSpeed(self, newTimeBelowSupersonicSpeed: float) -> None: ...

    # void VehicleWrapper::ForceNetPacketIfNearBall() [member function]
    def ForceNetPacketIfNearBall(self) -> None: ...

    # bool VehicleWrapper::IsCarWithinForwardEllipticalCone(VehicleWrapper OtherCar, float YawAngleDegrees, float PitchAngleDegrees) [member function]
    def IsCarWithinForwardEllipticalCone(self, OtherCar: VehicleWrapper, YawAngleDegrees: float, PitchAngleDegrees: float) -> bool: ...

    # float VehicleWrapper::GetForwardSpeed() [member function]
    def GetForwardSpeed(self) -> float: ...

    # float VehicleWrapper::GetTimeOffGround() [member function]
    def GetTimeOffGround(self) -> float: ...

    # float VehicleWrapper::GetTimeOnGround() [member function]
    def GetTimeOnGround(self) -> float: ...

    # Vector VehicleWrapper::GetGroundNormal() [member function]
    def GetGroundNormal(self) -> Vector: ...

    # bool VehicleWrapper::IsOnWall() [member function]
    def IsOnWall(self) -> bool: ...

    # bool VehicleWrapper::IsOnGround() [member function]
    def IsOnGround(self) -> bool: ...

    # int VehicleWrapper::GetNumWheelWorldContacts() [member function]
    def GetNumWheelWorldContacts(self) -> int: ...

    # int VehicleWrapper::GetNumWheelContacts() [member function]
    def GetNumWheelContacts(self) -> int: ...

    # void VehicleWrapper::ZeroMovementVariables() [member function]
    def ZeroMovementVariables(self) -> None: ...

    # void VehicleWrapper::eventSetVehicleInput(ControllerInput & NewInput) [member function]
    def eventSetVehicleInput(self, NewInput: ControllerInput) -> None: ...

    # void VehicleWrapper::EnablePodiumMode() [member function]
    def EnablePodiumMode(self) -> None: ...

    # void VehicleWrapper::SetDriving(long unsigned int bDrive) [member function]
    def SetDriving(self, bDrive: bool) -> None: ...

    # void VehicleWrapper::InitAudioParams() [member function]
    def InitAudioParams(self) -> None: ...

    # void VehicleWrapper::OnPRIChanged() [member function]
    def OnPRIChanged(self) -> None: ...

    # void VehicleWrapper::OnControllerChanged() [member function]
    def OnControllerChanged(self) -> None: ...

    # void VehicleWrapper::UnPossessed() [member function]
    def UnPossessed(self) -> None: ...

    # void VehicleWrapper::EventPRIChanged(VehicleWrapper Vehicle) [member function]
    def EventPRIChanged(self, Vehicle: VehicleWrapper) -> None: ...

    # Private:
    # VehicleWrapper::Impl [class declaration]

    # VehicleWrapper::pimpl [variable]
    @property
    def pimpl(self) -> Any: ...


