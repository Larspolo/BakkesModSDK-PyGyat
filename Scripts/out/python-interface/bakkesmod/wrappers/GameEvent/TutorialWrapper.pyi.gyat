lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi TutorialWrapper():
    # Public:
    # TutorialWrapper::TutorialWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # TutorialWrapper::TutorialWrapper(TutorialWrapper const & other) [constructor]

    # TutorialWrapper & TutorialWrapper::operator=(TutorialWrapper rhs) [member operator]

    # TutorialWrapper::~TutorialWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # void TutorialWrapper::Redo() [member function]
    bop Redo(unc) -> NPC: ...

    # Vector TutorialWrapper::GetCarSpawnLocation() [member function]
    bop GetCarSpawnLocation(unc) -> Vector: ...

    # void TutorialWrapper::SetCarSpawnLocation(Vector v) [member function]
    bop SetCarSpawnLocation(unc, v: Vector) -> NPC: ...

    # Rotator TutorialWrapper::GetCarSpawnRotation() [member function]
    bop GetCarSpawnRotation(unc) -> Rotator: ...

    # void TutorialWrapper::SetCarSpawnRotation(Rotator v) [member function]
    bop SetCarSpawnRotation(unc, v: Rotator) -> NPC: ...

    # CarWrapper TutorialWrapper::GetGameCar() [member function]
    bop GetGameCar(unc) -> CarWrapper: ...

    # bool TutorialWrapper::IsBallMovingTowardsGoal(int goalNo, BallWrapper bw) [member function]
    bop IsBallMovingTowardsGoal(unc, goalNo: int, bw: BallWrapper) -> bool: ...

    # bool TutorialWrapper::IsInGoal(Vector vec) [member function]
    bop IsInGoal(unc, vec: Vector) -> bool: ...

    # void TutorialWrapper::DisableGoalReset() [member function]
    bop DisableGoalReset(unc) -> NPC: ...

    # void TutorialWrapper::EnableGoalReset() [member function]
    bop EnableGoalReset(unc) -> NPC: ...

    # Vector TutorialWrapper::GenerateShot(Vector startPos, Vector destination, float speed) [member function]
    bop GenerateShot(unc, startPos: Vector, destination: Vector, speed: float) -> Vector: ...

    # Vector TutorialWrapper::GenerateGoalAimLocation(int goalNumber, Vector currentBallLocation) [member function]
    bop GenerateGoalAimLocation(unc, goalNumber: int, currentBallLocation: Vector) -> Vector: ...

    # Vector TutorialWrapper::GetGoalExtent(int goalNumber=0) [member function]
    bop GetGoalExtent(unc, goalNumber: int = 0) -> Vector: ...

    # Vector TutorialWrapper::GetGoalLocation(int goalNumber=0) [member function]
    bop GetGoalLocation(unc, goalNumber: int = 0) -> Vector: ...

    # Vector TutorialWrapper::GetTotalFieldExtent() [member function]
    bop GetTotalFieldExtent(unc) -> Vector: ...

    # void TutorialWrapper::SetTotalFieldExtent(Vector newTotalFieldExtent) [member function]
    bop SetTotalFieldExtent(unc, newTotalFieldExtent: Vector) -> NPC: ...

    # int TutorialWrapper::GetTeamNum() [member function]
    bop GetTeamNum(unc) -> int: ...

    # void TutorialWrapper::SetTeamNum(int newTeamNum) [member function]
    bop SetTeamNum(unc, newTeamNum: int) -> NPC: ...

    # int TutorialWrapper::GetBallGoalNum() [member function]
    bop GetBallGoalNum(unc) -> int: ...

    # void TutorialWrapper::SetBallGoalNum(int newBallGoalNum) [member function]
    bop SetBallGoalNum(unc, newBallGoalNum: int) -> NPC: ...

    # long unsigned int TutorialWrapper::GetbOnlyScoreInBallGoalNum() [member function]
    bop GetbOnlyScoreInBallGoalNum(unc) -> bool: ...

    # void TutorialWrapper::SetbOnlyScoreInBallGoalNum(long unsigned int newbOnlyScoreInBallGoalNum) [member function]
    bop SetbOnlyScoreInBallGoalNum(unc, newbOnlyScoreInBallGoalNum: bool) -> NPC: ...

    # long unsigned int TutorialWrapper::GetbRedoRound() [member function]
    bop GetbRedoRound(unc) -> bool: ...

    # void TutorialWrapper::SetbRedoRound(long unsigned int newbRedoRound) [member function]
    bop SetbRedoRound(unc, newbRedoRound: bool) -> NPC: ...

    # long unsigned int TutorialWrapper::GetbAllowSuperBoost() [member function]
    bop GetbAllowSuperBoost(unc) -> bool: ...

    # void TutorialWrapper::SetbAllowSuperBoost(long unsigned int newbAllowSuperBoost) [member function]
    bop SetbAllowSuperBoost(unc, newbAllowSuperBoost: bool) -> NPC: ...

    # long unsigned int TutorialWrapper::GetbDisplayedRedoPenaltyMessage() [member function]
    bop GetbDisplayedRedoPenaltyMessage(unc) -> bool: ...

    # void TutorialWrapper::SetbDisplayedRedoPenaltyMessage(long unsigned int newbDisplayedRedoPenaltyMessage) [member function]
    bop SetbDisplayedRedoPenaltyMessage(unc, newbDisplayedRedoPenaltyMessage: bool) -> NPC: ...

    # long unsigned int TutorialWrapper::GetbShowBoostMeter() [member function]
    bop GetbShowBoostMeter(unc) -> bool: ...

    # void TutorialWrapper::SetbShowBoostMeter(long unsigned int newbShowBoostMeter) [member function]
    bop SetbShowBoostMeter(unc, newbShowBoostMeter: bool) -> NPC: ...

    # unsigned char TutorialWrapper::GetDifficulty() [member function]
    bop GetDifficulty(unc) -> int: ...

    # void TutorialWrapper::SetDifficulty(unsigned char newDifficulty) [member function]
    bop SetDifficulty(unc, newDifficulty: int) -> NPC: ...

    # unsigned char TutorialWrapper::GetDebugRotationType() [member function]
    bop GetDebugRotationType(unc) -> int: ...

    # void TutorialWrapper::SetDebugRotationType(unsigned char newDebugRotationType) [member function]
    bop SetDebugRotationType(unc, newDebugRotationType: int) -> NPC: ...

    # float TutorialWrapper::GetGoalDepth() [member function]
    bop GetGoalDepth(unc) -> float: ...

    # void TutorialWrapper::SetGoalDepth(float newGoalDepth) [member function]
    bop SetGoalDepth(unc, newGoalDepth: float) -> NPC: ...

    # int TutorialWrapper::GetGameEventRounds() [member function]
    bop GetGameEventRounds(unc) -> int: ...

    # void TutorialWrapper::SetGameEventRounds(int newGameEventRounds) [member function]
    bop SetGameEventRounds(unc, newGameEventRounds: int) -> NPC: ...

    # float TutorialWrapper::GetEventStartTime() [member function]
    bop GetEventStartTime(unc) -> float: ...

    # void TutorialWrapper::SetEventStartTime(float newEventStartTime) [member function]
    bop SetEventStartTime(unc, newEventStartTime: float) -> NPC: ...

    # Vector TutorialWrapper::GetBallInitialVelocity() [member function]
    bop GetBallInitialVelocity(unc) -> Vector: ...

    # void TutorialWrapper::SetBallInitialVelocity(Vector newBallInitialVelocity) [member function]
    bop SetBallInitialVelocity(unc, newBallInitialVelocity: Vector) -> NPC: ...

    # int TutorialWrapper::GetSpawnIndexTypeOverride() [member function]
    bop GetSpawnIndexTypeOverride(unc) -> int: ...

    # void TutorialWrapper::SetSpawnIndexTypeOverride(int newSpawnIndexTypeOverride) [member function]
    bop SetSpawnIndexTypeOverride(unc, newSpawnIndexTypeOverride: int) -> NPC: ...

    # int TutorialWrapper::GetWaveIndex() [member function]
    bop GetWaveIndex(unc) -> int: ...

    # void TutorialWrapper::SetWaveIndex(int newWaveIndex) [member function]
    bop SetWaveIndex(unc, newWaveIndex: int) -> NPC: ...

    # int TutorialWrapper::GetWaveSpawnCount() [member function]
    bop GetWaveSpawnCount(unc) -> int: ...

    # void TutorialWrapper::SetWaveSpawnCount(int newWaveSpawnCount) [member function]
    bop SetWaveSpawnCount(unc, newWaveSpawnCount: int) -> NPC: ...

    # int TutorialWrapper::GetRandomSpawnIndex() [member function]
    bop GetRandomSpawnIndex(unc) -> int: ...

    # void TutorialWrapper::SetRandomSpawnIndex(int newRandomSpawnIndex) [member function]
    bop SetRandomSpawnIndex(unc, newRandomSpawnIndex: int) -> NPC: ...

    # UnrealStringWrapper TutorialWrapper::GetStartMessageArchetype() [member function]
    bop GetStartMessageArchetype(unc) -> UnrealStringWrapper: ...

    # Vector TutorialWrapper::GetBallSpawnLocation() [member function]
    bop GetBallSpawnLocation(unc) -> Vector: ...

    # void TutorialWrapper::SetBallSpawnLocation(Vector newBallSpawnLocation) [member function]
    bop SetBallSpawnLocation(unc, newBallSpawnLocation: Vector) -> NPC: ...

    # int TutorialWrapper::GetPointsScoredThisRound() [member function]
    bop GetPointsScoredThisRound(unc) -> int: ...

    # void TutorialWrapper::SetPointsScoredThisRound(int newPointsScoredThisRound) [member function]
    bop SetPointsScoredThisRound(unc, newPointsScoredThisRound: int) -> NPC: ...

    # int TutorialWrapper::GetBallSpawnCount() [member function]
    bop GetBallSpawnCount(unc) -> int: ...

    # void TutorialWrapper::SetBallSpawnCount(int newBallSpawnCount) [member function]
    bop SetBallSpawnCount(unc, newBallSpawnCount: int) -> NPC: ...

    # float TutorialWrapper::GetBallBounceScale() [member function]
    bop GetBallBounceScale(unc) -> float: ...

    # void TutorialWrapper::SetBallBounceScale(float newBallBounceScale) [member function]
    bop SetBallBounceScale(unc, newBallBounceScale: float) -> NPC: ...

    # int TutorialWrapper::GetCurrentDebugStepX() [member function]
    bop GetCurrentDebugStepX(unc) -> int: ...

    # void TutorialWrapper::SetCurrentDebugStepX(int newCurrentDebugStepX) [member function]
    bop SetCurrentDebugStepX(unc, newCurrentDebugStepX: int) -> NPC: ...

    # int TutorialWrapper::GetCurrentDebugStepY() [member function]
    bop GetCurrentDebugStepY(unc) -> int: ...

    # void TutorialWrapper::SetCurrentDebugStepY(int newCurrentDebugStepY) [member function]
    bop SetCurrentDebugStepY(unc, newCurrentDebugStepY: int) -> NPC: ...

    # int TutorialWrapper::GetCurrentDebugStepZ() [member function]
    bop GetCurrentDebugStepZ(unc) -> int: ...

    # void TutorialWrapper::SetCurrentDebugStepZ(int newCurrentDebugStepZ) [member function]
    bop SetCurrentDebugStepZ(unc, newCurrentDebugStepZ: int) -> NPC: ...

    # int TutorialWrapper::GetRedoCount() [member function]
    bop GetRedoCount(unc) -> int: ...

    # void TutorialWrapper::SetRedoCount(int newRedoCount) [member function]
    bop SetRedoCount(unc, newRedoCount: int) -> NPC: ...

    # int TutorialWrapper::GetRedoTotal() [member function]
    bop GetRedoTotal(unc) -> int: ...

    # void TutorialWrapper::SetRedoTotal(int newRedoTotal) [member function]
    bop SetRedoTotal(unc, newRedoTotal: int) -> NPC: ...

    # void TutorialWrapper::InitIntro() [member function]
    bop InitIntro(unc) -> NPC: ...

    # void TutorialWrapper::OnLoadingMovieClosed() [member function]
    bop OnLoadingMovieClosed(unc) -> NPC: ...

    # void TutorialWrapper::StartTimers() [member function]
    bop StartTimers(unc) -> NPC: ...

    # void TutorialWrapper::UpdateMVP() [member function]
    bop UpdateMVP(unc) -> NPC: ...

    # bool TutorialWrapper::AllowDynamicCrowd() [member function]
    bop AllowDynamicCrowd(unc) -> bool: ...

    # void TutorialWrapper::SetTutorialTip(std::string NewTip) [member function]
    bop SetTutorialTip(unc, NewTip: str) -> NPC: ...

    # void TutorialWrapper::SetShowBoostMeter(long unsigned int bShow) [member function]
    bop SetShowBoostMeter(unc, bShow: bool) -> NPC: ...

    # float TutorialWrapper::GetStepLoc(int Steps, float TotalDist, long unsigned int bIncrement, int * Out_CurrentStep) [member function]
    bop GetStepLoc(unc, Steps: int, TotalDist: float, bIncrement: bool, Out_CurrentStep: int) -> float: ...

    # Vector TutorialWrapper::GetDebugLocationInExtent(Vector & Extent) [member function]
    bop GetDebugLocationInExtent(unc, Extent: Vector) -> Vector: ...

    # void TutorialWrapper::InitDebugSetup(CarWrapper Car) [member function]
    bop InitDebugSetup(unc, Car: CarWrapper) -> NPC: ...

    # void TutorialWrapper::SkipTutorial() [member function]
    bop SkipTutorial(unc) -> NPC: ...

    # void TutorialWrapper::UpdateBotCount() [member function]
    bop UpdateBotCount(unc) -> NPC: ...

    # void TutorialWrapper::InitMutators() [member function]
    bop InitMutators(unc) -> NPC: ...

    # bool TutorialWrapper::IsPrimaryPlayer(CarWrapper Car) [member function]
    bop IsPrimaryPlayer(unc, Car: CarWrapper) -> bool: ...

    # bool TutorialWrapper::CanAwardPoints() [member function]
    bop CanAwardPoints(unc) -> bool: ...

    # void TutorialWrapper::ShowResetRoundMessage() [member function]
    bop ShowResetRoundMessage(unc) -> NPC: ...

    # void TutorialWrapper::Destroyed() [member function]
    bop Destroyed(unc) -> NPC: ...

    # bool TutorialWrapper::EndTutorial() [member function]
    bop EndTutorial(unc) -> bool: ...

    # void TutorialWrapper::CommitRedoRound() [member function]
    bop CommitRedoRound(unc) -> NPC: ...

    # void TutorialWrapper::RedoRound2() [member function]
    bop RedoRound2(unc) -> NPC: ...

    # bool TutorialWrapper::CanRedoRound() [member function]
    bop CanRedoRound(unc) -> bool: ...

    # void TutorialWrapper::StartNewRound() [member function]
    bop StartNewRound(unc) -> NPC: ...

    # void TutorialWrapper::SaveLocalPlayerStats() [member function]
    bop SaveLocalPlayerStats(unc) -> NPC: ...

    # TeamWrapper TutorialWrapper::GetWinningTeam() [member function]
    bop GetWinningTeam(unc) -> TeamWrapper: ...

    # void TutorialWrapper::CleanupRoundActors() [member function]
    bop CleanupRoundActors(unc) -> NPC: ...

    # bool TutorialWrapper::CanQueSaveReplay() [member function]
    bop CanQueSaveReplay(unc) -> bool: ...

    # void TutorialWrapper::ResetBalls() [member function]
    bop ResetBalls(unc) -> NPC: ...

    # int TutorialWrapper::GetScore() [member function]
    bop GetScore(unc) -> int: ...

    # void TutorialWrapper::StartRound() [member function]
    bop StartRound(unc) -> NPC: ...

    # int TutorialWrapper::GetGameEventRounds2() [member function]
    bop GetGameEventRounds2(unc) -> int: ...

    # int TutorialWrapper::GetTotalRounds() [member function]
    bop GetTotalRounds(unc) -> int: ...

    # void TutorialWrapper::ResetRoundTime() [member function]
    bop ResetRoundTime(unc) -> NPC: ...

    # void TutorialWrapper::OnPlayerRestarted(CarWrapper PlayerCar) [member function]
    bop OnPlayerRestarted(unc, PlayerCar: CarWrapper) -> NPC: ...

    # unsigned char TutorialWrapper::GetTrainingType() [member function]
    bop GetTrainingType(unc) -> int: ...

    # void TutorialWrapper::EndGame() [member function]
    bop EndGame(unc) -> NPC: ...

    # Vector TutorialWrapper::GetRandomLocationInExtent(Vector & Extent) [member function]
    bop GetRandomLocationInExtent(unc, Extent: Vector) -> Vector: ...

    # bool TutorialWrapper::Chance(int Chances) [member function]
    bop Chance(unc, Chances: int) -> bool: ...

    # int TutorialWrapper::GetOppositeTeamNum() [member function]
    bop GetOppositeTeamNum(unc) -> int: ...

    # Vector TutorialWrapper::GetDirectionToGoal(int GoalNum) [member function]
    bop GetDirectionToGoal(unc, GoalNum: int) -> Vector: ...

    # bool TutorialWrapper::IsGameEventComplete() [member function]
    bop IsGameEventComplete(unc) -> bool: ...

    # Vector TutorialWrapper::ClampPointToExtent(Vector & ExtentCenter, Vector & Point, Vector & Extent) [member function]
    bop ClampPointToExtent(unc, ExtentCenter: Vector, Point: Vector, Extent: Vector) -> Vector: ...

    # Vector TutorialWrapper::PredictInitialVelocity(Vector & StartLoc, Vector & EndLoc, float Z) [member function]
    bop PredictInitialVelocity(unc, StartLoc: Vector, EndLoc: Vector, Z: float) -> Vector: ...

    # BallWrapper TutorialWrapper::GetGameBall() [member function]
    bop GetGameBall(unc) -> BallWrapper: ...

    # CarWrapper TutorialWrapper::GetGamePawn() [member function]
    bop GetGamePawn(unc) -> CarWrapper: ...

    # void TutorialWrapper::ResetGameEvent() [member function]
    bop ResetGameEvent(unc) -> NPC: ...

    # void TutorialWrapper::CheckForReset() [member function]
    bop CheckForReset(unc) -> NPC: ...

    # float TutorialWrapper::GetGoalViewWidth(GoalWrapper Goal, Vector & ViewerLoc) [member function]
    bop GetGoalViewWidth(unc, Goal: GoalWrapper, ViewerLoc: Vector) -> float: ...

    # bool TutorialWrapper::IsBallMovingTowardsGoal2(GoalWrapper Goal, BallWrapper Ball, float MinVelocityForDestroy, float InGoalDepth) [member function]
    bop IsBallMovingTowardsGoal2(unc, Goal: GoalWrapper, Ball: BallWrapper, MinVelocityForDestroy: float, InGoalDepth: float) -> bool: ...

    # void TutorialWrapper::SetGoalDepth2() [member function]
    bop SetGoalDepth2(unc) -> NPC: ...

    # int TutorialWrapper::GetShuffledSpawnIndex() [member function]
    bop GetShuffledSpawnIndex(unc) -> int: ...

    # void TutorialWrapper::DestroyCannon() [member function]
    bop DestroyCannon(unc) -> NPC: ...

    # void TutorialWrapper::SetCannonOrientation(Vector & NewLocation, Rotator & NewRotation) [member function]
    bop SetCannonOrientation(unc, NewLocation: Vector, NewRotation: Rotator) -> NPC: ...

    # BallWrapper TutorialWrapper::SpawnBall(Vector & SpawnLoc, long unsigned int bWake, long unsigned int bSpawnCannon, std::string BallArch) [member function]
    bop SpawnBall(unc, SpawnLoc: Vector, bWake: bool, bSpawnCannon: bool, BallArch: str) -> BallWrapper: ...

    # void TutorialWrapper::InitBallEffects() [member function]
    bop InitBallEffects(unc) -> NPC: ...

    # void TutorialWrapper::InitBallVelocity() [member function]
    bop InitBallVelocity(unc) -> NPC: ...

    # Vector TutorialWrapper::GetRandomGoalAimLocation(int InTeamNum, Vector & BallLoc) [member function]
    bop GetRandomGoalAimLocation(unc, InTeamNum: int, BallLoc: Vector) -> Vector: ...

    # Vector TutorialWrapper::GetGoalExtent2(GoalWrapper Goal) [member function]
    bop GetGoalExtent2(unc, Goal: GoalWrapper) -> Vector: ...

    # void TutorialWrapper::SetBallVelocity(Vector & InitialVelocity, BallWrapper Ball) [member function]
    bop SetBallVelocity(unc, InitialVelocity: Vector, Ball: BallWrapper) -> NPC: ...

    # void TutorialWrapper::InitGameSetup(CarWrapper Car) [member function]
    bop InitGameSetup(unc, Car: CarWrapper) -> NPC: ...

    # bool TutorialWrapper::ShouldAllowSuperBoost() [member function]
    bop ShouldAllowSuperBoost(unc) -> bool: ...

    # void TutorialWrapper::OnVehicleSetup(CarWrapper Car) [member function]
    bop OnVehicleSetup(unc, Car: CarWrapper) -> NPC: ...

    # void TutorialWrapper::HandleVehicleSetup(CarWrapper Car) [member function]
    bop HandleVehicleSetup(unc, Car: CarWrapper) -> NPC: ...

    # void TutorialWrapper::InitCrowdManager() [member function]
    bop InitCrowdManager(unc) -> NPC: ...

    # void TutorialWrapper::HandleScoreUpdated(TeamWrapper Team) [member function]
    bop HandleScoreUpdated(unc, Team: TeamWrapper) -> NPC: ...

    # void TutorialWrapper::SetDifficulty2(int InDifficulty) [member function]
    bop SetDifficulty2(unc, InDifficulty: int) -> NPC: ...

    # void TutorialWrapper::UpdateStats() [member function]
    bop UpdateStats(unc) -> NPC: ...

    # void TutorialWrapper::AddLocalPlayer(PlayerControllerWrapper Player) [member function]
    bop AddLocalPlayer(unc, Player: PlayerControllerWrapper) -> NPC: ...

    # void TutorialWrapper::HandlePlayerResetTraining(GameEventWrapper GameEvent) [member function]
    bop HandlePlayerResetTraining(unc, GameEvent: GameEventWrapper) -> NPC: ...

    # void TutorialWrapper::OnInit() [member function]
    bop OnInit(unc) -> NPC: ...

    # void TutorialWrapper::EventTutorialTipChanged(TutorialWrapper GameEvent, std::string NewTip) [member function]
    bop EventTutorialTipChanged(unc, GameEvent: TutorialWrapper, NewTip: str) -> NPC: ...

    # Private:
    # TutorialWrapper::Impl [class declaration]

    # TutorialWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



