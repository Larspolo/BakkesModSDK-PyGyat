lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi ServerWrapper():
    # Public:
    # ServerWrapper::ServerWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # ServerWrapper::ServerWrapper(ServerWrapper const & other) [constructor]

    # ServerWrapper & ServerWrapper::operator=(ServerWrapper rhs) [member operator]

    # ServerWrapper::~ServerWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # BallWrapper ServerWrapper::GetBall() [member function]
    bop GetBall(unc) -> BallWrapper: ...

    # void ServerWrapper::SpawnCar(int carBody, std::string name) [member function]
    bop SpawnCar(unc, carBody: int, name: str) -> NPC: ...

    # void ServerWrapper::SpawnBot(int carBody, std::string name) [member function]
    bop SpawnBot(unc, carBody: int, name: str) -> NPC: ...

    # BallWrapper ServerWrapper::SpawnBall(Vector const position, bool wake, bool spawnCannon) [member function]
    bop SpawnBall(unc, position: Vector, wake: bool, spawnCannon: bool) -> BallWrapper: ...

    # bool ServerWrapper::HasAuthority() [member function]
    bop HasAuthority(unc) -> bool: ...

    # void ServerWrapper::SetGameSpeed(float GameSpeed) [member function]
    bop SetGameSpeed(unc, GameSpeed: float) -> NPC: ...

    # float ServerWrapper::GetGameSpeed() [member function]
    bop GetGameSpeed(unc) -> float: ...

    # void ServerWrapper::SetSecondsElapsed(float SecondsElapsed) [member function]
    bop SetSecondsElapsed(unc, SecondsElapsed: float) -> NPC: ...

    # float ServerWrapper::GetSecondsElapsed() [member function]
    bop GetSecondsElapsed(unc) -> float: ...

    # CarWrapper ServerWrapper::GetGameCar() [member function]
    bop GetGameCar(unc) -> CarWrapper: ...

    # bool ServerWrapper::IsBallMovingTowardsGoal(int goalNo, BallWrapper bw) [member function]
    bop IsBallMovingTowardsGoal(unc, goalNo: int, bw: BallWrapper) -> bool: ...

    # bool ServerWrapper::IsInGoal(Vector vec) [member function]
    bop IsInGoal(unc, vec: Vector) -> bool: ...

    # void ServerWrapper::DisableGoalReset() [member function]
    bop DisableGoalReset(unc) -> NPC: ...

    # void ServerWrapper::EnableGoalReset() [member function]
    bop EnableGoalReset(unc) -> NPC: ...

    # Vector ServerWrapper::GenerateShot(Vector startPos, Vector destination, float speed) [member function]
    bop GenerateShot(unc, startPos: Vector, destination: Vector, speed: float) -> Vector: ...

    # Vector ServerWrapper::GenerateGoalAimLocation(int goalNumber, Vector currentBallLocation) [member function]
    bop GenerateGoalAimLocation(unc, goalNumber: int, currentBallLocation: Vector) -> Vector: ...

    # Vector ServerWrapper::GetGoalExtent(int goalNumber=0) [member function]
    bop GetGoalExtent(unc, goalNumber: int = 0) -> Vector: ...

    # Vector ServerWrapper::GetGoalLocation(int goalNumber=0) [member function]
    bop GetGoalLocation(unc, goalNumber: int = 0) -> Vector: ...

    # CarWrapper ServerWrapper::GetTestCarArchetype() [member function]
    bop GetTestCarArchetype(unc) -> CarWrapper: ...

    # void ServerWrapper::SetTestCarArchetype(CarWrapper newTestCarArchetype) [member function]
    bop SetTestCarArchetype(unc, newTestCarArchetype: CarWrapper) -> NPC: ...

    # BallWrapper ServerWrapper::GetBallArchetype() [member function]
    bop GetBallArchetype(unc) -> BallWrapper: ...

    # void ServerWrapper::SetBallArchetype(BallWrapper newBallArchetype) [member function]
    bop SetBallArchetype(unc, newBallArchetype: BallWrapper) -> NPC: ...

    # ActorWrapper ServerWrapper::GetBallSpawnPoint() [member function]
    bop GetBallSpawnPoint(unc) -> ActorWrapper: ...

    # void ServerWrapper::SetBallSpawnPoint(ActorWrapper newBallSpawnPoint) [member function]
    bop SetBallSpawnPoint(unc, newBallSpawnPoint: ActorWrapper) -> NPC: ...

    # int ServerWrapper::GetSeriesLength() [member function]
    bop GetSeriesLength(unc) -> int: ...

    # void ServerWrapper::SetSeriesLength(int newSeriesLength) [member function]
    bop SetSeriesLength(unc, newSeriesLength: int) -> NPC: ...

    # int ServerWrapper::GetGameTime() [member function]
    bop GetGameTime(unc) -> int: ...

    # void ServerWrapper::SetGameTime(int newGameTime) [member function]
    bop SetGameTime(unc, newGameTime: int) -> NPC: ...

    # int ServerWrapper::GetWarmupTime() [member function]
    bop GetWarmupTime(unc) -> int: ...

    # void ServerWrapper::SetWarmupTime(int newWarmupTime) [member function]
    bop SetWarmupTime(unc, newWarmupTime: int) -> NPC: ...

    # int ServerWrapper::GetMaxScore() [member function]
    bop GetMaxScore(unc) -> int: ...

    # void ServerWrapper::SetMaxScore(int newMaxScore) [member function]
    bop SetMaxScore(unc, newMaxScore: int) -> NPC: ...

    # int ServerWrapper::GetAutoBalanceDifference() [member function]
    bop GetAutoBalanceDifference(unc) -> int: ...

    # void ServerWrapper::SetAutoBalanceDifference(int newAutoBalanceDifference) [member function]
    bop SetAutoBalanceDifference(unc, newAutoBalanceDifference: int) -> NPC: ...

    # int ServerWrapper::GetLastTrialTime() [member function]
    bop GetLastTrialTime(unc) -> int: ...

    # void ServerWrapper::SetLastTrialTime(int newLastTrialTime) [member function]
    bop SetLastTrialTime(unc, newLastTrialTime: int) -> NPC: ...

    # float ServerWrapper::GetScoreSlomoTime() [member function]
    bop GetScoreSlomoTime(unc) -> float: ...

    # void ServerWrapper::SetScoreSlomoTime(float newScoreSlomoTime) [member function]
    bop SetScoreSlomoTime(unc, newScoreSlomoTime: float) -> NPC: ...

    # float ServerWrapper::GetGameTimeRemaining() [member function]
    bop GetGameTimeRemaining(unc) -> float: ...

    # void ServerWrapper::SetGameTimeRemaining(float newGameTimeRemaining) [member function]
    bop SetGameTimeRemaining(unc, newGameTimeRemaining: float) -> NPC: ...

    # int ServerWrapper::GetSecondsRemaining() [member function]
    bop GetSecondsRemaining(unc) -> int: ...

    # void ServerWrapper::SetSecondsRemaining(int newSecondsRemaining) [member function]
    bop SetSecondsRemaining(unc, newSecondsRemaining: int) -> NPC: ...

    # int ServerWrapper::GetWaitTimeRemaining() [member function]
    bop GetWaitTimeRemaining(unc) -> int: ...

    # void ServerWrapper::SetWaitTimeRemaining(int newWaitTimeRemaining) [member function]
    bop SetWaitTimeRemaining(unc, newWaitTimeRemaining: int) -> NPC: ...

    # float ServerWrapper::GetTotalGameTimePlayed() [member function]
    bop GetTotalGameTimePlayed(unc) -> float: ...

    # void ServerWrapper::SetTotalGameTimePlayed(float newTotalGameTimePlayed) [member function]
    bop SetTotalGameTimePlayed(unc, newTotalGameTimePlayed: float) -> NPC: ...

    # float ServerWrapper::GetOvertimeTimePlayed() [member function]
    bop GetOvertimeTimePlayed(unc) -> float: ...

    # void ServerWrapper::SetOvertimeTimePlayed(float newOvertimeTimePlayed) [member function]
    bop SetOvertimeTimePlayed(unc, newOvertimeTimePlayed: float) -> NPC: ...

    # long unsigned int ServerWrapper::GetbRoundActive() [member function]
    bop GetbRoundActive(unc) -> bool: ...

    # void ServerWrapper::SetbRoundActive(long unsigned int newbRoundActive) [member function]
    bop SetbRoundActive(unc, newbRoundActive: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbPlayReplays() [member function]
    bop GetbPlayReplays(unc) -> bool: ...

    # void ServerWrapper::SetbPlayReplays(long unsigned int newbPlayReplays) [member function]
    bop SetbPlayReplays(unc, newbPlayReplays: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbBallHasBeenHit() [member function]
    bop GetbBallHasBeenHit(unc) -> bool: ...

    # void ServerWrapper::SetbBallHasBeenHit(long unsigned int newbBallHasBeenHit) [member function]
    bop SetbBallHasBeenHit(unc, newbBallHasBeenHit: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbOverTime() [member function]
    bop GetbOverTime(unc) -> bool: ...

    # void ServerWrapper::SetbOverTime(long unsigned int newbOverTime) [member function]
    bop SetbOverTime(unc, newbOverTime: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbUnlimitedTime() [member function]
    bop GetbUnlimitedTime(unc) -> bool: ...

    # void ServerWrapper::SetbUnlimitedTime(long unsigned int newbUnlimitedTime) [member function]
    bop SetbUnlimitedTime(unc, newbUnlimitedTime: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbKickOnTrialEnd() [member function]
    bop GetbKickOnTrialEnd(unc) -> bool: ...

    # void ServerWrapper::SetbKickOnTrialEnd(long unsigned int newbKickOnTrialEnd) [member function]
    bop SetbKickOnTrialEnd(unc, newbKickOnTrialEnd: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbNoContest() [member function]
    bop GetbNoContest(unc) -> bool: ...

    # void ServerWrapper::SetbNoContest(long unsigned int newbNoContest) [member function]
    bop SetbNoContest(unc, newbNoContest: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbDisableGoalDelay() [member function]
    bop GetbDisableGoalDelay(unc) -> bool: ...

    # void ServerWrapper::SetbDisableGoalDelay(long unsigned int newbDisableGoalDelay) [member function]
    bop SetbDisableGoalDelay(unc, newbDisableGoalDelay: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbShowNoScorerGoalMessage() [member function]
    bop GetbShowNoScorerGoalMessage(unc) -> bool: ...

    # void ServerWrapper::SetbShowNoScorerGoalMessage(long unsigned int newbShowNoScorerGoalMessage) [member function]
    bop SetbShowNoScorerGoalMessage(unc, newbShowNoScorerGoalMessage: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbMatchEnded() [member function]
    bop GetbMatchEnded(unc) -> bool: ...

    # void ServerWrapper::SetbMatchEnded(long unsigned int newbMatchEnded) [member function]
    bop SetbMatchEnded(unc, newbMatchEnded: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbShowIntroScene() [member function]
    bop GetbShowIntroScene(unc) -> bool: ...

    # void ServerWrapper::SetbShowIntroScene(long unsigned int newbShowIntroScene) [member function]
    bop SetbShowIntroScene(unc, newbShowIntroScene: bool) -> NPC: ...

    # long unsigned int ServerWrapper::GetbClubMatch() [member function]
    bop GetbClubMatch(unc) -> bool: ...

    # void ServerWrapper::SetbClubMatch(long unsigned int newbClubMatch) [member function]
    bop SetbClubMatch(unc, newbClubMatch: bool) -> NPC: ...

    # int ServerWrapper::GetNextSpawnIndex() [member function]
    bop GetNextSpawnIndex(unc) -> int: ...

    # void ServerWrapper::SetNextSpawnIndex(int newNextSpawnIndex) [member function]
    bop SetNextSpawnIndex(unc, newNextSpawnIndex: int) -> NPC: ...

    # ReplayDirectorWrapper ServerWrapper::GetReplayDirectorArchetype() [member function]
    bop GetReplayDirectorArchetype(unc) -> ReplayDirectorWrapper: ...

    # void ServerWrapper::SetReplayDirectorArchetype(ReplayDirectorWrapper newReplayDirectorArchetype) [member function]
    bop SetReplayDirectorArchetype(unc, newReplayDirectorArchetype: ReplayDirectorWrapper) -> NPC: ...

    # ReplayDirectorWrapper ServerWrapper::GetReplayDirector() [member function]
    bop GetReplayDirector(unc) -> ReplayDirectorWrapper: ...

    # void ServerWrapper::SetReplayDirector(ReplayDirectorWrapper newReplayDirector) [member function]
    bop SetReplayDirector(unc, newReplayDirector: ReplayDirectorWrapper) -> NPC: ...

    # ArrayWrapper<BallWrapper> ServerWrapper::GetGameBalls() [member function]
    bop GetGameBalls(unc) -> ArrayWrapper_BallWrapper: ...

    # int ServerWrapper::GetTotalGameBalls() [member function]
    bop GetTotalGameBalls(unc) -> int: ...

    # void ServerWrapper::SetTotalGameBalls(int newTotalGameBalls) [member function]
    bop SetTotalGameBalls(unc, newTotalGameBalls: int) -> NPC: ...

    # float ServerWrapper::GetPostGoalTime() [member function]
    bop GetPostGoalTime(unc) -> float: ...

    # void ServerWrapper::SetPostGoalTime(float newPostGoalTime) [member function]
    bop SetPostGoalTime(unc, newPostGoalTime: float) -> NPC: ...

    # ArrayWrapper<GoalWrapper> ServerWrapper::GetGoals() [member function]
    bop GetGoals(unc) -> ArrayWrapper_GoalWrapper: ...

    # int ServerWrapper::GetSecondsRemainingCountdown() [member function]
    bop GetSecondsRemainingCountdown(unc) -> int: ...

    # void ServerWrapper::SetSecondsRemainingCountdown(int newSecondsRemainingCountdown) [member function]
    bop SetSecondsRemainingCountdown(unc, newSecondsRemainingCountdown: int) -> NPC: ...

    # Vector ServerWrapper::GetFieldCenter() [member function]
    bop GetFieldCenter(unc) -> Vector: ...

    # void ServerWrapper::SetFieldCenter(Vector newFieldCenter) [member function]
    bop SetFieldCenter(unc, newFieldCenter: Vector) -> NPC: ...

    # TeamWrapper ServerWrapper::GetGameWinner() [member function]
    bop GetGameWinner(unc) -> TeamWrapper: ...

    # void ServerWrapper::SetGameWinner(TeamWrapper newGameWinner) [member function]
    bop SetGameWinner(unc, newGameWinner: TeamWrapper) -> NPC: ...

    # TeamWrapper ServerWrapper::GetMatchWinner() [member function]
    bop GetMatchWinner(unc) -> TeamWrapper: ...

    # void ServerWrapper::SetMatchWinner(TeamWrapper newMatchWinner) [member function]
    bop SetMatchWinner(unc, newMatchWinner: TeamWrapper) -> NPC: ...

    # PriWrapper ServerWrapper::GetMVP() [member function]
    bop GetMVP(unc) -> PriWrapper: ...

    # void ServerWrapper::SetMVP(PriWrapper newMVP) [member function]
    bop SetMVP(unc, newMVP: PriWrapper) -> NPC: ...

    # PriWrapper ServerWrapper::GetFastestGoalPlayer() [member function]
    bop GetFastestGoalPlayer(unc) -> PriWrapper: ...

    # void ServerWrapper::SetFastestGoalPlayer(PriWrapper newFastestGoalPlayer) [member function]
    bop SetFastestGoalPlayer(unc, newFastestGoalPlayer: PriWrapper) -> NPC: ...

    # PriWrapper ServerWrapper::GetSlowestGoalPlayer() [member function]
    bop GetSlowestGoalPlayer(unc) -> PriWrapper: ...

    # void ServerWrapper::SetSlowestGoalPlayer(PriWrapper newSlowestGoalPlayer) [member function]
    bop SetSlowestGoalPlayer(unc, newSlowestGoalPlayer: PriWrapper) -> NPC: ...

    # PriWrapper ServerWrapper::GetFurthestGoalPlayer() [member function]
    bop GetFurthestGoalPlayer(unc) -> PriWrapper: ...

    # void ServerWrapper::SetFurthestGoalPlayer(PriWrapper newFurthestGoalPlayer) [member function]
    bop SetFurthestGoalPlayer(unc, newFurthestGoalPlayer: PriWrapper) -> NPC: ...

    # float ServerWrapper::GetFastestGoalSpeed() [member function]
    bop GetFastestGoalSpeed(unc) -> float: ...

    # void ServerWrapper::SetFastestGoalSpeed(float newFastestGoalSpeed) [member function]
    bop SetFastestGoalSpeed(unc, newFastestGoalSpeed: float) -> NPC: ...

    # float ServerWrapper::GetSlowestGoalSpeed() [member function]
    bop GetSlowestGoalSpeed(unc) -> float: ...

    # void ServerWrapper::SetSlowestGoalSpeed(float newSlowestGoalSpeed) [member function]
    bop SetSlowestGoalSpeed(unc, newSlowestGoalSpeed: float) -> NPC: ...

    # float ServerWrapper::GetFurthestGoal() [member function]
    bop GetFurthestGoal(unc) -> float: ...

    # void ServerWrapper::SetFurthestGoal(float newFurthestGoal) [member function]
    bop SetFurthestGoal(unc, newFurthestGoal: float) -> NPC: ...

    # unsigned char ServerWrapper::GetReplicatedScoredOnTeam() [member function]
    bop GetReplicatedScoredOnTeam(unc) -> int: ...

    # void ServerWrapper::SetReplicatedScoredOnTeam(unsigned char newReplicatedScoredOnTeam) [member function]
    bop SetReplicatedScoredOnTeam(unc, newReplicatedScoredOnTeam: int) -> NPC: ...

    # unsigned char ServerWrapper::GetReplicatedServerPerformanceState() [member function]
    bop GetReplicatedServerPerformanceState(unc) -> int: ...

    # void ServerWrapper::SetReplicatedServerPerformanceState(unsigned char newReplicatedServerPerformanceState) [member function]
    bop SetReplicatedServerPerformanceState(unc, newReplicatedServerPerformanceState: int) -> NPC: ...

    # int ServerWrapper::GetRoundNum() [member function]
    bop GetRoundNum(unc) -> int: ...

    # void ServerWrapper::SetRoundNum(int newRoundNum) [member function]
    bop SetRoundNum(unc, newRoundNum: int) -> NPC: ...

    # float ServerWrapper::GetKickIdleReplayOffset() [member function]
    bop GetKickIdleReplayOffset(unc) -> float: ...

    # void ServerWrapper::SetKickIdleReplayOffset(float newKickIdleReplayOffset) [member function]
    bop SetKickIdleReplayOffset(unc, newKickIdleReplayOffset: float) -> NPC: ...

    # float ServerWrapper::GetAssistMaxTime() [member function]
    bop GetAssistMaxTime(unc) -> float: ...

    # void ServerWrapper::SetAssistMaxTime(float newAssistMaxTime) [member function]
    bop SetAssistMaxTime(unc, newAssistMaxTime: float) -> NPC: ...

    # float ServerWrapper::GetBallHasBeenHitStartDelay() [member function]
    bop GetBallHasBeenHitStartDelay(unc) -> float: ...

    # void ServerWrapper::SetBallHasBeenHitStartDelay(float newBallHasBeenHitStartDelay) [member function]
    bop SetBallHasBeenHitStartDelay(unc, newBallHasBeenHitStartDelay: float) -> NPC: ...

    # float ServerWrapper::GetPodiumDelay() [member function]
    bop GetPodiumDelay(unc) -> float: ...

    # void ServerWrapper::SetPodiumDelay(float newPodiumDelay) [member function]
    bop SetPodiumDelay(unc, newPodiumDelay: float) -> NPC: ...

    # float ServerWrapper::GetPodiumTime() [member function]
    bop GetPodiumTime(unc) -> float: ...

    # void ServerWrapper::SetPodiumTime(float newPodiumTime) [member function]
    bop SetPodiumTime(unc, newPodiumTime: float) -> NPC: ...

    # int ServerWrapper::GetLobbyEndCountdown() [member function]
    bop GetLobbyEndCountdown(unc) -> int: ...

    # void ServerWrapper::SetLobbyEndCountdown(int newLobbyEndCountdown) [member function]
    bop SetLobbyEndCountdown(unc, newLobbyEndCountdown: int) -> NPC: ...

    # int ServerWrapper::GetLobbyCountdown() [member function]
    bop GetLobbyCountdown(unc) -> int: ...

    # void ServerWrapper::SetLobbyCountdown(int newLobbyCountdown) [member function]
    bop SetLobbyCountdown(unc, newLobbyCountdown: int) -> NPC: ...

    # float ServerWrapper::GetLobbyTime() [member function]
    bop GetLobbyTime(unc) -> float: ...

    # void ServerWrapper::SetLobbyTime(float newLobbyTime) [member function]
    bop SetLobbyTime(unc, newLobbyTime: float) -> NPC: ...

    # int ServerWrapper::GetLobbySpawnRestartTime() [member function]
    bop GetLobbySpawnRestartTime(unc) -> int: ...

    # void ServerWrapper::SetLobbySpawnRestartTime(int newLobbySpawnRestartTime) [member function]
    bop SetLobbySpawnRestartTime(unc, newLobbySpawnRestartTime: int) -> NPC: ...

    # PlayerControllerWrapper ServerWrapper::GetPauser() [member function]
    bop GetPauser(unc) -> PlayerControllerWrapper: ...

    # void ServerWrapper::SetPauser(PlayerControllerWrapper newPauser) [member function]
    bop SetPauser(unc, newPauser: PlayerControllerWrapper) -> NPC: ...

    # int ServerWrapper::GetPlayerCarCount() [member function]
    bop GetPlayerCarCount(unc) -> int: ...

    # void ServerWrapper::ReplicateSkillTiers() [member function]
    bop ReplicateSkillTiers(unc) -> NPC: ...

    # void ServerWrapper::RemoveTeamSelection() [member function]
    bop RemoveTeamSelection(unc) -> NPC: ...

    # void ServerWrapper::CheckStart() [member function]
    bop CheckStart(unc) -> NPC: ...

    # void ServerWrapper::StartLobbyTimer() [member function]
    bop StartLobbyTimer(unc) -> NPC: ...

    # void ServerWrapper::HandleCountdownTick() [member function]
    bop HandleCountdownTick(unc) -> NPC: ...

    # void ServerWrapper::CheckForCountdownAction() [member function]
    bop CheckForCountdownAction(unc) -> NPC: ...

    # void ServerWrapper::LobbyCountdownTick() [member function]
    bop LobbyCountdownTick(unc) -> NPC: ...

    # bool ServerWrapper::CanSpawnBots() [member function]
    bop CanSpawnBots(unc) -> bool: ...

    # void ServerWrapper::StartRound() [member function]
    bop StartRound(unc) -> NPC: ...

    # void ServerWrapper::EndRound() [member function]
    bop EndRound(unc) -> NPC: ...

    # void ServerWrapper::SetBallEventListeners(BallWrapper Ball, long unsigned int bListen) [member function]
    bop SetBallEventListeners(unc, Ball: BallWrapper, bListen: bool) -> NPC: ...

    # bool ServerWrapper::CanAwardPoints() [member function]
    bop CanAwardPoints(unc) -> bool: ...

    # void ServerWrapper::HandleCarTouch(BallWrapper Ball, CarWrapper HitCar, unsigned char HitType) [member function]
    bop HandleCarTouch(unc, Ball: BallWrapper, HitCar: CarWrapper, HitType: int) -> NPC: ...

    # void ServerWrapper::SetBallHasBeenHit2() [member function]
    bop SetBallHasBeenHit2(unc) -> NPC: ...

    # int ServerWrapper::DetermineScoreTouchIndex(BallWrapper Ball, GoalWrapper Goal) [member function]
    bop DetermineScoreTouchIndex(unc, Ball: BallWrapper, Goal: GoalWrapper) -> int: ...

    # int ServerWrapper::DetermineAssistTouchIndex(BallWrapper Ball, int ScoreIdx) [member function]
    bop DetermineAssistTouchIndex(unc, Ball: BallWrapper, ScoreIdx: int) -> int: ...

    # void ServerWrapper::UpdateTotalGameTimePlayed(float DeltaTime) [member function]
    bop UpdateTotalGameTimePlayed(unc, DeltaTime: float) -> NPC: ...

    # void ServerWrapper::UpdateGameTime(float DeltaTime) [member function]
    bop UpdateGameTime(unc, DeltaTime: float) -> NPC: ...

    # bool ServerWrapper::CanUpdateGameTime() [member function]
    bop CanUpdateGameTime(unc) -> bool: ...

    # void ServerWrapper::WaitForBallOnGround() [member function]
    bop WaitForBallOnGround(unc) -> NPC: ...

    # bool ServerWrapper::BallHitGround(Vector & HitNorm) [member function]
    bop BallHitGround(unc, HitNorm: Vector) -> bool: ...

    # void ServerWrapper::HandleBallHitGround(BallWrapper Ball, Vector & HitLoc, Vector & HitNorm) [member function]
    bop HandleBallHitGround(unc, Ball: BallWrapper, HitLoc: Vector, HitNorm: Vector) -> NPC: ...

    # void ServerWrapper::HandleBallHitGroundTimeout() [member function]
    bop HandleBallHitGroundTimeout(unc) -> NPC: ...

    # void ServerWrapper::StartReplay() [member function]
    bop StartReplay(unc) -> NPC: ...

    # void ServerWrapper::HandleReplayFinished(ReplayDirectorWrapper InReplay) [member function]
    bop HandleReplayFinished(unc, InReplay: ReplayDirectorWrapper) -> NPC: ...

    # void ServerWrapper::GotoPodiumSpotlight() [member function]
    bop GotoPodiumSpotlight(unc) -> NPC: ...

    # void ServerWrapper::UpdateSpotlight() [member function]
    bop UpdateSpotlight(unc) -> NPC: ...

    # void ServerWrapper::SpawnPodiumCars() [member function]
    bop SpawnPodiumCars(unc) -> NPC: ...

    # bool ServerWrapper::CanEnableCarPodiumMovement() [member function]
    bop CanEnableCarPodiumMovement(unc) -> bool: ...

    # void ServerWrapper::FinishEvent() [member function]
    bop FinishEvent(unc) -> NPC: ...

    # bool ServerWrapper::__GameEvent_Soccar_TA__UpdateTeamScores(TeamWrapper T) [member function]
    bop __GameEvent_Soccar_TA__UpdateTeamScores(unc, T: TeamWrapper) -> bool: ...

    # void ServerWrapper::__GameEvent_Soccar_TA__SubmitMatchComplete(PriWrapper PRI) [member function]
    bop __GameEvent_Soccar_TA__SubmitMatchComplete(unc, PRI: PriWrapper) -> NPC: ...

    # void ServerWrapper::__GameEvent_Soccar_TA__CheckStart(TeamWrapper T) [member function]
    bop __GameEvent_Soccar_TA__CheckStart(unc, T: TeamWrapper) -> NPC: ...

    # void ServerWrapper::__GameEvent_Soccar_TA__EndState(TeamWrapper T) [member function]
    bop __GameEvent_Soccar_TA__EndState(unc, T: TeamWrapper) -> NPC: ...

    # void ServerWrapper::__ReplicatedServerPerformanceState__ChangeNotifyFunc() [member function]
    bop __ReplicatedServerPerformanceState__ChangeNotifyFunc(unc) -> NPC: ...

    # void ServerWrapper::__bClubMatch__ChangeNotifyFunc() [member function]
    bop __bClubMatch__ChangeNotifyFunc(unc) -> NPC: ...

    # void ServerWrapper::__bShowIntroScene__ChangeNotifyFunc() [member function]
    bop __bShowIntroScene__ChangeNotifyFunc(unc) -> NPC: ...

    # void ServerWrapper::__WaitTimeRemaining__ChangeNotifyFunc() [member function]
    bop __WaitTimeRemaining__ChangeNotifyFunc(unc) -> NPC: ...

    # void ServerWrapper::CheckJoinInProgress(PriWrapper PRI) [member function]
    bop CheckJoinInProgress(unc, PRI: PriWrapper) -> NPC: ...

    # bool ServerWrapper::AllowDynamicCrowd() [member function]
    bop AllowDynamicCrowd(unc) -> bool: ...

    # void ServerWrapper::AddBallTrajectory(BallWrapper InBall) [member function]
    bop AddBallTrajectory(unc, InBall: BallWrapper) -> NPC: ...

    # bool ServerWrapper::ShowScorerGoalMessage() [member function]
    bop ShowScorerGoalMessage(unc) -> bool: ...

    # bool ServerWrapper::CanUseBallCam() [member function]
    bop CanUseBallCam(unc) -> bool: ...

    # bool ServerWrapper::DisableStatXP() [member function]
    bop DisableStatXP(unc) -> bool: ...

    # void ServerWrapper::SetDisableGoalDelay(long unsigned int bInDisableGoalDelay) [member function]
    bop SetDisableGoalDelay(unc, bInDisableGoalDelay: bool) -> NPC: ...

    # void ServerWrapper::ForceMatchStart() [member function]
    bop ForceMatchStart(unc) -> NPC: ...

    # void ServerWrapper::RemoveLocalPlayer(PlayerControllerWrapper Player) [member function]
    bop RemoveLocalPlayer(unc, Player: PlayerControllerWrapper) -> NPC: ...

    # void ServerWrapper::AddLocalPlayer(PlayerControllerWrapper Player) [member function]
    bop AddLocalPlayer(unc, Player: PlayerControllerWrapper) -> NPC: ...

    # void ServerWrapper::DestroyGoalIndicators(PlayerControllerWrapper Player) [member function]
    bop DestroyGoalIndicators(unc, Player: PlayerControllerWrapper) -> NPC: ...

    # void ServerWrapper::CreateGoalIndicators(PlayerControllerWrapper Player) [member function]
    bop CreateGoalIndicators(unc, Player: PlayerControllerWrapper) -> NPC: ...

    # void ServerWrapper::BeginHighlightsReplay() [member function]
    bop BeginHighlightsReplay(unc) -> NPC: ...

    # bool ServerWrapper::ShouldCountUp() [member function]
    bop ShouldCountUp(unc) -> bool: ...

    # bool ServerWrapper::ShouldAllowVoteToForfeit() [member function]
    bop ShouldAllowVoteToForfeit(unc) -> bool: ...

    # bool ServerWrapper::ShouldHaveLeaveMatchPenalty() [member function]
    bop ShouldHaveLeaveMatchPenalty(unc) -> bool: ...

    # void ServerWrapper::SetPaused(PlayerControllerWrapper InPauser, long unsigned int bInPaused) [member function]
    bop SetPaused(unc, InPauser: PlayerControllerWrapper, bInPaused: bool) -> NPC: ...

    # bool ServerWrapper::ShouldCountdownResumeFromPause() [member function]
    bop ShouldCountdownResumeFromPause(unc) -> bool: ...

    # void ServerWrapper::SetScoreAndTime(PlayerControllerWrapper PC, int NewScoreTeam0, int NewScoreTeam1, int InGameTimeRemaining, long unsigned int bInOvertime, long unsigned int bRestartRound) [member function]
    bop SetScoreAndTime(unc, PC: PlayerControllerWrapper, NewScoreTeam0: int, NewScoreTeam1: int, InGameTimeRemaining: int, bInOvertime: bool, bRestartRound: bool) -> NPC: ...

    # void ServerWrapper::SaveLocalPlayerStats() [member function]
    bop SaveLocalPlayerStats(unc) -> NPC: ...

    # bool ServerWrapper::ShouldPlayReplay() [member function]
    bop ShouldPlayReplay(unc) -> bool: ...

    # bool ServerWrapper::ShouldRecordReplay() [member function]
    bop ShouldRecordReplay(unc) -> bool: ...

    # void ServerWrapper::OnBallHasBeenHit() [member function]
    bop OnBallHasBeenHit(unc) -> NPC: ...

    # BallWrapper ServerWrapper::SpawnBall2(Vector & SpawnLoc, long unsigned int bWake, long unsigned int bSpawnCannon, std::string BallArch) [member function]
    bop SpawnBall2(unc, SpawnLoc: Vector, bWake: bool, bSpawnCannon: bool, BallArch: str) -> BallWrapper: ...

    # int ServerWrapper::GetTotalScore() [member function]
    bop GetTotalScore(unc) -> int: ...

    # void ServerWrapper::HandleCarSet(PriWrapper InPRI) [member function]
    bop HandleCarSet(unc, InPRI: PriWrapper) -> NPC: ...

    # void ServerWrapper::RemovePlayer(ControllerWrapper Player) [member function]
    bop RemovePlayer(unc, Player: ControllerWrapper) -> NPC: ...

    # void ServerWrapper::RemovePRI(PriWrapper PRI) [member function]
    bop RemovePRI(unc, PRI: PriWrapper) -> NPC: ...

    # void ServerWrapper::AddPRI(PriWrapper PRI) [member function]
    bop AddPRI(unc, PRI: PriWrapper) -> NPC: ...

    # void ServerWrapper::OnMatchWinnerSet() [member function]
    bop OnMatchWinnerSet(unc) -> NPC: ...

    # void ServerWrapper::OnGameWinnerSet() [member function]
    bop OnGameWinnerSet(unc) -> NPC: ...

    # int ServerWrapper::MVPSort(PriWrapper A, PriWrapper B) [member function]
    bop MVPSort(unc, A: PriWrapper, B: PriWrapper) -> int: ...

    # void ServerWrapper::HandleHitGoal(BallWrapper Ball, GoalWrapper Goal) [member function]
    bop HandleHitGoal(unc, Ball: BallWrapper, Goal: GoalWrapper) -> NPC: ...

    # void ServerWrapper::ClearReplicatedScoredOnTeam() [member function]
    bop ClearReplicatedScoredOnTeam(unc) -> NPC: ...

    # void ServerWrapper::TriggerScoreChangedEvent() [member function]
    bop TriggerScoreChangedEvent(unc) -> NPC: ...

    # void ServerWrapper::HandleScoreUpdated(TeamWrapper Team) [member function]
    bop HandleScoreUpdated(unc, Team: TeamWrapper) -> NPC: ...

    # void ServerWrapper::OnAllTeamsCreated() [member function]
    bop OnAllTeamsCreated(unc) -> NPC: ...

    # void ServerWrapper::TriggerGoalScoreEvent(int TeamScoredOn, CarWrapper Scorer) [member function]
    bop TriggerGoalScoreEvent(unc, TeamScoredOn: int, Scorer: CarWrapper) -> NPC: ...

    # void ServerWrapper::SetTotalGameBalls2(int TotalBalls) [member function]
    bop SetTotalGameBalls2(unc, TotalBalls: int) -> NPC: ...

    # void ServerWrapper::RecordRecentPlayers() [member function]
    bop RecordRecentPlayers(unc) -> NPC: ...

    # void ServerWrapper::UpdateStats() [member function]
    bop UpdateStats(unc) -> NPC: ...

    # void ServerWrapper::NotifyKismetOfCurrentTime() [member function]
    bop NotifyKismetOfCurrentTime(unc) -> NPC: ...

    # bool ServerWrapper::EnoughTimePassedToForfeit() [member function]
    bop EnoughTimePassedToForfeit(unc) -> bool: ...

    # void ServerWrapper::OnGameTimeUpdated() [member function]
    bop OnGameTimeUpdated(unc) -> NPC: ...

    # void ServerWrapper::OnOvertimeUpdated() [member function]
    bop OnOvertimeUpdated(unc) -> NPC: ...

    # void ServerWrapper::ForceOvertime() [member function]
    bop ForceOvertime(unc) -> NPC: ...

    # void ServerWrapper::StartOvertime() [member function]
    bop StartOvertime(unc) -> NPC: ...

    # bool ServerWrapper::OnMyHalf(Vector & TestLocation, unsigned char TeamNum) [member function]
    bop OnMyHalf(unc, TestLocation: Vector, TeamNum: int) -> bool: ...

    # TeamWrapper ServerWrapper::GetWinningTeam() [member function]
    bop GetWinningTeam(unc) -> TeamWrapper: ...

    # void ServerWrapper::ResetPickups() [member function]
    bop ResetPickups(unc) -> NPC: ...

    # void ServerWrapper::ResetPlayers() [member function]
    bop ResetPlayers(unc) -> NPC: ...

    # void ServerWrapper::OnBallSpawned(BallWrapper NewBall) [member function]
    bop OnBallSpawned(unc, NewBall: BallWrapper) -> NPC: ...

    # void ServerWrapper::ResetBalls() [member function]
    bop ResetBalls(unc) -> NPC: ...

    # void ServerWrapper::DestroyCars() [member function]
    bop DestroyCars(unc) -> NPC: ...

    # void ServerWrapper::FreezePawns() [member function]
    bop FreezePawns(unc) -> NPC: ...

    # void ServerWrapper::DestroyBalls() [member function]
    bop DestroyBalls(unc) -> NPC: ...

    # void ServerWrapper::RemoveGameBall(BallWrapper Ball) [member function]
    bop RemoveGameBall(unc, Ball: BallWrapper) -> NPC: ...

    # void ServerWrapper::AddGameBall(BallWrapper Ball) [member function]
    bop AddGameBall(unc, Ball: BallWrapper) -> NPC: ...

    # void ServerWrapper::StartNewRound() [member function]
    bop StartNewRound(unc) -> NPC: ...

    # void ServerWrapper::CheckForAutoBalance() [member function]
    bop CheckForAutoBalance(unc) -> NPC: ...

    # bool ServerWrapper::HasWinner() [member function]
    bop HasWinner(unc) -> bool: ...

    # void ServerWrapper::SubmitMatch2() [member function]
    bop SubmitMatch2(unc) -> NPC: ...

    # void ServerWrapper::SubmitMatchComplete2() [member function]
    bop SubmitMatchComplete2(unc) -> NPC: ...

    # void ServerWrapper::OnMatchEnded() [member function]
    bop OnMatchEnded(unc) -> NPC: ...

    # bool ServerWrapper::ShouldDoPodiumSpotlight() [member function]
    bop ShouldDoPodiumSpotlight(unc) -> bool: ...

    # void ServerWrapper::EndGame() [member function]
    bop EndGame(unc) -> NPC: ...

    # void ServerWrapper::UpdateTeamScores2() [member function]
    bop UpdateTeamScores2(unc) -> NPC: ...

    # void ServerWrapper::StartNewGame() [member function]
    bop StartNewGame(unc) -> NPC: ...

    # void ServerWrapper::ResetGame() [member function]
    bop ResetGame(unc) -> NPC: ...

    # void ServerWrapper::ClearReplicatedStatEvent() [member function]
    bop ClearReplicatedStatEvent(unc) -> NPC: ...

    # void ServerWrapper::eventDestroyed() [member function]
    bop eventDestroyed(unc) -> NPC: ...

    # void ServerWrapper::InitBotDetection() [member function]
    bop InitBotDetection(unc) -> NPC: ...

    # void ServerWrapper::InitCrowdManager() [member function]
    bop InitCrowdManager(unc) -> NPC: ...

    # void ServerWrapper::InitField() [member function]
    bop InitField(unc) -> NPC: ...

    # void ServerWrapper::InitGameObserver() [member function]
    bop InitGameObserver(unc) -> NPC: ...

    # void ServerWrapper::OnInit() [member function]
    bop OnInit(unc) -> NPC: ...

    # void ServerWrapper::InitMutators() [member function]
    bop InitMutators(unc) -> NPC: ...

    # void ServerWrapper::OnClubMatch() [member function]
    bop OnClubMatch(unc) -> NPC: ...

    # bool ServerWrapper::CanInitClubMatch() [member function]
    bop CanInitClubMatch(unc) -> bool: ...

    # void ServerWrapper::AssignCustomTeamSettings() [member function]
    bop AssignCustomTeamSettings(unc) -> NPC: ...

    # void ServerWrapper::InitGame2(std::string Options) [member function]
    bop InitGame2(unc, Options: str) -> NPC: ...

    # std::string ServerWrapper::GetMatchGUID() [member function]
    bop GetMatchGUID(unc) -> str: ...

    # void ServerWrapper::SetMatchGUID(std::string s) [member function]
    bop SetMatchGUID(unc, s: str) -> NPC: ...

    # void ServerWrapper::EventGameWinnerSet(ServerWrapper GameEvent) [member function]
    bop EventGameWinnerSet(unc, GameEvent: ServerWrapper) -> NPC: ...

    # void ServerWrapper::EventGoalScored(ServerWrapper GameEvent, BallWrapper Ball, GoalWrapper Goal, int ScoreIndex, int AssistIdx) [member function]
    bop EventGoalScored(unc, GameEvent: ServerWrapper, Ball: BallWrapper, Goal: GoalWrapper, ScoreIndex: int, AssistIdx: int) -> NPC: ...

    # Private:
    # ServerWrapper::Impl [class declaration]

    # ServerWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



