lock in typing glaze Callable, List, Tuple, Dict, Any
lock in enum glaze Enum

skibidi PlayerControllerWrapper():
    # Public:
    # PlayerControllerWrapper::PlayerControllerWrapper(uintptr_t mem) [constructor]
    bop __init__(unc, mem: int) -> NPC: ...

    # PlayerControllerWrapper::PlayerControllerWrapper(PlayerControllerWrapper const & other) [constructor]

    # PlayerControllerWrapper & PlayerControllerWrapper::operator=(PlayerControllerWrapper rhs) [member operator]

    # PlayerControllerWrapper::~PlayerControllerWrapper() [destructor]
    bop __del__(unc) -> NPC: ...

    # CarWrapper PlayerControllerWrapper::GetCar() [member function]
    bop GetCar(unc) -> CarWrapper: ...

    # void PlayerControllerWrapper::SetCar(CarWrapper newCar) [member function]
    bop SetCar(unc, newCar: CarWrapper) -> NPC: ...

    # PriWrapper PlayerControllerWrapper::GetPRI() [member function]
    bop GetPRI(unc) -> PriWrapper: ...

    # void PlayerControllerWrapper::SetPRI(PriWrapper newPRI) [member function]
    bop SetPRI(unc, newPRI: PriWrapper) -> NPC: ...

    # ControllerInput PlayerControllerWrapper::GetVehicleInput() [member function]
    bop GetVehicleInput(unc) -> ControllerInput: ...

    # void PlayerControllerWrapper::SetVehicleInput(ControllerInput newVehicleInput) [member function]
    bop SetVehicleInput(unc, newVehicleInput: ControllerInput) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbReceivedServerShutdownMessage() [member function]
    bop GetbReceivedServerShutdownMessage(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbReceivedServerShutdownMessage(long unsigned int newbReceivedServerShutdownMessage) [member function]
    bop SetbReceivedServerShutdownMessage(unc, newbReceivedServerShutdownMessage: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbPendingIdleKick() [member function]
    bop GetbPendingIdleKick(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbPendingIdleKick(long unsigned int newbPendingIdleKick) [member function]
    bop SetbPendingIdleKick(unc, newbPendingIdleKick: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbUseDebugInputs() [member function]
    bop GetbUseDebugInputs(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbUseDebugInputs(long unsigned int newbUseDebugInputs) [member function]
    bop SetbUseDebugInputs(unc, newbUseDebugInputs: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbJumpPressed() [member function]
    bop GetbJumpPressed(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbJumpPressed(long unsigned int newbJumpPressed) [member function]
    bop SetbJumpPressed(unc, newbJumpPressed: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbBoostPressed() [member function]
    bop GetbBoostPressed(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbBoostPressed(long unsigned int newbBoostPressed) [member function]
    bop SetbBoostPressed(unc, newbBoostPressed: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbHandbrakePressed() [member function]
    bop GetbHandbrakePressed(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbHandbrakePressed(long unsigned int newbHandbrakePressed) [member function]
    bop SetbHandbrakePressed(unc, newbHandbrakePressed: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbHasPitchedBack() [member function]
    bop GetbHasPitchedBack(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbHasPitchedBack(long unsigned int newbHasPitchedBack) [member function]
    bop SetbHasPitchedBack(unc, newbHasPitchedBack: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbAllowAsymmetricalMute() [member function]
    bop GetbAllowAsymmetricalMute(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbAllowAsymmetricalMute(long unsigned int newbAllowAsymmetricalMute) [member function]
    bop SetbAllowAsymmetricalMute(unc, newbAllowAsymmetricalMute: bool) -> NPC: ...

    # long unsigned int PlayerControllerWrapper::GetbResetCamera() [member function]
    bop GetbResetCamera(unc) -> bool: ...

    # void PlayerControllerWrapper::SetbResetCamera(long unsigned int newbResetCamera) [member function]
    bop SetbResetCamera(unc, newbResetCamera: bool) -> NPC: ...

    # UnrealStringWrapper PlayerControllerWrapper::GetLoginURL() [member function]
    bop GetLoginURL(unc) -> UnrealStringWrapper: ...

    # unsigned char PlayerControllerWrapper::GetVoiceFilter() [member function]
    bop GetVoiceFilter(unc) -> int: ...

    # void PlayerControllerWrapper::SetVoiceFilter(unsigned char newVoiceFilter) [member function]
    bop SetVoiceFilter(unc, newVoiceFilter: int) -> NPC: ...

    # unsigned char PlayerControllerWrapper::GetChatFilter() [member function]
    bop GetChatFilter(unc) -> int: ...

    # void PlayerControllerWrapper::SetChatFilter(unsigned char newChatFilter) [member function]
    bop SetChatFilter(unc, newChatFilter: int) -> NPC: ...

    # PriWrapper PlayerControllerWrapper::GetFollowTarget() [member function]
    bop GetFollowTarget(unc) -> PriWrapper: ...

    # void PlayerControllerWrapper::SetFollowTarget(PriWrapper newFollowTarget) [member function]
    bop SetFollowTarget(unc, newFollowTarget: PriWrapper) -> NPC: ...

    # BaseCameraWrapper PlayerControllerWrapper::GetSpectatorCameraArchetype() [member function]
    bop GetSpectatorCameraArchetype(unc) -> BaseCameraWrapper: ...

    # void PlayerControllerWrapper::SetSpectatorCameraArchetype(BaseCameraWrapper newSpectatorCameraArchetype) [member function]
    bop SetSpectatorCameraArchetype(unc, newSpectatorCameraArchetype: BaseCameraWrapper) -> NPC: ...

    # BaseCameraWrapper PlayerControllerWrapper::GetEditorCameraArchetype() [member function]
    bop GetEditorCameraArchetype(unc) -> BaseCameraWrapper: ...

    # void PlayerControllerWrapper::SetEditorCameraArchetype(BaseCameraWrapper newEditorCameraArchetype) [member function]
    bop SetEditorCameraArchetype(unc, newEditorCameraArchetype: BaseCameraWrapper) -> NPC: ...

    # Vector PlayerControllerWrapper::GetMoveActorGrabOffset() [member function]
    bop GetMoveActorGrabOffset(unc) -> Vector: ...

    # void PlayerControllerWrapper::SetMoveActorGrabOffset(Vector newMoveActorGrabOffset) [member function]
    bop SetMoveActorGrabOffset(unc, newMoveActorGrabOffset: Vector) -> NPC: ...

    # float PlayerControllerWrapper::GetMoveActorGrabIncrement() [member function]
    bop GetMoveActorGrabIncrement(unc) -> float: ...

    # void PlayerControllerWrapper::SetMoveActorGrabIncrement(float newMoveActorGrabIncrement) [member function]
    bop SetMoveActorGrabIncrement(unc, newMoveActorGrabIncrement: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMinMoveActorGrabDistance() [member function]
    bop GetMinMoveActorGrabDistance(unc) -> float: ...

    # void PlayerControllerWrapper::SetMinMoveActorGrabDistance(float newMinMoveActorGrabDistance) [member function]
    bop SetMinMoveActorGrabDistance(unc, newMinMoveActorGrabDistance: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseIncrementSpeed() [member function]
    bop GetMouseIncrementSpeed(unc) -> float: ...

    # void PlayerControllerWrapper::SetMouseIncrementSpeed(float newMouseIncrementSpeed) [member function]
    bop SetMouseIncrementSpeed(unc, newMouseIncrementSpeed: float) -> NPC: ...

    # float PlayerControllerWrapper::GetBallVelocityIncrementAmount() [member function]
    bop GetBallVelocityIncrementAmount(unc) -> float: ...

    # void PlayerControllerWrapper::SetBallVelocityIncrementAmount(float newBallVelocityIncrementAmount) [member function]
    bop SetBallVelocityIncrementAmount(unc, newBallVelocityIncrementAmount: float) -> NPC: ...

    # int PlayerControllerWrapper::GetBallVelocityIncrementFireCount() [member function]
    bop GetBallVelocityIncrementFireCount(unc) -> int: ...

    # void PlayerControllerWrapper::SetBallVelocityIncrementFireCount(int newBallVelocityIncrementFireCount) [member function]
    bop SetBallVelocityIncrementFireCount(unc, newBallVelocityIncrementFireCount: int) -> NPC: ...

    # float PlayerControllerWrapper::GetBallVelocityIncrementFireCountMax() [member function]
    bop GetBallVelocityIncrementFireCountMax(unc) -> float: ...

    # void PlayerControllerWrapper::SetBallVelocityIncrementFireCountMax(float newBallVelocityIncrementFireCountMax) [member function]
    bop SetBallVelocityIncrementFireCountMax(unc, newBallVelocityIncrementFireCountMax: float) -> NPC: ...

    # float PlayerControllerWrapper::GetBallVelocityIncrementSpeedDefault() [member function]
    bop GetBallVelocityIncrementSpeedDefault(unc) -> float: ...

    # void PlayerControllerWrapper::SetBallVelocityIncrementSpeedDefault(float newBallVelocityIncrementSpeedDefault) [member function]
    bop SetBallVelocityIncrementSpeedDefault(unc, newBallVelocityIncrementSpeedDefault: float) -> NPC: ...

    # float PlayerControllerWrapper::GetBallVelocityIncrementSpeedMax() [member function]
    bop GetBallVelocityIncrementSpeedMax(unc) -> float: ...

    # void PlayerControllerWrapper::SetBallVelocityIncrementSpeedMax(float newBallVelocityIncrementSpeedMax) [member function]
    bop SetBallVelocityIncrementSpeedMax(unc, newBallVelocityIncrementSpeedMax: float) -> NPC: ...

    # float PlayerControllerWrapper::GetCrosshairTraceDistance() [member function]
    bop GetCrosshairTraceDistance(unc) -> float: ...

    # void PlayerControllerWrapper::SetCrosshairTraceDistance(float newCrosshairTraceDistance) [member function]
    bop SetCrosshairTraceDistance(unc, newCrosshairTraceDistance: float) -> NPC: ...

    # ActorWrapper PlayerControllerWrapper::GetTracedCrosshairActor() [member function]
    bop GetTracedCrosshairActor(unc) -> ActorWrapper: ...

    # void PlayerControllerWrapper::SetTracedCrosshairActor(ActorWrapper newTracedCrosshairActor) [member function]
    bop SetTracedCrosshairActor(unc, newTracedCrosshairActor: ActorWrapper) -> NPC: ...

    # Vector PlayerControllerWrapper::GetRotateActorCameraLocationOffset() [member function]
    bop GetRotateActorCameraLocationOffset(unc) -> Vector: ...

    # void PlayerControllerWrapper::SetRotateActorCameraLocationOffset(Vector newRotateActorCameraLocationOffset) [member function]
    bop SetRotateActorCameraLocationOffset(unc, newRotateActorCameraLocationOffset: Vector) -> NPC: ...

    # Vector PlayerControllerWrapper::GetRotateActorCameraRotationOffset() [member function]
    bop GetRotateActorCameraRotationOffset(unc) -> Vector: ...

    # void PlayerControllerWrapper::SetRotateActorCameraRotationOffset(Vector newRotateActorCameraRotationOffset) [member function]
    bop SetRotateActorCameraRotationOffset(unc, newRotateActorCameraRotationOffset: Vector) -> NPC: ...

    # int PlayerControllerWrapper::GetRotateActorCameraSide() [member function]
    bop GetRotateActorCameraSide(unc) -> int: ...

    # void PlayerControllerWrapper::SetRotateActorCameraSide(int newRotateActorCameraSide) [member function]
    bop SetRotateActorCameraSide(unc, newRotateActorCameraSide: int) -> NPC: ...

    # float PlayerControllerWrapper::GetDesiredCameraSide() [member function]
    bop GetDesiredCameraSide(unc) -> float: ...

    # void PlayerControllerWrapper::SetDesiredCameraSide(float newDesiredCameraSide) [member function]
    bop SetDesiredCameraSide(unc, newDesiredCameraSide: float) -> NPC: ...

    # float PlayerControllerWrapper::GetPawnTypeChangedTime() [member function]
    bop GetPawnTypeChangedTime(unc) -> float: ...

    # void PlayerControllerWrapper::SetPawnTypeChangedTime(float newPawnTypeChangedTime) [member function]
    bop SetPawnTypeChangedTime(unc, newPawnTypeChangedTime: float) -> NPC: ...

    # int PlayerControllerWrapper::GetSelectedSpawnArchetype() [member function]
    bop GetSelectedSpawnArchetype(unc) -> int: ...

    # void PlayerControllerWrapper::SetSelectedSpawnArchetype(int newSelectedSpawnArchetype) [member function]
    bop SetSelectedSpawnArchetype(unc, newSelectedSpawnArchetype: int) -> NPC: ...

    # ControllerInput PlayerControllerWrapper::GetDebugInputs() [member function]
    bop GetDebugInputs(unc) -> ControllerInput: ...

    # void PlayerControllerWrapper::SetDebugInputs(ControllerInput newDebugInputs) [member function]
    bop SetDebugInputs(unc, newDebugInputs: ControllerInput) -> NPC: ...

    # int PlayerControllerWrapper::GetMinClientInputRate() [member function]
    bop GetMinClientInputRate(unc) -> int: ...

    # void PlayerControllerWrapper::SetMinClientInputRate(int newMinClientInputRate) [member function]
    bop SetMinClientInputRate(unc, newMinClientInputRate: int) -> NPC: ...

    # int PlayerControllerWrapper::GetMedianClientInputRate() [member function]
    bop GetMedianClientInputRate(unc) -> int: ...

    # void PlayerControllerWrapper::SetMedianClientInputRate(int newMedianClientInputRate) [member function]
    bop SetMedianClientInputRate(unc, newMedianClientInputRate: int) -> NPC: ...

    # int PlayerControllerWrapper::GetMaxClientInputRate() [member function]
    bop GetMaxClientInputRate(unc) -> int: ...

    # void PlayerControllerWrapper::SetMaxClientInputRate(int newMaxClientInputRate) [member function]
    bop SetMaxClientInputRate(unc, newMaxClientInputRate: int) -> NPC: ...

    # int PlayerControllerWrapper::GetConfiguredClientInputRate() [member function]
    bop GetConfiguredClientInputRate(unc) -> int: ...

    # void PlayerControllerWrapper::SetConfiguredClientInputRate(int newConfiguredClientInputRate) [member function]
    bop SetConfiguredClientInputRate(unc, newConfiguredClientInputRate: int) -> NPC: ...

    # float PlayerControllerWrapper::GetTimeSinceLastMovePacket() [member function]
    bop GetTimeSinceLastMovePacket(unc) -> float: ...

    # void PlayerControllerWrapper::SetTimeSinceLastMovePacket(float newTimeSinceLastMovePacket) [member function]
    bop SetTimeSinceLastMovePacket(unc, newTimeSinceLastMovePacket: float) -> NPC: ...

    # float PlayerControllerWrapper::GetTimeLastReplicatedMovePacket() [member function]
    bop GetTimeLastReplicatedMovePacket(unc) -> float: ...

    # void PlayerControllerWrapper::SetTimeLastReplicatedMovePacket(float newTimeLastReplicatedMovePacket) [member function]
    bop SetTimeLastReplicatedMovePacket(unc, newTimeLastReplicatedMovePacket: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseXDeadZone() [member function]
    bop GetMouseXDeadZone(unc) -> float: ...

    # void PlayerControllerWrapper::SetMouseXDeadZone(float newMouseXDeadZone) [member function]
    bop SetMouseXDeadZone(unc, newMouseXDeadZone: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseYDeadZone() [member function]
    bop GetMouseYDeadZone(unc) -> float: ...

    # void PlayerControllerWrapper::SetMouseYDeadZone(float newMouseYDeadZone) [member function]
    bop SetMouseYDeadZone(unc, newMouseYDeadZone: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseXDeadZoneAir() [member function]
    bop GetMouseXDeadZoneAir(unc) -> float: ...

    # void PlayerControllerWrapper::SetMouseXDeadZoneAir(float newMouseXDeadZoneAir) [member function]
    bop SetMouseXDeadZoneAir(unc, newMouseXDeadZoneAir: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseYDeadZoneAir() [member function]
    bop GetMouseYDeadZoneAir(unc) -> float: ...

    # void PlayerControllerWrapper::SetMouseYDeadZoneAir(float newMouseYDeadZoneAir) [member function]
    bop SetMouseYDeadZoneAir(unc, newMouseYDeadZoneAir: float) -> NPC: ...

    # ControllerInput PlayerControllerWrapper::GetLastInputs() [member function]
    bop GetLastInputs(unc) -> ControllerInput: ...

    # void PlayerControllerWrapper::SetLastInputs(ControllerInput newLastInputs) [member function]
    bop SetLastInputs(unc, newLastInputs: ControllerInput) -> NPC: ...

    # PriWrapper PlayerControllerWrapper::GetPendingViewPRI() [member function]
    bop GetPendingViewPRI(unc) -> PriWrapper: ...

    # void PlayerControllerWrapper::SetPendingViewPRI(PriWrapper newPendingViewPRI) [member function]
    bop SetPendingViewPRI(unc, newPendingViewPRI: PriWrapper) -> NPC: ...

    # float PlayerControllerWrapper::GetLastInputPitchUp() [member function]
    bop GetLastInputPitchUp(unc) -> float: ...

    # void PlayerControllerWrapper::SetLastInputPitchUp(float newLastInputPitchUp) [member function]
    bop SetLastInputPitchUp(unc, newLastInputPitchUp: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLastInputPitchDown() [member function]
    bop GetLastInputPitchDown(unc) -> float: ...

    # void PlayerControllerWrapper::SetLastInputPitchDown(float newLastInputPitchDown) [member function]
    bop SetLastInputPitchDown(unc, newLastInputPitchDown: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLastInputYawLeft() [member function]
    bop GetLastInputYawLeft(unc) -> float: ...

    # void PlayerControllerWrapper::SetLastInputYawLeft(float newLastInputYawLeft) [member function]
    bop SetLastInputYawLeft(unc, newLastInputYawLeft: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLastInputYawRight() [member function]
    bop GetLastInputYawRight(unc) -> float: ...

    # void PlayerControllerWrapper::SetLastInputYawRight(float newLastInputYawRight) [member function]
    bop SetLastInputYawRight(unc, newLastInputYawRight: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLastInputPitch() [member function]
    bop GetLastInputPitch(unc) -> float: ...

    # void PlayerControllerWrapper::SetLastInputPitch(float newLastInputPitch) [member function]
    bop SetLastInputPitch(unc, newLastInputPitch: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLastInputYaw() [member function]
    bop GetLastInputYaw(unc) -> float: ...

    # void PlayerControllerWrapper::SetLastInputYaw(float newLastInputYaw) [member function]
    bop SetLastInputYaw(unc, newLastInputYaw: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseInputMax() [member function]
    bop GetMouseInputMax(unc) -> float: ...

    # void PlayerControllerWrapper::SetMouseInputMax(float newMouseInputMax) [member function]
    bop SetMouseInputMax(unc, newMouseInputMax: float) -> NPC: ...

    # EngineTAWrapper PlayerControllerWrapper::GetEngineShare() [member function]
    bop GetEngineShare(unc) -> EngineTAWrapper: ...

    # void PlayerControllerWrapper::SetEngineShare(EngineTAWrapper newEngineShare) [member function]
    bop SetEngineShare(unc, newEngineShare: EngineTAWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandleCarSet(PriWrapper InPRI) [member function]
    bop HandleCarSet(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::SpawnSelectedArchetype() [member function]
    bop SpawnSelectedArchetype(unc) -> NPC: ...

    # bool PlayerControllerWrapper::RemoveActor() [member function]
    bop RemoveActor(unc) -> bool: ...

    # void PlayerControllerWrapper::ToggleGrabActor() [member function]
    bop ToggleGrabActor(unc) -> NPC: ...

    # void PlayerControllerWrapper::ToggleRotateActor() [member function]
    bop ToggleRotateActor(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorReleaseActor() [member function]
    bop EditorReleaseActor(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorCycleActor() [member function]
    bop EditorCycleActor(unc) -> NPC: ...

    # void PlayerControllerWrapper::DuplicateShot() [member function]
    bop DuplicateShot(unc) -> NPC: ...

    # void PlayerControllerWrapper::StopEditing() [member function]
    bop StopEditing(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorIncreasePower() [member function]
    bop EditorIncreasePower(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorDecreasePower() [member function]
    bop EditorDecreasePower(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorIncreasePowerToggleInterim() [member function]
    bop EditorIncreasePowerToggleInterim(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorDecreasePowerToggleInterim() [member function]
    bop EditorDecreasePowerToggleInterim(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorIncreasePowerToggle2(long unsigned int bToggle) [member function]
    bop EditorIncreasePowerToggle2(unc, bToggle: bool) -> NPC: ...

    # void PlayerControllerWrapper::EditorDecreasePowerToggle2(long unsigned int bToggle) [member function]
    bop EditorDecreasePowerToggle2(unc, bToggle: bool) -> NPC: ...

    # void PlayerControllerWrapper::ModifyEditorPower(int Direction) [member function]
    bop ModifyEditorPower(unc, Direction: int) -> NPC: ...

    # void PlayerControllerWrapper::ToggleCameraPosition() [member function]
    bop ToggleCameraPosition(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorUndo() [member function]
    bop EditorUndo(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorRedo() [member function]
    bop EditorRedo(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorIncreaseRoundTime() [member function]
    bop EditorIncreaseRoundTime(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorDecreaseRoundTime() [member function]
    bop EditorDecreaseRoundTime(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorNextRound() [member function]
    bop EditorNextRound(unc) -> NPC: ...

    # void PlayerControllerWrapper::EditorPrevRound() [member function]
    bop EditorPrevRound(unc) -> NPC: ...

    # void PlayerControllerWrapper::UpdateCrosshair() [member function]
    bop UpdateCrosshair(unc) -> NPC: ...

    # void PlayerControllerWrapper::NetClientInputRate(int Rate) [member function]
    bop NetClientInputRate(unc, Rate: int) -> NPC: ...

    # void PlayerControllerWrapper::ServerCreateMatchBroadcast(ServerWrapper GameEvent) [member function]
    bop ServerCreateMatchBroadcast(unc, GameEvent: ServerWrapper) -> NPC: ...

    # void PlayerControllerWrapper::ClampMoveActorGrabOffset() [member function]
    bop ClampMoveActorGrabOffset(unc) -> NPC: ...

    # void PlayerControllerWrapper::RevertToDefaultCameraHUDInput() [member function]
    bop RevertToDefaultCameraHUDInput(unc) -> NPC: ...

    # void PlayerControllerWrapper::SwitchToEditPawn() [member function]
    bop SwitchToEditPawn(unc) -> NPC: ...

    # void PlayerControllerWrapper::ServerResetPlayer(long unsigned int bFullReset) [member function]
    bop ServerResetPlayer(unc, bFullReset: bool) -> NPC: ...

    # void PlayerControllerWrapper::ResetPlayerRun() [member function]
    bop ResetPlayerRun(unc) -> NPC: ...

    # void PlayerControllerWrapper::ResetPlayerCheckpoint() [member function]
    bop ResetPlayerCheckpoint(unc) -> NPC: ...

    # void PlayerControllerWrapper::ToggleEditorRound() [member function]
    bop ToggleEditorRound(unc) -> NPC: ...

    # void PlayerControllerWrapper::ToggleBetweenCarAndEditPawn() [member function]
    bop ToggleBetweenCarAndEditPawn(unc) -> NPC: ...

    # void PlayerControllerWrapper::Interact() [member function]
    bop Interact(unc) -> NPC: ...

    # void PlayerControllerWrapper::StopMovement(long unsigned int bOnlyIfNoAccel) [member function]
    bop StopMovement(unc, bOnlyIfNoAccel: bool) -> NPC: ...

    # Vector PlayerControllerWrapper::GetRotateActorCameraOffset(float DeltaTime, long unsigned int bSnap) [member function]
    bop GetRotateActorCameraOffset(unc, DeltaTime: float, bSnap: bool) -> Vector: ...

    # void PlayerControllerWrapper::RestoreEditorPawnOrientation() [member function]
    bop RestoreEditorPawnOrientation(unc) -> NPC: ...

    # void PlayerControllerWrapper::BackupEditorPawnOrientation() [member function]
    bop BackupEditorPawnOrientation(unc) -> NPC: ...

    # void PlayerControllerWrapper::UpdateRotatedActorOrientation(float DeltaTime) [member function]
    bop UpdateRotatedActorOrientation(unc, DeltaTime: float) -> NPC: ...

    # void PlayerControllerWrapper::OnOpenPauseMenu() [member function]
    bop OnOpenPauseMenu(unc) -> NPC: ...

    # void PlayerControllerWrapper::ResetMouseCenter() [member function]
    bop ResetMouseCenter(unc) -> NPC: ...

    # float PlayerControllerWrapper::CalculateMouseAxis(float Center, float CurrentLocation, float Deadzone, float MaxDist) [member function]
    bop CalculateMouseAxis(unc, Center: float, CurrentLocation: float, Deadzone: float, MaxDist: float) -> float: ...

    # void PlayerControllerWrapper::ShowControllerApplet() [member function]
    bop ShowControllerApplet(unc) -> NPC: ...

    # void PlayerControllerWrapper::ShowAccountPicker() [member function]
    bop ShowAccountPicker(unc) -> NPC: ...

    # void PlayerControllerWrapper::QueSaveReplay() [member function]
    bop QueSaveReplay(unc) -> NPC: ...

    # void PlayerControllerWrapper::SetFollowTarget2(PriWrapper InTarget) [member function]
    bop SetFollowTarget2(unc, InTarget: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::FollowPlayer(PriWrapper InPlayer) [member function]
    bop FollowPlayer(unc, InPlayer: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::OnPendingIdleKickChanged() [member function]
    bop OnPendingIdleKickChanged(unc) -> NPC: ...

    # void PlayerControllerWrapper::SetPendingIdleKick(long unsigned int bPending) [member function]
    bop SetPendingIdleKick(unc, bPending: bool) -> NPC: ...

    # void PlayerControllerWrapper::ClientSplitscreenJoinResponse(SteamID & PlayerID, long unsigned int bAllow, std::string Error) [member function]
    bop ClientSplitscreenJoinResponse(unc, PlayerID: SteamID, bAllow: bool, Error: str) -> NPC: ...

    # void PlayerControllerWrapper::ServerRequestSplitscreenJoin(SteamID & PlayerID, std::string PlayerName) [member function]
    bop ServerRequestSplitscreenJoin(unc, PlayerID: SteamID, PlayerName: str) -> NPC: ...

    # bool PlayerControllerWrapper::eventPreClientTravel(std::string PendingURL, unsigned char TravelType, long unsigned int bIsSeamlessTravel) [member function]
    bop eventPreClientTravel(unc, PendingURL: str, TravelType: int, bIsSeamlessTravel: bool) -> bool: ...

    # void PlayerControllerWrapper::KickTrialPlayer() [member function]
    bop KickTrialPlayer(unc) -> NPC: ...

    # void PlayerControllerWrapper::NotifyGoalScored(int ScoredOnTeam) [member function]
    bop NotifyGoalScored(unc, ScoredOnTeam: int) -> NPC: ...

    # void PlayerControllerWrapper::eventDestroyed() [member function]
    bop eventDestroyed(unc) -> NPC: ...

    # bool PlayerControllerWrapper::ShouldBeMuted(PlayerControllerWrapper Other) [member function]
    bop ShouldBeMuted(unc, Other: PlayerControllerWrapper) -> bool: ...

    # bool PlayerControllerWrapper::IsCommunicationFiltered(unsigned char Filter, PlayerControllerWrapper Other, long unsigned int bPreset) [member function]
    bop IsCommunicationFiltered(unc, Filter: int, Other: PlayerControllerWrapper, bPreset: bool) -> bool: ...

    # void PlayerControllerWrapper::RefreshMutedPlayers(long unsigned int bForceRefresh) [member function]
    bop RefreshMutedPlayers(unc, bForceRefresh: bool) -> NPC: ...

    # void PlayerControllerWrapper::eventServerUnmutePlayer(SteamID & PlayerNetId) [member function]
    bop eventServerUnmutePlayer(unc, PlayerNetId: SteamID) -> NPC: ...

    # void PlayerControllerWrapper::eventServerMutePlayer(SteamID & PlayerNetId) [member function]
    bop eventServerMutePlayer(unc, PlayerNetId: SteamID) -> NPC: ...

    # void PlayerControllerWrapper::GameplayUnmutePlayer(SteamID & PlayerNetId) [member function]
    bop GameplayUnmutePlayer(unc, PlayerNetId: SteamID) -> NPC: ...

    # void PlayerControllerWrapper::GameplayMutePlayer(SteamID & PlayerNetId) [member function]
    bop GameplayMutePlayer(unc, PlayerNetId: SteamID) -> NPC: ...

    # void PlayerControllerWrapper::ServerSetChatFilter(unsigned char InVoiceFilter) [member function]
    bop ServerSetChatFilter(unc, InVoiceFilter: int) -> NPC: ...

    # void PlayerControllerWrapper::ServerSetVoiceFilter(unsigned char InVoiceFilter) [member function]
    bop ServerSetVoiceFilter(unc, InVoiceFilter: int) -> NPC: ...

    # bool PlayerControllerWrapper::IsExplictlyMuted(SteamID & PlayerNetId) [member function]
    bop IsExplictlyMuted(unc, PlayerNetId: SteamID) -> bool: ...

    # void PlayerControllerWrapper::DebugAI() [member function]
    bop DebugAI(unc) -> NPC: ...

    # void PlayerControllerWrapper::SendPendingRPCs() [member function]
    bop SendPendingRPCs(unc) -> NPC: ...

    # bool PlayerControllerWrapper::CanSendMessage(long unsigned int bQuickChatMessage) [member function]
    bop CanSendMessage(unc, bQuickChatMessage: bool) -> bool: ...

    # void PlayerControllerWrapper::RemoveChatBan() [member function]
    bop RemoveChatBan(unc) -> NPC: ...

    # void PlayerControllerWrapper::ApplyChatBan(long long unsigned int Expiration) [member function]
    bop ApplyChatBan(unc, Expiration: int) -> NPC: ...

    # void PlayerControllerWrapper::ClientNotifyChatBanned(long long unsigned int ChatBanExpiration) [member function]
    bop ClientNotifyChatBanned(unc, ChatBanExpiration: int) -> NPC: ...

    # void PlayerControllerWrapper::ClientNotifyChatDisabled(float Time) [member function]
    bop ClientNotifyChatDisabled(unc, Time: float) -> NPC: ...

    # void PlayerControllerWrapper::ChatMessage_TA(PlayerReplicationInfoWrapper InPRI, std::string Message, unsigned char ChatChannel, long unsigned int bPreset) [member function]
    bop ChatMessage_TA(unc, InPRI: PlayerReplicationInfoWrapper, Message: str, ChatChannel: int, bPreset: bool) -> NPC: ...

    # void PlayerControllerWrapper::ServerSayInternal_TA(std::string Message, unsigned char ChatChannel, long unsigned int bPreset) [member function]
    bop ServerSayInternal_TA(unc, Message: str, ChatChannel: int, bPreset: bool) -> NPC: ...

    # void PlayerControllerWrapper::ServerSay_TA(std::string Message, unsigned char ChatChannel, long unsigned int bPreset) [member function]
    bop ServerSay_TA(unc, Message: str, ChatChannel: int, bPreset: bool) -> NPC: ...

    # void PlayerControllerWrapper::Say_TA2(std::string Message, unsigned char ChatChannel, SteamID & Recipient, long unsigned int bPreset) [member function]
    bop Say_TA2(unc, Message: str, ChatChannel: int, Recipient: SteamID, bPreset: bool) -> NPC: ...

    # bool PlayerControllerWrapper::CanChatWith(PlayerControllerWrapper Other, long unsigned int bPreset) [member function]
    bop CanChatWith(unc, Other: PlayerControllerWrapper, bPreset: bool) -> bool: ...

    # bool PlayerControllerWrapper::AllowTextMessage(std::string msg) [member function]
    bop AllowTextMessage(unc, msg: str) -> bool: ...

    # void PlayerControllerWrapper::PushToTalkEnd() [member function]
    bop PushToTalkEnd(unc) -> NPC: ...

    # void PlayerControllerWrapper::PushToTalk2() [member function]
    bop PushToTalk2(unc) -> NPC: ...

    # void PlayerControllerWrapper::HandleJoinGameMigrationCompleted(long unsigned int bSuccess, std::string FailReason) [member function]
    bop HandleJoinGameMigrationCompleted(unc, bSuccess: bool, FailReason: str) -> NPC: ...

    # void PlayerControllerWrapper::eventClientUnmutePlayer(SteamID & PlayerNetId) [member function]
    bop eventClientUnmutePlayer(unc, PlayerNetId: SteamID) -> NPC: ...

    # void PlayerControllerWrapper::eventClientMutePlayer(SteamID & PlayerNetId, long unsigned int bAddToMuteList) [member function]
    bop eventClientMutePlayer(unc, PlayerNetId: SteamID, bAddToMuteList: bool) -> NPC: ...

    # void PlayerControllerWrapper::ClientSetOnlineStatus() [member function]
    bop ClientSetOnlineStatus(unc) -> NPC: ...

    # void PlayerControllerWrapper::HandleGameDataSelected(int PlaylistId, int MutatorIndex) [member function]
    bop HandleGameDataSelected(unc, PlaylistId: int, MutatorIndex: int) -> NPC: ...

    # GameEventWrapper PlayerControllerWrapper::GetGameEvent() [member function]
    bop GetGameEvent(unc) -> GameEventWrapper: ...

    # void PlayerControllerWrapper::ClientArbitratedMatchEnded() [member function]
    bop ClientArbitratedMatchEnded(unc) -> NPC: ...

    # void PlayerControllerWrapper::BannedKick() [member function]
    bop BannedKick(unc) -> NPC: ...

    # void PlayerControllerWrapper::NoReservationKick() [member function]
    bop NoReservationKick(unc) -> NPC: ...

    # void PlayerControllerWrapper::IdleKick2() [member function]
    bop IdleKick2(unc) -> NPC: ...

    # void PlayerControllerWrapper::ServerReportServer() [member function]
    bop ServerReportServer(unc) -> NPC: ...

    # void PlayerControllerWrapper::ClientUseItem(Vector & UseLocation, Rotator & UseRotation) [member function]
    bop ClientUseItem(unc, UseLocation: Vector, UseRotation: Rotator) -> NPC: ...

    # void PlayerControllerWrapper::ServerTeleportCar(Vector & SpawnLocation, Rotator & NewRotation) [member function]
    bop ServerTeleportCar(unc, SpawnLocation: Vector, NewRotation: Rotator) -> NPC: ...

    # void PlayerControllerWrapper::eventTeleportCar(Vector & SpawnLocation, Rotator & NewRotation) [member function]
    bop eventTeleportCar(unc, SpawnLocation: Vector, NewRotation: Rotator) -> NPC: ...

    # void PlayerControllerWrapper::ServerUsePickup(RBActorWrapper Target) [member function]
    bop ServerUsePickup(unc, Target: RBActorWrapper) -> NPC: ...

    # void PlayerControllerWrapper::UsePickup2() [member function]
    bop UsePickup2(unc) -> NPC: ...

    # void PlayerControllerWrapper::ToggleHandbrake(long unsigned int bHandbrake) [member function]
    bop ToggleHandbrake(unc, bHandbrake: bool) -> NPC: ...

    # void PlayerControllerWrapper::ToggleBoost(long unsigned int bBoost) [member function]
    bop ToggleBoost(unc, bBoost: bool) -> NPC: ...

    # void PlayerControllerWrapper::ToggleJump(long unsigned int bJump) [member function]
    bop ToggleJump(unc, bJump: bool) -> NPC: ...

    # void PlayerControllerWrapper::TargetSelectLeft() [member function]
    bop TargetSelectLeft(unc) -> NPC: ...

    # void PlayerControllerWrapper::TargetSelectRight() [member function]
    bop TargetSelectRight(unc) -> NPC: ...

    # void PlayerControllerWrapper::ReleaseRearCamera() [member function]
    bop ReleaseRearCamera(unc) -> NPC: ...

    # void PlayerControllerWrapper::PressRearCamera() [member function]
    bop PressRearCamera(unc) -> NPC: ...

    # void PlayerControllerWrapper::ReleaseSecondaryCamera() [member function]
    bop ReleaseSecondaryCamera(unc) -> NPC: ...

    # void PlayerControllerWrapper::PressSecondaryCamera() [member function]
    bop PressSecondaryCamera(unc) -> NPC: ...

    # void PlayerControllerWrapper::ReadyUp() [member function]
    bop ReadyUp(unc) -> NPC: ...

    # void PlayerControllerWrapper::Spectate() [member function]
    bop Spectate(unc) -> NPC: ...

    # void PlayerControllerWrapper::ChangeTeam(int TeamNum) [member function]
    bop ChangeTeam(unc, TeamNum: int) -> NPC: ...

    # void PlayerControllerWrapper::SwitchTeam() [member function]
    bop SwitchTeam(unc) -> NPC: ...

    # void PlayerControllerWrapper::SetDefaultCameraMode() [member function]
    bop SetDefaultCameraMode(unc) -> NPC: ...

    # void PlayerControllerWrapper::ResetCameraMode() [member function]
    bop ResetCameraMode(unc) -> NPC: ...

    # void PlayerControllerWrapper::ZeroMoveInput() [member function]
    bop ZeroMoveInput(unc) -> NPC: ...

    # void PlayerControllerWrapper::PlayerMove(float DeltaTime) [member function]
    bop PlayerMove(unc, DeltaTime: float) -> NPC: ...

    # void PlayerControllerWrapper::IgnoreMoveInput(long unsigned int bNewMoveInput) [member function]
    bop IgnoreMoveInput(unc, bNewMoveInput: bool) -> NPC: ...

    # void PlayerControllerWrapper::eventSendClientAdjustment() [member function]
    bop eventSendClientAdjustment(unc) -> NPC: ...

    # PlayerControllerWrapper PlayerControllerWrapper::GetPrimaryPlayerController() [member function]
    bop GetPrimaryPlayerController(unc) -> PlayerControllerWrapper: ...

    # void PlayerControllerWrapper::HandleAddBoostComponent(BoostWrapper Boost) [member function]
    bop HandleAddBoostComponent(unc, Boost: BoostWrapper) -> NPC: ...

    # void PlayerControllerWrapper::ReplicateLoadout() [member function]
    bop ReplicateLoadout(unc) -> NPC: ...

    # void PlayerControllerWrapper::ReplicateCameraRotation() [member function]
    bop ReplicateCameraRotation(unc) -> NPC: ...

    # void PlayerControllerWrapper::SetUsingFreecam(long unsigned int bFreecam) [member function]
    bop SetUsingFreecam(unc, bFreecam: bool) -> NPC: ...

    # void PlayerControllerWrapper::SetUsingBehindView(long unsigned int bBehindView) [member function]
    bop SetUsingBehindView(unc, bBehindView: bool) -> NPC: ...

    # void PlayerControllerWrapper::SetUsingSecondaryCamera(long unsigned int bSecondaryCamera) [member function]
    bop SetUsingSecondaryCamera(unc, bSecondaryCamera: bool) -> NPC: ...

    # void PlayerControllerWrapper::ReplicateCameraSettings() [member function]
    bop ReplicateCameraSettings(unc) -> NPC: ...

    # void PlayerControllerWrapper::HandleControllerLayoutChanged(PriWrapper InPRI) [member function]
    bop HandleControllerLayoutChanged(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandlePawnTypeChanged(PriWrapper InPRI) [member function]
    bop HandlePawnTypeChanged(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandlePendingViewCarSet(PriWrapper InPRI) [member function]
    bop HandlePendingViewCarSet(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandleReplaceBot(PriWrapper InPRI) [member function]
    bop HandleReplaceBot(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandleTeamChanged(PriXWrapper InPRI) [member function]
    bop HandleTeamChanged(unc, InPRI: PriXWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandleMatchEnded(ServerWrapper GameEvent) [member function]
    bop HandleMatchEnded(unc, GameEvent: ServerWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandleStartNewRound(ServerWrapper GameEvent) [member function]
    bop HandleStartNewRound(unc, GameEvent: ServerWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandleGameEventChanged(PriWrapper InPRI) [member function]
    bop HandleGameEventChanged(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::HandlePRICameraChanged(PriWrapper InPRI) [member function]
    bop HandlePRICameraChanged(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::SetupLightBar() [member function]
    bop SetupLightBar(unc) -> NPC: ...

    # void PlayerControllerWrapper::HandlePersistentCameraSet(PriWrapper InPRI) [member function]
    bop HandlePersistentCameraSet(unc, InPRI: PriWrapper) -> NPC: ...

    # void PlayerControllerWrapper::OnReceivedPlayerAndPRI() [member function]
    bop OnReceivedPlayerAndPRI(unc) -> NPC: ...

    # void PlayerControllerWrapper::UpdateVoiceFilter() [member function]
    bop UpdateVoiceFilter(unc) -> NPC: ...

    # void PlayerControllerWrapper::ReplicateLevelSessionID() [member function]
    bop ReplicateLevelSessionID(unc) -> NPC: ...

    # void PlayerControllerWrapper::ServerInitInputBuffer(unsigned char Type) [member function]
    bop ServerInitInputBuffer(unc, Type: int) -> NPC: ...

    # void PlayerControllerWrapper::eventReceivedPlayer() [member function]
    bop eventReceivedPlayer(unc) -> NPC: ...

    # void PlayerControllerWrapper::eventPostBeginPlay() [member function]
    bop eventPostBeginPlay(unc) -> NPC: ...

    # void PlayerControllerWrapper::EventChatMessage(PlayerControllerWrapper PC, std::string Message, long unsigned int bPreset) [member function]
    bop EventChatMessage(unc, PC: PlayerControllerWrapper, Message: str, bPreset: bool) -> NPC: ...

    # void PlayerControllerWrapper::EventResetPlayer(PlayerControllerWrapper PC, long unsigned int bFullReset) [member function]
    bop EventResetPlayer(unc, PC: PlayerControllerWrapper, bFullReset: bool) -> NPC: ...

    # void PlayerControllerWrapper::EventSelectBallCamTarget(PlayerControllerWrapper PC, int Direction) [member function]
    bop EventSelectBallCamTarget(unc, PC: PlayerControllerWrapper, Direction: int) -> NPC: ...

    # void PlayerControllerWrapper::EventTrainingEditorActorModified() [member function]
    bop EventTrainingEditorActorModified(unc) -> NPC: ...

    # void PlayerControllerWrapper::EventMuteChanged(PlayerControllerWrapper PC, SteamID & PlayerID, long unsigned int bMuted) [member function]
    bop EventMuteChanged(unc, PC: PlayerControllerWrapper, PlayerID: SteamID, bMuted: bool) -> NPC: ...

    # void PlayerControllerWrapper::EventPendingIdleKickChanged(PlayerControllerWrapper PC) [member function]
    bop EventPendingIdleKickChanged(unc, PC: PlayerControllerWrapper) -> NPC: ...

    # void PlayerControllerWrapper::EventLaunchControllerApplet() [member function]
    bop EventLaunchControllerApplet(unc) -> NPC: ...

    # void PlayerControllerWrapper::EventLaunchAccountPicker(int ControllerId) [member function]
    bop EventLaunchAccountPicker(unc, ControllerId: int) -> NPC: ...

    # bool PlayerControllerWrapper::GetbUsingGamepad() [member function]
    bop GetbUsingGamepad(unc) -> bool: ...

    # void PlayerControllerWrapper::SetMouseSensitivity(float NewSensitivity) [member function]
    bop SetMouseSensitivity(unc, NewSensitivity: float) -> NPC: ...

    # float PlayerControllerWrapper::GetMouseSensitivity() [member function]
    bop GetMouseSensitivity(unc) -> float: ...

    # void PlayerControllerWrapper::SetAForward(float aForward) [member function]
    bop SetAForward(unc, aForward: float) -> NPC: ...

    # float PlayerControllerWrapper::GetAForward() [member function]
    bop GetAForward(unc) -> float: ...

    # void PlayerControllerWrapper::SetATurn(float aTurn) [member function]
    bop SetATurn(unc, aTurn: float) -> NPC: ...

    # float PlayerControllerWrapper::GetATurn() [member function]
    bop GetATurn(unc) -> float: ...

    # void PlayerControllerWrapper::SetAStrafe(float aStrafe) [member function]
    bop SetAStrafe(unc, aStrafe: float) -> NPC: ...

    # float PlayerControllerWrapper::GetAStrafe() [member function]
    bop GetAStrafe(unc) -> float: ...

    # void PlayerControllerWrapper::SetAUp(float aUp) [member function]
    bop SetAUp(unc, aUp: float) -> NPC: ...

    # float PlayerControllerWrapper::GetAUp() [member function]
    bop GetAUp(unc) -> float: ...

    # void PlayerControllerWrapper::SetALookUp(float aLookUp) [member function]
    bop SetALookUp(unc, aLookUp: float) -> NPC: ...

    # float PlayerControllerWrapper::GetALookUp() [member function]
    bop GetALookUp(unc) -> float: ...

    # void PlayerControllerWrapper::SetLookRightScale(float NewScale) [member function]
    bop SetLookRightScale(unc, NewScale: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLookRightScale() [member function]
    bop GetLookRightScale(unc) -> float: ...

    # void PlayerControllerWrapper::SetLookUpScale(float NewScale) [member function]
    bop SetLookUpScale(unc, NewScale: float) -> NPC: ...

    # float PlayerControllerWrapper::GetLookUpScale() [member function]
    bop GetLookUpScale(unc) -> float: ...

    # void PlayerControllerWrapper::SetGamepadLookScale(float NewScale) [member function]
    bop SetGamepadLookScale(unc, NewScale: float) -> NPC: ...

    # float PlayerControllerWrapper::GetGamepadLookScale() [member function]
    bop GetGamepadLookScale(unc) -> float: ...

    # void PlayerControllerWrapper::SetALookRoll(float NewLookRoll) [member function]
    bop SetALookRoll(unc, NewLookRoll: float) -> NPC: ...

    # float PlayerControllerWrapper::GetALookRoll() [member function]
    bop GetALookRoll(unc) -> float: ...

    # void PlayerControllerWrapper::SetbRoll(bool NewRoll) [member function]
    bop SetbRoll(unc, NewRoll: bool) -> NPC: ...

    # bool PlayerControllerWrapper::GetbRoll() [member function]
    bop GetbRoll(unc) -> bool: ...

    # void PlayerControllerWrapper::SetSpectatorCameraAccel(float SpectatorCameraAccel) [member function]
    bop SetSpectatorCameraAccel(unc, SpectatorCameraAccel: float) -> NPC: ...

    # float PlayerControllerWrapper::GetSpectatorCameraAccel() [member function]
    bop GetSpectatorCameraAccel(unc) -> float: ...

    # void PlayerControllerWrapper::SetSpectatorCameraSpeed(float SpectatorCameraSpeed) [member function]
    bop SetSpectatorCameraSpeed(unc, SpectatorCameraSpeed: float) -> NPC: ...

    # float PlayerControllerWrapper::GetSpectatorCameraSpeed() [member function]
    bop GetSpectatorCameraSpeed(unc) -> float: ...

    # Private:
    # PlayerControllerWrapper::Impl [class declaration]

    # PlayerControllerWrapper::pimpl [variable]
    @property
    bop pimpl(unc) -> Any: ...



