void bind_CarWrapper(pybind11::module& m)
{

	pybind11::class_<CarWrapper, std::shared_ptr<CarWrapper>, VehicleWrapper> cl_CarWrapper(m, "CarWrapper");
	cl_CarWrapper.def(pybind11::init<uintptr_t>(), pybind11::arg("mem"));
	cl_CarWrapper.def(pybind11::init<CarWrapper const &>(), pybind11::arg("other"));
	// cl_CarWrapper.def(pybind11::del<>());
	cl_CarWrapper.def("IsBoostCheap", [](CarWrapper& cls_) { return cls_.IsBoostCheap(); });
	cl_CarWrapper.def("SetBoostCheap", [](CarWrapper& cls_, bool b) { return cls_.SetBoostCheap(b); }, pybind11::arg("b"));
	cl_CarWrapper.def("SetCarRotation", [](CarWrapper& cls_, Rotator rotation) { return cls_.SetCarRotation(rotation); }, pybind11::arg("rotation"));
	cl_CarWrapper.def("ForceBoost", [](CarWrapper& cls_, bool force) { return cls_.ForceBoost(force); }, pybind11::arg("force"));
	cl_CarWrapper.def("GetOwnerName", [](CarWrapper& cls_) { return cls_.GetOwnerName(); });
	cl_CarWrapper.def("Unfreeze", [](CarWrapper& cls_) { return cls_.Unfreeze(); });
	cl_CarWrapper.def("GetInput", [](CarWrapper& cls_) { return cls_.GetInput(); });
	cl_CarWrapper.def("SetInput", [](CarWrapper& cls_, ControllerInput input) { return cls_.SetInput(input); }, pybind11::arg("input"));
	cl_CarWrapper.def("Destroy", [](CarWrapper& cls_) { return cls_.Destroy(); });
	cl_CarWrapper.def("Demolish", [](CarWrapper& cls_) { return cls_.Demolish(); });
	cl_CarWrapper.def("HasFlip", [](CarWrapper& cls_) { return cls_.HasFlip(); });
	cl_CarWrapper.def("GetLoadoutBody", [](CarWrapper& cls_) { return cls_.GetLoadoutBody(); });
	cl_CarWrapper.def("GetDefaultCarComponents", [](CarWrapper& cls_) { return cls_.GetDefaultCarComponents(); });
	cl_CarWrapper.def("GetFlipComponent", [](CarWrapper& cls_) { return cls_.GetFlipComponent(); });
	cl_CarWrapper.def("GetDemolishTarget", [](CarWrapper& cls_) { return cls_.GetDemolishTarget(); });
	cl_CarWrapper.def("SetDemolishTarget", [](CarWrapper& cls_, unsigned char newDemolishTarget) { return cls_.SetDemolishTarget(newDemolishTarget); }, pybind11::arg("newDemolishTarget"));
	cl_CarWrapper.def("GetDemolishSpeed", [](CarWrapper& cls_) { return cls_.GetDemolishSpeed(); });
	cl_CarWrapper.def("SetDemolishSpeed", [](CarWrapper& cls_, unsigned char newDemolishSpeed) { return cls_.SetDemolishSpeed(newDemolishSpeed); }, pybind11::arg("newDemolishSpeed"));
	cl_CarWrapper.def("GetbLoadoutSet", [](CarWrapper& cls_) { return cls_.GetbLoadoutSet(); });
	cl_CarWrapper.def("SetbLoadoutSet", [](CarWrapper& cls_, long unsigned int newbLoadoutSet) { return cls_.SetbLoadoutSet(newbLoadoutSet); }, pybind11::arg("newbLoadoutSet"));
	cl_CarWrapper.def("GetbDemolishOnOpposingGround", [](CarWrapper& cls_) { return cls_.GetbDemolishOnOpposingGround(); });
	cl_CarWrapper.def("SetbDemolishOnOpposingGround", [](CarWrapper& cls_, long unsigned int newbDemolishOnOpposingGround) { return cls_.SetbDemolishOnOpposingGround(newbDemolishOnOpposingGround); }, pybind11::arg("newbDemolishOnOpposingGround"));
	cl_CarWrapper.def("GetbWasOnOpposingGround", [](CarWrapper& cls_) { return cls_.GetbWasOnOpposingGround(); });
	cl_CarWrapper.def("SetbWasOnOpposingGround", [](CarWrapper& cls_, long unsigned int newbWasOnOpposingGround) { return cls_.SetbWasOnOpposingGround(newbWasOnOpposingGround); }, pybind11::arg("newbWasOnOpposingGround"));
	cl_CarWrapper.def("GetbDemolishOnGoalZone", [](CarWrapper& cls_) { return cls_.GetbDemolishOnGoalZone(); });
	cl_CarWrapper.def("SetbDemolishOnGoalZone", [](CarWrapper& cls_, long unsigned int newbDemolishOnGoalZone) { return cls_.SetbDemolishOnGoalZone(newbDemolishOnGoalZone); }, pybind11::arg("newbDemolishOnGoalZone"));
	cl_CarWrapper.def("GetbWasInGoalZone", [](CarWrapper& cls_) { return cls_.GetbWasInGoalZone(); });
	cl_CarWrapper.def("SetbWasInGoalZone", [](CarWrapper& cls_, long unsigned int newbWasInGoalZone) { return cls_.SetbWasInGoalZone(newbWasInGoalZone); }, pybind11::arg("newbWasInGoalZone"));
	cl_CarWrapper.def("GetbOverrideHandbrakeOn", [](CarWrapper& cls_) { return cls_.GetbOverrideHandbrakeOn(); });
	cl_CarWrapper.def("SetbOverrideHandbrakeOn", [](CarWrapper& cls_, long unsigned int newbOverrideHandbrakeOn) { return cls_.SetbOverrideHandbrakeOn(newbOverrideHandbrakeOn); }, pybind11::arg("newbOverrideHandbrakeOn"));
	cl_CarWrapper.def("GetbCollidesWithVehicles", [](CarWrapper& cls_) { return cls_.GetbCollidesWithVehicles(); });
	cl_CarWrapper.def("SetbCollidesWithVehicles", [](CarWrapper& cls_, long unsigned int newbCollidesWithVehicles) { return cls_.SetbCollidesWithVehicles(newbCollidesWithVehicles); }, pybind11::arg("newbCollidesWithVehicles"));
	cl_CarWrapper.def("GetbOverrideBoostOn", [](CarWrapper& cls_) { return cls_.GetbOverrideBoostOn(); });
	cl_CarWrapper.def("SetbOverrideBoostOn", [](CarWrapper& cls_, long unsigned int newbOverrideBoostOn) { return cls_.SetbOverrideBoostOn(newbOverrideBoostOn); }, pybind11::arg("newbOverrideBoostOn"));
	cl_CarWrapper.def("GetExitFXArchetype", [](CarWrapper& cls_) { return cls_.GetExitFXArchetype(); });
	cl_CarWrapper.def("SetExitFXArchetype", [](CarWrapper& cls_, FXActorWrapper newExitFXArchetype) { return cls_.SetExitFXArchetype(newExitFXArchetype); }, pybind11::arg("newExitFXArchetype"));
	cl_CarWrapper.def("GetMaxTimeForDodge", [](CarWrapper& cls_) { return cls_.GetMaxTimeForDodge(); });
	cl_CarWrapper.def("SetMaxTimeForDodge", [](CarWrapper& cls_, float newMaxTimeForDodge) { return cls_.SetMaxTimeForDodge(newMaxTimeForDodge); }, pybind11::arg("newMaxTimeForDodge"));
	cl_CarWrapper.def("GetLastWheelsHitBallTime", [](CarWrapper& cls_) { return cls_.GetLastWheelsHitBallTime(); });
	cl_CarWrapper.def("SetLastWheelsHitBallTime", [](CarWrapper& cls_, float newLastWheelsHitBallTime) { return cls_.SetLastWheelsHitBallTime(newLastWheelsHitBallTime); }, pybind11::arg("newLastWheelsHitBallTime"));
	cl_CarWrapper.def("GetReplicatedCarScale", [](CarWrapper& cls_) { return cls_.GetReplicatedCarScale(); });
	cl_CarWrapper.def("SetReplicatedCarScale", [](CarWrapper& cls_, float newReplicatedCarScale) { return cls_.SetReplicatedCarScale(newReplicatedCarScale); }, pybind11::arg("newReplicatedCarScale"));
	cl_CarWrapper.def("GetBodyFXActor", [](CarWrapper& cls_) { return cls_.GetBodyFXActor(); });
	cl_CarWrapper.def("SetBodyFXActor", [](CarWrapper& cls_, FXActorWrapper newBodyFXActor) { return cls_.SetBodyFXActor(newBodyFXActor); }, pybind11::arg("newBodyFXActor"));
	cl_CarWrapper.def("GetAttackerPRI", [](CarWrapper& cls_) { return cls_.GetAttackerPRI(); });
	cl_CarWrapper.def("SetAttackerPRI", [](CarWrapper& cls_, PriWrapper newAttackerPRI) { return cls_.SetAttackerPRI(newAttackerPRI); }, pybind11::arg("newAttackerPRI"));
	cl_CarWrapper.def("GetMouseAccel", [](CarWrapper& cls_) { return cls_.GetMouseAccel(); });
	cl_CarWrapper.def("SetMouseAccel", [](CarWrapper& cls_, Vector newMouseAccel) { return cls_.SetMouseAccel(newMouseAccel); }, pybind11::arg("newMouseAccel"));
	cl_CarWrapper.def("GetMouseAirAccel", [](CarWrapper& cls_) { return cls_.GetMouseAirAccel(); });
	cl_CarWrapper.def("SetMouseAirAccel", [](CarWrapper& cls_, Vector newMouseAirAccel) { return cls_.SetMouseAirAccel(newMouseAirAccel); }, pybind11::arg("newMouseAirAccel"));
	cl_CarWrapper.def("GetAttachedPickup", [](CarWrapper& cls_) { return cls_.GetAttachedPickup(); });
	cl_CarWrapper.def("SetAttachedPickup", [](CarWrapper& cls_, RumblePickupComponentWrapper newAttachedPickup) { return cls_.SetAttachedPickup(newAttachedPickup); }, pybind11::arg("newAttachedPickup"));
	cl_CarWrapper.def("GetReplayFocusOffset", [](CarWrapper& cls_) { return cls_.GetReplayFocusOffset(); });
	cl_CarWrapper.def("SetReplayFocusOffset", [](CarWrapper& cls_, Vector newReplayFocusOffset) { return cls_.SetReplayFocusOffset(newReplayFocusOffset); }, pybind11::arg("newReplayFocusOffset"));
	cl_CarWrapper.def("GetAddedBallForceMultiplier", [](CarWrapper& cls_) { return cls_.GetAddedBallForceMultiplier(); });
	cl_CarWrapper.def("SetAddedBallForceMultiplier", [](CarWrapper& cls_, float newAddedBallForceMultiplier) { return cls_.SetAddedBallForceMultiplier(newAddedBallForceMultiplier); }, pybind11::arg("newAddedBallForceMultiplier"));
	cl_CarWrapper.def("GetAddedCarForceMultiplier", [](CarWrapper& cls_) { return cls_.GetAddedCarForceMultiplier(); });
	cl_CarWrapper.def("SetAddedCarForceMultiplier", [](CarWrapper& cls_, float newAddedCarForceMultiplier) { return cls_.SetAddedCarForceMultiplier(newAddedCarForceMultiplier); }, pybind11::arg("newAddedCarForceMultiplier"));
	cl_CarWrapper.def("GetGameEvent", [](CarWrapper& cls_) { return cls_.GetGameEvent(); });
	cl_CarWrapper.def("SetGameEvent", [](CarWrapper& cls_, GameEventWrapper newGameEvent) { return cls_.SetGameEvent(newGameEvent); }, pybind11::arg("newGameEvent"));
	cl_CarWrapper.def("GetMaxDriveBackwardsSpeed", [](CarWrapper& cls_) { return cls_.GetMaxDriveBackwardsSpeed(); });
	cl_CarWrapper.def("GetMaxDriveForwardSpeed", [](CarWrapper& cls_) { return cls_.GetMaxDriveForwardSpeed(); });
	cl_CarWrapper.def("GetReplayFocusLocation", [](CarWrapper& cls_) { return cls_.GetReplayFocusLocation(); });
	cl_CarWrapper.def("OnPickupChanged", [](CarWrapper& cls_, RumblePickupComponentWrapper InPickup) { return cls_.OnPickupChanged(InPickup); }, pybind11::arg("InPickup"));
	cl_CarWrapper.def("SetAttachedPickup2", [](CarWrapper& cls_, RumblePickupComponentWrapper InPickup) { return cls_.SetAttachedPickup2(InPickup); }, pybind11::arg("InPickup"));
	cl_CarWrapper.def("EnablePodiumMode", [](CarWrapper& cls_) { return cls_.EnablePodiumMode(); });
	cl_CarWrapper.def("CopyPushFactorCurve", [](CarWrapper& cls_) { return cls_.CopyPushFactorCurve(); });
	cl_CarWrapper.def("ClearAttacker", [](CarWrapper& cls_) { return cls_.ClearAttacker(); });
	cl_CarWrapper.def("NotifyNewAttacker", [](CarWrapper& cls_, PriWrapper Attacker) { return cls_.NotifyNewAttacker(Attacker); }, pybind11::arg("Attacker"));
	cl_CarWrapper.def("UpdateBallIndicator", [](CarWrapper& cls_) { return cls_.UpdateBallIndicator(); });
	cl_CarWrapper.def("eventOnSuperSonicChanged", [](CarWrapper& cls_) { return cls_.eventOnSuperSonicChanged(); });
	cl_CarWrapper.def("eventOnGroundChanged", [](CarWrapper& cls_) { return cls_.eventOnGroundChanged(); });
	cl_CarWrapper.def("FellOutOfWorld", [](CarWrapper& cls_) { return cls_.FellOutOfWorld(); });
	cl_CarWrapper.def("DemolishDestroyTimer", [](CarWrapper& cls_) { return cls_.DemolishDestroyTimer(); });
	cl_CarWrapper.def("Demolish2", [](CarWrapper& cls_, RBActorWrapper Demolisher) { return cls_.Demolish2(Demolisher); }, pybind11::arg("Demolisher"));
	cl_CarWrapper.def("Teleport", [](CarWrapper& cls_, Vector & SpawnLocation, Rotator & SpawnRotation, long unsigned int bStopVelocity, long unsigned int bUpdateRotation, float ExtraForce) { return cls_.Teleport(SpawnLocation, SpawnRotation, bStopVelocity, bUpdateRotation, ExtraForce); }, pybind11::arg("SpawnLocation"), pybind11::arg("SpawnRotation"), pybind11::arg("bStopVelocity"), pybind11::arg("bUpdateRotation"), pybind11::arg("ExtraForce"));
	cl_CarWrapper.def("OnJumpReleased", [](CarWrapper& cls_) { return cls_.OnJumpReleased(); });
	cl_CarWrapper.def("OnJumpPressed", [](CarWrapper& cls_) { return cls_.OnJumpPressed(); });
	cl_CarWrapper.def("eventSetVehicleInput", [](CarWrapper& cls_, ControllerInput & NewInput) { return cls_.eventSetVehicleInput(NewInput); }, pybind11::arg("NewInput"));
	cl_CarWrapper.def("CanDemolish", [](CarWrapper& cls_, CarWrapper HitCar) { return cls_.CanDemolish(HitCar); }, pybind11::arg("HitCar"));
	cl_CarWrapper.def("ShouldDemolish", [](CarWrapper& cls_, CarWrapper HitCar, Vector & HitLocation, Vector & HitNormal, unsigned char * Result) { return cls_.ShouldDemolish(HitCar, HitLocation, HitNormal, Result); }, pybind11::arg("HitCar"), pybind11::arg("HitLocation"), pybind11::arg("HitNormal"), pybind11::arg("Result"));
	cl_CarWrapper.def("ApplyCarImpactForces", [](CarWrapper& cls_, CarWrapper OtherCar, Vector & HitLocation, Vector & HitNormal) { return cls_.ApplyCarImpactForces(OtherCar, HitLocation, HitNormal); }, pybind11::arg("OtherCar"), pybind11::arg("HitLocation"), pybind11::arg("HitNormal"));
	cl_CarWrapper.def("IsBumperHit", [](CarWrapper& cls_, CarWrapper OtherCar) { return cls_.IsBumperHit(OtherCar); }, pybind11::arg("OtherCar"));
	cl_CarWrapper.def("ApplyBallImpactForces", [](CarWrapper& cls_, BallWrapper Ball, Vector & HitLocation) { return cls_.ApplyBallImpactForces(Ball, HitLocation); }, pybind11::arg("Ball"), pybind11::arg("HitLocation"));
	cl_CarWrapper.def("IsDodging", [](CarWrapper& cls_) { return cls_.IsDodging(); });
	cl_CarWrapper.def("OnHitBall", [](CarWrapper& cls_, BallWrapper Ball, Vector & HitLocation, Vector & HitNormal) { return cls_.OnHitBall(Ball, HitLocation, HitNormal); }, pybind11::arg("Ball"), pybind11::arg("HitLocation"), pybind11::arg("HitNormal"));
	cl_CarWrapper.def("AnyWheelTouchingGround", [](CarWrapper& cls_) { return cls_.AnyWheelTouchingGround(); });
	cl_CarWrapper.def("GiveCarComponent", [](CarWrapper& cls_, CarComponentWrapper ComponentArchetype, PriWrapper Activator) { return cls_.GiveCarComponent(ComponentArchetype, Activator); }, pybind11::arg("ComponentArchetype"), pybind11::arg("Activator"));
	cl_CarWrapper.def("AddDefaultCarComponents", [](CarWrapper& cls_) { return cls_.AddDefaultCarComponents(); });
	cl_CarWrapper.def("DetachPrimitiveComponent", [](CarWrapper& cls_, PrimitiveComponentWrapper Component) { return cls_.DetachPrimitiveComponent(Component); }, pybind11::arg("Component"));
	cl_CarWrapper.def("HandleWheelBallHit", [](CarWrapper& cls_, WheelWrapper Wheel) { return cls_.HandleWheelBallHit(Wheel); }, pybind11::arg("Wheel"));
	cl_CarWrapper.def("RespawnInPlace", [](CarWrapper& cls_) { return cls_.RespawnInPlace(); });
	cl_CarWrapper.def("SetCarScale", [](CarWrapper& cls_, float NewScale) { return cls_.SetCarScale(NewScale); }, pybind11::arg("NewScale"));
	cl_CarWrapper.def("OnClubColorsChanged", [](CarWrapper& cls_) { return cls_.OnClubColorsChanged(); });
	cl_CarWrapper.def("HandleTeamChanged", [](CarWrapper& cls_, PriXWrapper MyPRI) { return cls_.HandleTeamChanged(MyPRI); }, pybind11::arg("MyPRI"));
	cl_CarWrapper.def("UpdateTeamLoadout", [](CarWrapper& cls_) { return cls_.UpdateTeamLoadout(); });
	cl_CarWrapper.def("InitTeamPaint", [](CarWrapper& cls_) { return cls_.InitTeamPaint(); });
	cl_CarWrapper.def("GetLoadoutTeamIndex", [](CarWrapper& cls_) { return cls_.GetLoadoutTeamIndex(); });
	cl_CarWrapper.def("GetPreviewTeamIndex", [](CarWrapper& cls_) { return cls_.GetPreviewTeamIndex(); });
	cl_CarWrapper.def("HasTeam", [](CarWrapper& cls_) { return cls_.HasTeam(); });
	cl_CarWrapper.def("HandleLoadoutSelected", [](CarWrapper& cls_, PriWrapper MyPRI) { return cls_.HandleLoadoutSelected(MyPRI); }, pybind11::arg("MyPRI"));
	cl_CarWrapper.def("HandleGameEventChanged", [](CarWrapper& cls_, PriWrapper MyPRI) { return cls_.HandleGameEventChanged(MyPRI); }, pybind11::arg("MyPRI"));
	cl_CarWrapper.def("OnPRIChanged", [](CarWrapper& cls_) { return cls_.OnPRIChanged(); });
	cl_CarWrapper.def("OnControllerChanged", [](CarWrapper& cls_) { return cls_.OnControllerChanged(); });
}
