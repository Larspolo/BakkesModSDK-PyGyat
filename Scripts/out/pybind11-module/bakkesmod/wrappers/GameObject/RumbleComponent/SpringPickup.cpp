void bind_SpringPickup(pybind11::module& m)
{

	pybind11::class_<SpringPickup, std::shared_ptr<SpringPickup>, TargetedPickup> cl_SpringPickup(m, "SpringPickup");
	cl_SpringPickup.def(pybind11::init<uintptr_t>(), pybind11::arg("mem"));
	cl_SpringPickup.def(pybind11::init<SpringPickup const &>(), pybind11::arg("other"));
	// cl_SpringPickup.def(pybind11::del<>());
	cl_SpringPickup.def("GetForce", [](SpringPickup& cls_) { return cls_.GetForce(); });
	cl_SpringPickup.def("SetForce", [](SpringPickup& cls_, float newForce) { return cls_.SetForce(newForce); }, pybind11::arg("newForce"));
	cl_SpringPickup.def("GetVerticalForce", [](SpringPickup& cls_) { return cls_.GetVerticalForce(); });
	cl_SpringPickup.def("SetVerticalForce", [](SpringPickup& cls_, float newVerticalForce) { return cls_.SetVerticalForce(newVerticalForce); }, pybind11::arg("newVerticalForce"));
	cl_SpringPickup.def("GetTorque", [](SpringPickup& cls_) { return cls_.GetTorque(); });
	cl_SpringPickup.def("SetTorque", [](SpringPickup& cls_, Vector newTorque) { return cls_.SetTorque(newTorque); }, pybind11::arg("newTorque"));
	cl_SpringPickup.def("GetbApplyRelativeForce", [](SpringPickup& cls_) { return cls_.GetbApplyRelativeForce(); });
	cl_SpringPickup.def("SetbApplyRelativeForce", [](SpringPickup& cls_, long unsigned int newbApplyRelativeForce) { return cls_.SetbApplyRelativeForce(newbApplyRelativeForce); }, pybind11::arg("newbApplyRelativeForce"));
	cl_SpringPickup.def("GetbApplyConstantForce", [](SpringPickup& cls_) { return cls_.GetbApplyConstantForce(); });
	cl_SpringPickup.def("SetbApplyConstantForce", [](SpringPickup& cls_, long unsigned int newbApplyConstantForce) { return cls_.SetbApplyConstantForce(newbApplyConstantForce); }, pybind11::arg("newbApplyConstantForce"));
	cl_SpringPickup.def("GetbBreakConstantForceWithHit", [](SpringPickup& cls_) { return cls_.GetbBreakConstantForceWithHit(); });
	cl_SpringPickup.def("SetbBreakConstantForceWithHit", [](SpringPickup& cls_, long unsigned int newbBreakConstantForceWithHit) { return cls_.SetbBreakConstantForceWithHit(newbBreakConstantForceWithHit); }, pybind11::arg("newbBreakConstantForceWithHit"));
	cl_SpringPickup.def("GetbApplyRelativeConstantForce", [](SpringPickup& cls_) { return cls_.GetbApplyRelativeConstantForce(); });
	cl_SpringPickup.def("SetbApplyRelativeConstantForce", [](SpringPickup& cls_, long unsigned int newbApplyRelativeConstantForce) { return cls_.SetbApplyRelativeConstantForce(newbApplyRelativeConstantForce); }, pybind11::arg("newbApplyRelativeConstantForce"));
	cl_SpringPickup.def("GetbInstant", [](SpringPickup& cls_) { return cls_.GetbInstant(); });
	cl_SpringPickup.def("SetbInstant", [](SpringPickup& cls_, long unsigned int newbInstant) { return cls_.SetbInstant(newbInstant); }, pybind11::arg("newbInstant"));
	cl_SpringPickup.def("GetbFollowAfterHit", [](SpringPickup& cls_) { return cls_.GetbFollowAfterHit(); });
	cl_SpringPickup.def("SetbFollowAfterHit", [](SpringPickup& cls_, long unsigned int newbFollowAfterHit) { return cls_.SetbFollowAfterHit(newbFollowAfterHit); }, pybind11::arg("newbFollowAfterHit"));
	cl_SpringPickup.def("GetbSpringed", [](SpringPickup& cls_) { return cls_.GetbSpringed(); });
	cl_SpringPickup.def("SetbSpringed", [](SpringPickup& cls_, long unsigned int newbSpringed) { return cls_.SetbSpringed(newbSpringed); }, pybind11::arg("newbSpringed"));
	cl_SpringPickup.def("GetRelativeForceNormalDirection", [](SpringPickup& cls_) { return cls_.GetRelativeForceNormalDirection(); });
	cl_SpringPickup.def("SetRelativeForceNormalDirection", [](SpringPickup& cls_, float newRelativeForceNormalDirection) { return cls_.SetRelativeForceNormalDirection(newRelativeForceNormalDirection); }, pybind11::arg("newRelativeForceNormalDirection"));
	cl_SpringPickup.def("GetMaxSpringLength", [](SpringPickup& cls_) { return cls_.GetMaxSpringLength(); });
	cl_SpringPickup.def("SetMaxSpringLength", [](SpringPickup& cls_, float newMaxSpringLength) { return cls_.SetMaxSpringLength(newMaxSpringLength); }, pybind11::arg("newMaxSpringLength"));
	cl_SpringPickup.def("GetConstantForce", [](SpringPickup& cls_) { return cls_.GetConstantForce(); });
	cl_SpringPickup.def("SetConstantForce", [](SpringPickup& cls_, float newConstantForce) { return cls_.SetConstantForce(newConstantForce); }, pybind11::arg("newConstantForce"));
	cl_SpringPickup.def("GetFromOffset", [](SpringPickup& cls_) { return cls_.GetFromOffset(); });
	cl_SpringPickup.def("SetFromOffset", [](SpringPickup& cls_, Vector newFromOffset) { return cls_.SetFromOffset(newFromOffset); }, pybind11::arg("newFromOffset"));
	cl_SpringPickup.def("GetSpringMeshScale", [](SpringPickup& cls_) { return cls_.GetSpringMeshScale(); });
	cl_SpringPickup.def("SetSpringMeshScale", [](SpringPickup& cls_, Vector newSpringMeshScale) { return cls_.SetSpringMeshScale(newSpringMeshScale); }, pybind11::arg("newSpringMeshScale"));
	cl_SpringPickup.def("GetSpringMeshInitialSize", [](SpringPickup& cls_) { return cls_.GetSpringMeshInitialSize(); });
	cl_SpringPickup.def("SetSpringMeshInitialSize", [](SpringPickup& cls_, float newSpringMeshInitialSize) { return cls_.SetSpringMeshInitialSize(newSpringMeshInitialSize); }, pybind11::arg("newSpringMeshInitialSize"));
	cl_SpringPickup.def("GetSpringRotationOffset", [](SpringPickup& cls_) { return cls_.GetSpringRotationOffset(); });
	cl_SpringPickup.def("SetSpringRotationOffset", [](SpringPickup& cls_, Rotator newSpringRotationOffset) { return cls_.SetSpringRotationOffset(newSpringRotationOffset); }, pybind11::arg("newSpringRotationOffset"));
	cl_SpringPickup.def("GetHittingMeshScale", [](SpringPickup& cls_) { return cls_.GetHittingMeshScale(); });
	cl_SpringPickup.def("SetHittingMeshScale", [](SpringPickup& cls_, Vector newHittingMeshScale) { return cls_.SetHittingMeshScale(newHittingMeshScale); }, pybind11::arg("newHittingMeshScale"));
	cl_SpringPickup.def("GetHittingMeshOffset", [](SpringPickup& cls_) { return cls_.GetHittingMeshOffset(); });
	cl_SpringPickup.def("SetHittingMeshOffset", [](SpringPickup& cls_, Vector newHittingMeshOffset) { return cls_.SetHittingMeshOffset(newHittingMeshOffset); }, pybind11::arg("newHittingMeshOffset"));
	cl_SpringPickup.def("GetHittingRotationOffset", [](SpringPickup& cls_) { return cls_.GetHittingRotationOffset(); });
	cl_SpringPickup.def("SetHittingRotationOffset", [](SpringPickup& cls_, Rotator newHittingRotationOffset) { return cls_.SetHittingRotationOffset(newHittingRotationOffset); }, pybind11::arg("newHittingRotationOffset"));
	cl_SpringPickup.def("GetHitDistanceOffset", [](SpringPickup& cls_) { return cls_.GetHitDistanceOffset(); });
	cl_SpringPickup.def("SetHitDistanceOffset", [](SpringPickup& cls_, float newHitDistanceOffset) { return cls_.SetHitDistanceOffset(newHitDistanceOffset); }, pybind11::arg("newHitDistanceOffset"));
	cl_SpringPickup.def("GetAfterSpringDuration", [](SpringPickup& cls_) { return cls_.GetAfterSpringDuration(); });
	cl_SpringPickup.def("SetAfterSpringDuration", [](SpringPickup& cls_, float newAfterSpringDuration) { return cls_.SetAfterSpringDuration(newAfterSpringDuration); }, pybind11::arg("newAfterSpringDuration"));
	cl_SpringPickup.def("GetBallHitType", [](SpringPickup& cls_) { return cls_.GetBallHitType(); });
	cl_SpringPickup.def("SetBallHitType", [](SpringPickup& cls_, unsigned char newBallHitType) { return cls_.SetBallHitType(newBallHitType); }, pybind11::arg("newBallHitType"));
	cl_SpringPickup.def("GetMinSpringLength", [](SpringPickup& cls_) { return cls_.GetMinSpringLength(); });
	cl_SpringPickup.def("SetMinSpringLength", [](SpringPickup& cls_, float newMinSpringLength) { return cls_.SetMinSpringLength(newMinSpringLength); }, pybind11::arg("newMinSpringLength"));
	cl_SpringPickup.def("GetWeldedForceScalar", [](SpringPickup& cls_) { return cls_.GetWeldedForceScalar(); });
	cl_SpringPickup.def("SetWeldedForceScalar", [](SpringPickup& cls_, float newWeldedForceScalar) { return cls_.SetWeldedForceScalar(newWeldedForceScalar); }, pybind11::arg("newWeldedForceScalar"));
	cl_SpringPickup.def("GetWeldedVerticalForce", [](SpringPickup& cls_) { return cls_.GetWeldedVerticalForce(); });
	cl_SpringPickup.def("SetWeldedVerticalForce", [](SpringPickup& cls_, float newWeldedVerticalForce) { return cls_.SetWeldedVerticalForce(newWeldedVerticalForce); }, pybind11::arg("newWeldedVerticalForce"));
	cl_SpringPickup.def("GetCurrentSpringLength", [](SpringPickup& cls_) { return cls_.GetCurrentSpringLength(); });
	cl_SpringPickup.def("SetCurrentSpringLength", [](SpringPickup& cls_, float newCurrentSpringLength) { return cls_.SetCurrentSpringLength(newCurrentSpringLength); }, pybind11::arg("newCurrentSpringLength"));
	cl_SpringPickup.def("GetSpringedTime", [](SpringPickup& cls_) { return cls_.GetSpringedTime(); });
	cl_SpringPickup.def("SetSpringedTime", [](SpringPickup& cls_, float newSpringedTime) { return cls_.SetSpringedTime(newSpringedTime); }, pybind11::arg("newSpringedTime"));
	cl_SpringPickup.def("GetAfterSpringTime", [](SpringPickup& cls_) { return cls_.GetAfterSpringTime(); });
	cl_SpringPickup.def("SetAfterSpringTime", [](SpringPickup& cls_, float newAfterSpringTime) { return cls_.SetAfterSpringTime(newAfterSpringTime); }, pybind11::arg("newAfterSpringTime"));
	cl_SpringPickup.def("GetSpringToTime", [](SpringPickup& cls_) { return cls_.GetSpringToTime(); });
	cl_SpringPickup.def("SetSpringToTime", [](SpringPickup& cls_, float newSpringToTime) { return cls_.SetSpringToTime(newSpringToTime); }, pybind11::arg("newSpringToTime"));
	cl_SpringPickup.def("GetSpringOrigin", [](SpringPickup& cls_) { return cls_.GetSpringOrigin(); });
	cl_SpringPickup.def("SetSpringOrigin", [](SpringPickup& cls_, Vector newSpringOrigin) { return cls_.SetSpringOrigin(newSpringOrigin); }, pybind11::arg("newSpringOrigin"));
	cl_SpringPickup.def("GetSpringedLocation", [](SpringPickup& cls_) { return cls_.GetSpringedLocation(); });
	cl_SpringPickup.def("SetSpringedLocation", [](SpringPickup& cls_, Vector newSpringedLocation) { return cls_.SetSpringedLocation(newSpringedLocation); }, pybind11::arg("newSpringedLocation"));
	cl_SpringPickup.def("GetSpringedNormal", [](SpringPickup& cls_) { return cls_.GetSpringedNormal(); });
	cl_SpringPickup.def("SetSpringedNormal", [](SpringPickup& cls_, Vector newSpringedNormal) { return cls_.SetSpringedNormal(newSpringedNormal); }, pybind11::arg("newSpringedNormal"));
	cl_SpringPickup.def("GetSpringedLength", [](SpringPickup& cls_) { return cls_.GetSpringedLength(); });
	cl_SpringPickup.def("SetSpringedLength", [](SpringPickup& cls_, float newSpringedLength) { return cls_.SetSpringedLength(newSpringedLength); }, pybind11::arg("newSpringedLength"));
	cl_SpringPickup.def("PickupEnd", [](SpringPickup& cls_) { return cls_.PickupEnd(); });
	cl_SpringPickup.def("HandleCarTouchedBall", [](SpringPickup& cls_, BallWrapper Ball, CarWrapper OtherCar, unsigned char HitType) { return cls_.HandleCarTouchedBall(Ball, OtherCar, HitType); }, pybind11::arg("Ball"), pybind11::arg("OtherCar"), pybind11::arg("HitType"));
	cl_SpringPickup.def("ScaleSpringMeshToLocation", [](SpringPickup& cls_, Vector & NewLocation, Vector & TargetLoction) { return cls_.ScaleSpringMeshToLocation(NewLocation, TargetLoction); }, pybind11::arg("NewLocation"), pybind11::arg("TargetLoction"));
	cl_SpringPickup.def("ApplyForces", [](SpringPickup& cls_, float ActiveTime) { return cls_.ApplyForces(ActiveTime); }, pybind11::arg("ActiveTime"));
	cl_SpringPickup.def("GetRelativeConstantForce", [](SpringPickup& cls_, Vector & Direction) { return cls_.GetRelativeConstantForce(Direction); }, pybind11::arg("Direction"));
	cl_SpringPickup.def("GetRelativeImpulse", [](SpringPickup& cls_, Vector & Direction) { return cls_.GetRelativeImpulse(Direction); }, pybind11::arg("Direction"));
	cl_SpringPickup.def("DoSpring", [](SpringPickup& cls_, long unsigned int bFirstHit) { return cls_.DoSpring(bFirstHit); }, pybind11::arg("bFirstHit"));
	cl_SpringPickup.def("PickupStart", [](SpringPickup& cls_) { return cls_.PickupStart(); });
}
