void bind_BallWrapper(pybind11::module& m)
{

	pybind11::class_<BallWrapper, std::shared_ptr<BallWrapper>, RBActorWrapper> cl_BallWrapper(m, "BallWrapper");
	cl_BallWrapper.def(pybind11::init<uintptr_t>(), pybind11::arg("mem"));
	cl_BallWrapper.def(pybind11::init<BallWrapper const &>(), pybind11::arg("other"));
	// cl_BallWrapper.def(pybind11::del<>());
	cl_BallWrapper.def("GetLastTouchTime", [](BallWrapper& cls_) { return cls_.GetLastTouchTime(); });
	cl_BallWrapper.def("PredictPosition", [](BallWrapper& cls_, float timeAhead) { return cls_.PredictPosition(timeAhead); }, pybind11::arg("timeAhead"));
	cl_BallWrapper.def("GetEndOfGameFXArchetype", [](BallWrapper& cls_) { return cls_.GetEndOfGameFXArchetype(); });
	cl_BallWrapper.def("SetEndOfGameFXArchetype", [](BallWrapper& cls_, FXActorWrapper newEndOfGameFXArchetype) { return cls_.SetEndOfGameFXArchetype(newEndOfGameFXArchetype); }, pybind11::arg("newEndOfGameFXArchetype"));
	cl_BallWrapper.def("GetbAllowPlayerExplosionOverride", [](BallWrapper& cls_) { return cls_.GetbAllowPlayerExplosionOverride(); });
	cl_BallWrapper.def("SetbAllowPlayerExplosionOverride", [](BallWrapper& cls_, long unsigned int newbAllowPlayerExplosionOverride) { return cls_.SetbAllowPlayerExplosionOverride(newbAllowPlayerExplosionOverride); }, pybind11::arg("newbAllowPlayerExplosionOverride"));
	cl_BallWrapper.def("GetbNotifyGroundHit", [](BallWrapper& cls_) { return cls_.GetbNotifyGroundHit(); });
	cl_BallWrapper.def("SetbNotifyGroundHit", [](BallWrapper& cls_, long unsigned int newbNotifyGroundHit) { return cls_.SetbNotifyGroundHit(newbNotifyGroundHit); }, pybind11::arg("newbNotifyGroundHit"));
	cl_BallWrapper.def("GetbEndOfGameHidden", [](BallWrapper& cls_) { return cls_.GetbEndOfGameHidden(); });
	cl_BallWrapper.def("SetbEndOfGameHidden", [](BallWrapper& cls_, long unsigned int newbEndOfGameHidden) { return cls_.SetbEndOfGameHidden(newbEndOfGameHidden); }, pybind11::arg("newbEndOfGameHidden"));
	cl_BallWrapper.def("GetbFadeIn", [](BallWrapper& cls_) { return cls_.GetbFadeIn(); });
	cl_BallWrapper.def("SetbFadeIn", [](BallWrapper& cls_, long unsigned int newbFadeIn) { return cls_.SetbFadeIn(newbFadeIn); }, pybind11::arg("newbFadeIn"));
	cl_BallWrapper.def("GetbFadeOut", [](BallWrapper& cls_) { return cls_.GetbFadeOut(); });
	cl_BallWrapper.def("SetbFadeOut", [](BallWrapper& cls_, long unsigned int newbFadeOut) { return cls_.SetbFadeOut(newbFadeOut); }, pybind11::arg("newbFadeOut"));
	cl_BallWrapper.def("GetbPredictionOnGround", [](BallWrapper& cls_) { return cls_.GetbPredictionOnGround(); });
	cl_BallWrapper.def("SetbPredictionOnGround", [](BallWrapper& cls_, long unsigned int newbPredictionOnGround) { return cls_.SetbPredictionOnGround(newbPredictionOnGround); }, pybind11::arg("newbPredictionOnGround"));
	cl_BallWrapper.def("GetbCanBeAttached", [](BallWrapper& cls_) { return cls_.GetbCanBeAttached(); });
	cl_BallWrapper.def("SetbCanBeAttached", [](BallWrapper& cls_, long unsigned int newbCanBeAttached) { return cls_.SetbCanBeAttached(newbCanBeAttached); }, pybind11::arg("newbCanBeAttached"));
	cl_BallWrapper.def("GetbItemFreeze", [](BallWrapper& cls_) { return cls_.GetbItemFreeze(); });
	cl_BallWrapper.def("SetbItemFreeze", [](BallWrapper& cls_, long unsigned int newbItemFreeze) { return cls_.SetbItemFreeze(newbItemFreeze); }, pybind11::arg("newbItemFreeze"));
	cl_BallWrapper.def("GetMagnusCoefficient", [](BallWrapper& cls_) { return cls_.GetMagnusCoefficient(); });
	cl_BallWrapper.def("SetMagnusCoefficient", [](BallWrapper& cls_, Vector newMagnusCoefficient) { return cls_.SetMagnusCoefficient(newMagnusCoefficient); }, pybind11::arg("newMagnusCoefficient"));
	cl_BallWrapper.def("GetRadius", [](BallWrapper& cls_) { return cls_.GetRadius(); });
	cl_BallWrapper.def("SetRadius", [](BallWrapper& cls_, float newRadius) { return cls_.SetRadius(newRadius); }, pybind11::arg("newRadius"));
	cl_BallWrapper.def("GetVisualRadius", [](BallWrapper& cls_) { return cls_.GetVisualRadius(); });
	cl_BallWrapper.def("SetVisualRadius", [](BallWrapper& cls_, float newVisualRadius) { return cls_.SetVisualRadius(newVisualRadius); }, pybind11::arg("newVisualRadius"));
	cl_BallWrapper.def("GetLastCalculateCarHit", [](BallWrapper& cls_) { return cls_.GetLastCalculateCarHit(); });
	cl_BallWrapper.def("GetInitialLocation", [](BallWrapper& cls_) { return cls_.GetInitialLocation(); });
	cl_BallWrapper.def("SetInitialLocation", [](BallWrapper& cls_, Vector newInitialLocation) { return cls_.SetInitialLocation(newInitialLocation); }, pybind11::arg("newInitialLocation"));
	cl_BallWrapper.def("SetInitialRotation", [](BallWrapper& cls_, Rotator newInitialRotation) { return cls_.SetInitialRotation(newInitialRotation); }, pybind11::arg("newInitialRotation"));
	cl_BallWrapper.def("GetLastHitWorldTime", [](BallWrapper& cls_) { return cls_.GetLastHitWorldTime(); });
	cl_BallWrapper.def("GetReplicatedBallScale", [](BallWrapper& cls_) { return cls_.GetReplicatedBallScale(); });
	cl_BallWrapper.def("SetReplicatedBallScale", [](BallWrapper& cls_, float newReplicatedBallScale) { return cls_.SetReplicatedBallScale(newReplicatedBallScale); }, pybind11::arg("newReplicatedBallScale"));
	cl_BallWrapper.def("GetReplicatedWorldBounceScale", [](BallWrapper& cls_) { return cls_.GetReplicatedWorldBounceScale(); });
	cl_BallWrapper.def("SetReplicatedWorldBounceScale", [](BallWrapper& cls_, float newReplicatedWorldBounceScale) { return cls_.SetReplicatedWorldBounceScale(newReplicatedWorldBounceScale); }, pybind11::arg("newReplicatedWorldBounceScale"));
	cl_BallWrapper.def("GetReplicatedBallGravityScale", [](BallWrapper& cls_) { return cls_.GetReplicatedBallGravityScale(); });
	cl_BallWrapper.def("SetReplicatedBallGravityScale", [](BallWrapper& cls_, float newReplicatedBallGravityScale) { return cls_.SetReplicatedBallGravityScale(newReplicatedBallGravityScale); }, pybind11::arg("newReplicatedBallGravityScale"));
	cl_BallWrapper.def("GetReplicatedBallMaxLinearSpeedScale", [](BallWrapper& cls_) { return cls_.GetReplicatedBallMaxLinearSpeedScale(); });
	cl_BallWrapper.def("SetReplicatedBallMaxLinearSpeedScale", [](BallWrapper& cls_, float newReplicatedBallMaxLinearSpeedScale) { return cls_.SetReplicatedBallMaxLinearSpeedScale(newReplicatedBallMaxLinearSpeedScale); }, pybind11::arg("newReplicatedBallMaxLinearSpeedScale"));
	cl_BallWrapper.def("GetReplicatedAddedCarBounceScale", [](BallWrapper& cls_) { return cls_.GetReplicatedAddedCarBounceScale(); });
	cl_BallWrapper.def("SetReplicatedAddedCarBounceScale", [](BallWrapper& cls_, float newReplicatedAddedCarBounceScale) { return cls_.SetReplicatedAddedCarBounceScale(newReplicatedAddedCarBounceScale); }, pybind11::arg("newReplicatedAddedCarBounceScale"));
	cl_BallWrapper.def("GetAdditionalCarGroundBounceScaleZ", [](BallWrapper& cls_) { return cls_.GetAdditionalCarGroundBounceScaleZ(); });
	cl_BallWrapper.def("SetAdditionalCarGroundBounceScaleZ", [](BallWrapper& cls_, float newAdditionalCarGroundBounceScaleZ) { return cls_.SetAdditionalCarGroundBounceScaleZ(newAdditionalCarGroundBounceScaleZ); }, pybind11::arg("newAdditionalCarGroundBounceScaleZ"));
	cl_BallWrapper.def("GetAdditionalCarGroundBounceScaleXY", [](BallWrapper& cls_) { return cls_.GetAdditionalCarGroundBounceScaleXY(); });
	cl_BallWrapper.def("SetAdditionalCarGroundBounceScaleXY", [](BallWrapper& cls_, float newAdditionalCarGroundBounceScaleXY) { return cls_.SetAdditionalCarGroundBounceScaleXY(newAdditionalCarGroundBounceScaleXY); }, pybind11::arg("newAdditionalCarGroundBounceScaleXY"));
	cl_BallWrapper.def("GetHitTeamNum", [](BallWrapper& cls_) { return cls_.GetHitTeamNum(); });
	cl_BallWrapper.def("SetHitTeamNum", [](BallWrapper& cls_, unsigned char newHitTeamNum) { return cls_.SetHitTeamNum(newHitTeamNum); }, pybind11::arg("newHitTeamNum"));
	cl_BallWrapper.def("GetGameEvent", [](BallWrapper& cls_) { return cls_.GetGameEvent(); });
	cl_BallWrapper.def("GetExplosionTime", [](BallWrapper& cls_) { return cls_.GetExplosionTime(); });
	cl_BallWrapper.def("SetExplosionTime", [](BallWrapper& cls_, float newExplosionTime) { return cls_.SetExplosionTime(newExplosionTime); }, pybind11::arg("newExplosionTime"));
	cl_BallWrapper.def("GetOldLocation", [](BallWrapper& cls_) { return cls_.GetOldLocation(); });
	cl_BallWrapper.def("SetOldLocation", [](BallWrapper& cls_, Vector newOldLocation) { return cls_.SetOldLocation(newOldLocation); }, pybind11::arg("newOldLocation"));
	cl_BallWrapper.def("GetPredictionTimestep", [](BallWrapper& cls_) { return cls_.GetPredictionTimestep(); });
	cl_BallWrapper.def("SetPredictionTimestep", [](BallWrapper& cls_, float newPredictionTimestep) { return cls_.SetPredictionTimestep(newPredictionTimestep); }, pybind11::arg("newPredictionTimestep"));
	cl_BallWrapper.def("GetLastPredictionTime", [](BallWrapper& cls_) { return cls_.GetLastPredictionTime(); });
	cl_BallWrapper.def("SetLastPredictionTime", [](BallWrapper& cls_, float newLastPredictionTime) { return cls_.SetLastPredictionTime(newLastPredictionTime); }, pybind11::arg("newLastPredictionTime"));
	cl_BallWrapper.def("GetGroundForce", [](BallWrapper& cls_) { return cls_.GetGroundForce(); });
	cl_BallWrapper.def("SetGroundForce", [](BallWrapper& cls_, float newGroundForce) { return cls_.SetGroundForce(newGroundForce); }, pybind11::arg("newGroundForce"));
	cl_BallWrapper.def("GetCurrentAffector", [](BallWrapper& cls_) { return cls_.GetCurrentAffector(); });
	cl_BallWrapper.def("SetCurrentAffector", [](BallWrapper& cls_, CarWrapper newCurrentAffector) { return cls_.SetCurrentAffector(newCurrentAffector); }, pybind11::arg("newCurrentAffector"));
	cl_BallWrapper.def("GetTrajectoryStartVelocity", [](BallWrapper& cls_) { return cls_.GetTrajectoryStartVelocity(); });
	cl_BallWrapper.def("GetTrajectoryStartRotation", [](BallWrapper& cls_) { return cls_.GetTrajectoryStartRotation(); });
	cl_BallWrapper.def("GetTrajectoryStartLocation", [](BallWrapper& cls_) { return cls_.GetTrajectoryStartLocation(); });
	cl_BallWrapper.def("ShouldDrawTrajectory", [](BallWrapper& cls_) { return cls_.ShouldDrawTrajectory(); });
	cl_BallWrapper.def("GetAdditionalCarBounceScaleZ", [](BallWrapper& cls_, CarWrapper Car) { return cls_.GetAdditionalCarBounceScaleZ(Car); }, pybind11::arg("Car"));
	cl_BallWrapper.def("SetEndOfGameHidden", [](BallWrapper& cls_) { return cls_.SetEndOfGameHidden(); });
	cl_BallWrapper.def("Explode", [](BallWrapper& cls_, GoalWrapper ExplosionGoal, Vector & ExplodeLocation, PriWrapper Scorer) { return cls_.Explode(ExplosionGoal, ExplodeLocation, Scorer); }, pybind11::arg("ExplosionGoal"), pybind11::arg("ExplodeLocation"), pybind11::arg("Scorer"));
	cl_BallWrapper.def("DoDestroy", [](BallWrapper& cls_) { return cls_.DoDestroy(); });
	cl_BallWrapper.def("DoExplode", [](BallWrapper& cls_) { return cls_.DoExplode(); });
	cl_BallWrapper.def("Launch", [](BallWrapper& cls_, Vector & LaunchPosition, Vector & LaunchDirection) { return cls_.Launch(LaunchPosition, LaunchDirection); }, pybind11::arg("LaunchPosition"), pybind11::arg("LaunchDirection"));
	cl_BallWrapper.def("OnCarTouch", [](BallWrapper& cls_, CarWrapper HitCar, unsigned char HitType) { return cls_.OnCarTouch(HitCar, HitType); }, pybind11::arg("HitCar"), pybind11::arg("HitType"));
	cl_BallWrapper.def("RecordCarHit", [](BallWrapper& cls_, CarWrapper HitCar, Vector & HitLocation, Vector & HitNormal, unsigned char HitType) { return cls_.RecordCarHit(HitCar, HitLocation, HitNormal, HitType); }, pybind11::arg("HitCar"), pybind11::arg("HitLocation"), pybind11::arg("HitNormal"), pybind11::arg("HitType"));
	cl_BallWrapper.def("IsGroundHit", [](BallWrapper& cls_, Vector & HitNormal) { return cls_.IsGroundHit(HitNormal); }, pybind11::arg("HitNormal"));
	cl_BallWrapper.def("FellOutOfWorld", [](BallWrapper& cls_) { return cls_.FellOutOfWorld(); });
	cl_BallWrapper.def("IsRoundActive", [](BallWrapper& cls_) { return cls_.IsRoundActive(); });
	cl_BallWrapper.def("eventOnHitGoal", [](BallWrapper& cls_, GoalWrapper Goal, Vector & HitLoc) { return cls_.eventOnHitGoal(Goal, HitLoc); }, pybind11::arg("Goal"), pybind11::arg("HitLoc"));
	cl_BallWrapper.def("TurnOff", [](BallWrapper& cls_) { return cls_.TurnOff(); });
	cl_BallWrapper.def("InitAk", [](BallWrapper& cls_) { return cls_.InitAk(); });
	cl_BallWrapper.def("SetWorldBounceScale", [](BallWrapper& cls_, float NewScale) { return cls_.SetWorldBounceScale(NewScale); }, pybind11::arg("NewScale"));
	cl_BallWrapper.def("SetCarBounceScale", [](BallWrapper& cls_, float NewScale) { return cls_.SetCarBounceScale(NewScale); }, pybind11::arg("NewScale"));
	cl_BallWrapper.def("SetBallMaxLinearSpeedScale", [](BallWrapper& cls_, float InMaxLinearSpeedScale) { return cls_.SetBallMaxLinearSpeedScale(InMaxLinearSpeedScale); }, pybind11::arg("InMaxLinearSpeedScale"));
	cl_BallWrapper.def("SetBallGravityScale", [](BallWrapper& cls_, float InBallGravityScale) { return cls_.SetBallGravityScale(InBallGravityScale); }, pybind11::arg("InBallGravityScale"));
	cl_BallWrapper.def("SetBallScale", [](BallWrapper& cls_, float NewScale) { return cls_.SetBallScale(NewScale); }, pybind11::arg("NewScale"));
	cl_BallWrapper.def("EventHitGoal", [](BallWrapper& cls_, BallWrapper Ball, GoalWrapper Goal) { return cls_.EventHitGoal(Ball, Goal); }, pybind11::arg("Ball"), pybind11::arg("Goal"));
}
