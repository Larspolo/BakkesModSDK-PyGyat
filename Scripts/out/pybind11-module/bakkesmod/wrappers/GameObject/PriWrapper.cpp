void bind_PriWrapper(pybind11::module& m)
{

	pybind11::class_<PriWrapper, std::shared_ptr<PriWrapper>, PriXWrapper> cl_PriWrapper(m, "PriWrapper");
	cl_PriWrapper.def(pybind11::init<uintptr_t>(), pybind11::arg("mem"));
	cl_PriWrapper.def(pybind11::init<PriWrapper const &>(), pybind11::arg("other"));
	// cl_PriWrapper.def(pybind11::del<>());
	cl_PriWrapper.def("GetMatchScore", [](PriWrapper& cls_) { return cls_.GetMatchScore(); });
	cl_PriWrapper.def("SetMatchScore", [](PriWrapper& cls_, int newMatchScore) { return cls_.SetMatchScore(newMatchScore); }, pybind11::arg("newMatchScore"));
	cl_PriWrapper.def("GetMatchGoals", [](PriWrapper& cls_) { return cls_.GetMatchGoals(); });
	cl_PriWrapper.def("SetMatchGoals", [](PriWrapper& cls_, int newMatchGoals) { return cls_.SetMatchGoals(newMatchGoals); }, pybind11::arg("newMatchGoals"));
	cl_PriWrapper.def("GetMatchOwnGoals", [](PriWrapper& cls_) { return cls_.GetMatchOwnGoals(); });
	cl_PriWrapper.def("SetMatchOwnGoals", [](PriWrapper& cls_, int newMatchOwnGoals) { return cls_.SetMatchOwnGoals(newMatchOwnGoals); }, pybind11::arg("newMatchOwnGoals"));
	cl_PriWrapper.def("GetMatchAssists", [](PriWrapper& cls_) { return cls_.GetMatchAssists(); });
	cl_PriWrapper.def("SetMatchAssists", [](PriWrapper& cls_, int newMatchAssists) { return cls_.SetMatchAssists(newMatchAssists); }, pybind11::arg("newMatchAssists"));
	cl_PriWrapper.def("GetMatchSaves", [](PriWrapper& cls_) { return cls_.GetMatchSaves(); });
	cl_PriWrapper.def("SetMatchSaves", [](PriWrapper& cls_, int newMatchSaves) { return cls_.SetMatchSaves(newMatchSaves); }, pybind11::arg("newMatchSaves"));
	cl_PriWrapper.def("GetMatchShots", [](PriWrapper& cls_) { return cls_.GetMatchShots(); });
	cl_PriWrapper.def("SetMatchShots", [](PriWrapper& cls_, int newMatchShots) { return cls_.SetMatchShots(newMatchShots); }, pybind11::arg("newMatchShots"));
	cl_PriWrapper.def("GetMatchDemolishes", [](PriWrapper& cls_) { return cls_.GetMatchDemolishes(); });
	cl_PriWrapper.def("SetMatchDemolishes", [](PriWrapper& cls_, int newMatchDemolishes) { return cls_.SetMatchDemolishes(newMatchDemolishes); }, pybind11::arg("newMatchDemolishes"));
	cl_PriWrapper.def("GetMatchBonusXP", [](PriWrapper& cls_) { return cls_.GetMatchBonusXP(); });
	cl_PriWrapper.def("SetMatchBonusXP", [](PriWrapper& cls_, int newMatchBonusXP) { return cls_.SetMatchBonusXP(newMatchBonusXP); }, pybind11::arg("newMatchBonusXP"));
	cl_PriWrapper.def("GetMatchBreakoutDamage", [](PriWrapper& cls_) { return cls_.GetMatchBreakoutDamage(); });
	cl_PriWrapper.def("SetMatchBreakoutDamage", [](PriWrapper& cls_, int newMatchBreakoutDamage) { return cls_.SetMatchBreakoutDamage(newMatchBreakoutDamage); }, pybind11::arg("newMatchBreakoutDamage"));
	cl_PriWrapper.def("GetbMatchMVP", [](PriWrapper& cls_) { return cls_.GetbMatchMVP(); });
	cl_PriWrapper.def("SetbMatchMVP", [](PriWrapper& cls_, long unsigned int newbMatchMVP) { return cls_.SetbMatchMVP(newbMatchMVP); }, pybind11::arg("newbMatchMVP"));
	cl_PriWrapper.def("GetbMatchAdmin", [](PriWrapper& cls_) { return cls_.GetbMatchAdmin(); });
	cl_PriWrapper.def("SetbMatchAdmin", [](PriWrapper& cls_, long unsigned int newbMatchAdmin) { return cls_.SetbMatchAdmin(newbMatchAdmin); }, pybind11::arg("newbMatchAdmin"));
	cl_PriWrapper.def("GetbLoadoutSet", [](PriWrapper& cls_) { return cls_.GetbLoadoutSet(); });
	cl_PriWrapper.def("SetbLoadoutSet", [](PriWrapper& cls_, long unsigned int newbLoadoutSet) { return cls_.SetbLoadoutSet(newbLoadoutSet); }, pybind11::arg("newbLoadoutSet"));
	cl_PriWrapper.def("GetbOnlineLoadoutSet", [](PriWrapper& cls_) { return cls_.GetbOnlineLoadoutSet(); });
	cl_PriWrapper.def("SetbOnlineLoadoutSet", [](PriWrapper& cls_, long unsigned int newbOnlineLoadoutSet) { return cls_.SetbOnlineLoadoutSet(newbOnlineLoadoutSet); }, pybind11::arg("newbOnlineLoadoutSet"));
	cl_PriWrapper.def("GetbLoadoutsSet", [](PriWrapper& cls_) { return cls_.GetbLoadoutsSet(); });
	cl_PriWrapper.def("SetbLoadoutsSet", [](PriWrapper& cls_, long unsigned int newbLoadoutsSet) { return cls_.SetbLoadoutsSet(newbLoadoutsSet); }, pybind11::arg("newbLoadoutsSet"));
	cl_PriWrapper.def("GetbOnlineLoadoutsSet", [](PriWrapper& cls_) { return cls_.GetbOnlineLoadoutsSet(); });
	cl_PriWrapper.def("SetbOnlineLoadoutsSet", [](PriWrapper& cls_, long unsigned int newbOnlineLoadoutsSet) { return cls_.SetbOnlineLoadoutsSet(newbOnlineLoadoutsSet); }, pybind11::arg("newbOnlineLoadoutsSet"));
	cl_PriWrapper.def("GetbTeamPaintSet", [](PriWrapper& cls_) { return cls_.GetbTeamPaintSet(); });
	cl_PriWrapper.def("SetbTeamPaintSet", [](PriWrapper& cls_, long unsigned int newbTeamPaintSet) { return cls_.SetbTeamPaintSet(newbTeamPaintSet); }, pybind11::arg("newbTeamPaintSet"));
	cl_PriWrapper.def("GetbReady", [](PriWrapper& cls_) { return cls_.GetbReady(); });
	cl_PriWrapper.def("SetbReady", [](PriWrapper& cls_, long unsigned int newbReady) { return cls_.SetbReady(newbReady); }, pybind11::arg("newbReady"));
	cl_PriWrapper.def("GetbBusy", [](PriWrapper& cls_) { return cls_.GetbBusy(); });
	cl_PriWrapper.def("SetbBusy", [](PriWrapper& cls_, long unsigned int newbBusy) { return cls_.SetbBusy(newbBusy); }, pybind11::arg("newbBusy"));
	cl_PriWrapper.def("GetbUsingSecondaryCamera", [](PriWrapper& cls_) { return cls_.GetbUsingSecondaryCamera(); });
	cl_PriWrapper.def("SetbUsingSecondaryCamera", [](PriWrapper& cls_, long unsigned int newbUsingSecondaryCamera) { return cls_.SetbUsingSecondaryCamera(newbUsingSecondaryCamera); }, pybind11::arg("newbUsingSecondaryCamera"));
	cl_PriWrapper.def("GetbUsingBehindView", [](PriWrapper& cls_) { return cls_.GetbUsingBehindView(); });
	cl_PriWrapper.def("SetbUsingBehindView", [](PriWrapper& cls_, long unsigned int newbUsingBehindView) { return cls_.SetbUsingBehindView(newbUsingBehindView); }, pybind11::arg("newbUsingBehindView"));
	cl_PriWrapper.def("GetbUsingFreecam", [](PriWrapper& cls_) { return cls_.GetbUsingFreecam(); });
	cl_PriWrapper.def("SetbUsingFreecam", [](PriWrapper& cls_, long unsigned int newbUsingFreecam) { return cls_.SetbUsingFreecam(newbUsingFreecam); }, pybind11::arg("newbUsingFreecam"));
	cl_PriWrapper.def("GetbIsInSplitScreen", [](PriWrapper& cls_) { return cls_.GetbIsInSplitScreen(); });
	cl_PriWrapper.def("SetbIsInSplitScreen", [](PriWrapper& cls_, long unsigned int newbIsInSplitScreen) { return cls_.SetbIsInSplitScreen(newbIsInSplitScreen); }, pybind11::arg("newbIsInSplitScreen"));
	//cl_PriWrapper.def("GetbDeveloper", [](PriWrapper& cls_) { return cls_.GetbDeveloper(); });
	//cl_PriWrapper.def("SetbDeveloper", [](PriWrapper& cls_, long unsigned int newbDeveloper) { return cls_.SetbDeveloper(newbDeveloper); }, pybind11::arg("newbDeveloper"));
	cl_PriWrapper.def("GetbStartVoteToForfeitDisabled", [](PriWrapper& cls_) { return cls_.GetbStartVoteToForfeitDisabled(); });
	cl_PriWrapper.def("SetbStartVoteToForfeitDisabled", [](PriWrapper& cls_, long unsigned int newbStartVoteToForfeitDisabled) { return cls_.SetbStartVoteToForfeitDisabled(newbStartVoteToForfeitDisabled); }, pybind11::arg("newbStartVoteToForfeitDisabled"));
	cl_PriWrapper.def("GetbUsingItems", [](PriWrapper& cls_) { return cls_.GetbUsingItems(); });
	cl_PriWrapper.def("SetbUsingItems", [](PriWrapper& cls_, long unsigned int newbUsingItems) { return cls_.SetbUsingItems(newbUsingItems); }, pybind11::arg("newbUsingItems"));
	cl_PriWrapper.def("GetPlayerHistoryValid", [](PriWrapper& cls_) { return cls_.GetPlayerHistoryValid(); });
	cl_PriWrapper.def("SetPlayerHistoryValid", [](PriWrapper& cls_, long unsigned int newPlayerHistoryValid) { return cls_.SetPlayerHistoryValid(newPlayerHistoryValid); }, pybind11::arg("newPlayerHistoryValid"));
	//cl_PriWrapper.def("GetbPlayedWithGamepad", [](PriWrapper& cls_) { return cls_.GetbPlayedWithGamepad(); });
	//cl_PriWrapper.def("SetbPlayedWithGamepad", [](PriWrapper& cls_, long unsigned int newbPlayedWithGamepad) { return cls_.SetbPlayedWithGamepad(newbPlayedWithGamepad); }, pybind11::arg("newbPlayedWithGamepad"));
	cl_PriWrapper.def("GetGameEvent", [](PriWrapper& cls_) { return cls_.GetGameEvent(); });
	cl_PriWrapper.def("SetGameEvent", [](PriWrapper& cls_, GameEventWrapper newGameEvent) { return cls_.SetGameEvent(newGameEvent); }, pybind11::arg("newGameEvent"));
	cl_PriWrapper.def("GetReplicatedGameEvent", [](PriWrapper& cls_) { return cls_.GetReplicatedGameEvent(); });
	cl_PriWrapper.def("SetReplicatedGameEvent", [](PriWrapper& cls_, GameEventWrapper newReplicatedGameEvent) { return cls_.SetReplicatedGameEvent(newReplicatedGameEvent); }, pybind11::arg("newReplicatedGameEvent"));
	cl_PriWrapper.def("GetCar", [](PriWrapper& cls_) { return cls_.GetCar(); });
	cl_PriWrapper.def("SetCar", [](PriWrapper& cls_, CarWrapper newCar) { return cls_.SetCar(newCar); }, pybind11::arg("newCar"));
	cl_PriWrapper.def("GetRespawnTimeRemaining", [](PriWrapper& cls_) { return cls_.GetRespawnTimeRemaining(); });
	cl_PriWrapper.def("SetRespawnTimeRemaining", [](PriWrapper& cls_, int newRespawnTimeRemaining) { return cls_.SetRespawnTimeRemaining(newRespawnTimeRemaining); }, pybind11::arg("newRespawnTimeRemaining"));
	cl_PriWrapper.def("GetWaitingStartTime", [](PriWrapper& cls_) { return cls_.GetWaitingStartTime(); });
	cl_PriWrapper.def("SetWaitingStartTime", [](PriWrapper& cls_, int newWaitingStartTime) { return cls_.SetWaitingStartTime(newWaitingStartTime); }, pybind11::arg("newWaitingStartTime"));
	cl_PriWrapper.def("GetTotalGameTimePlayed", [](PriWrapper& cls_) { return cls_.GetTotalGameTimePlayed(); });
	cl_PriWrapper.def("SetTotalGameTimePlayed", [](PriWrapper& cls_, float newTotalGameTimePlayed) { return cls_.SetTotalGameTimePlayed(newTotalGameTimePlayed); }, pybind11::arg("newTotalGameTimePlayed"));
	cl_PriWrapper.def("GetCameraSettings", [](PriWrapper& cls_) { return cls_.GetCameraSettings(); });
	cl_PriWrapper.def("SetCameraSettings", [](PriWrapper& cls_, ProfileCameraSettings newCameraSettings) { return cls_.SetCameraSettings(newCameraSettings); }, pybind11::arg("newCameraSettings"));
	cl_PriWrapper.def("GetCameraPitch", [](PriWrapper& cls_) { return cls_.GetCameraPitch(); });
	cl_PriWrapper.def("SetCameraPitch", [](PriWrapper& cls_, unsigned char newCameraPitch) { return cls_.SetCameraPitch(newCameraPitch); }, pybind11::arg("newCameraPitch"));
	cl_PriWrapper.def("GetCameraYaw", [](PriWrapper& cls_) { return cls_.GetCameraYaw(); });
	cl_PriWrapper.def("SetCameraYaw", [](PriWrapper& cls_, unsigned char newCameraYaw) { return cls_.SetCameraYaw(newCameraYaw); }, pybind11::arg("newCameraYaw"));
	cl_PriWrapper.def("GetPawnType", [](PriWrapper& cls_) { return cls_.GetPawnType(); });
	cl_PriWrapper.def("SetPawnType", [](PriWrapper& cls_, unsigned char newPawnType) { return cls_.SetPawnType(newPawnType); }, pybind11::arg("newPawnType"));
	cl_PriWrapper.def("GetReplicatedWorstNetQualityBeyondLatency", [](PriWrapper& cls_) { return cls_.GetReplicatedWorstNetQualityBeyondLatency(); });
	cl_PriWrapper.def("SetReplicatedWorstNetQualityBeyondLatency", [](PriWrapper& cls_, unsigned char newReplicatedWorstNetQualityBeyondLatency) { return cls_.SetReplicatedWorstNetQualityBeyondLatency(newReplicatedWorstNetQualityBeyondLatency); }, pybind11::arg("newReplicatedWorstNetQualityBeyondLatency"));
	// [deprecated] cl_PriWrapper.def("GetPartyLeader", [](PriWrapper& cls_) { return cls_.GetPartyLeader(); });
	// [deprecated] cl_PriWrapper.def("SetPartyLeader", [](PriWrapper& cls_, SteamID newPartyLeader) { return cls_.SetPartyLeader(newPartyLeader); }, pybind11::arg("newPartyLeader"));
	cl_PriWrapper.def("GetPartyLeaderID", [](PriWrapper& cls_) { return cls_.GetPartyLeaderID(); });
	cl_PriWrapper.def("SetPartyLeader", [](PriWrapper& cls_, UniqueIDWrapper newPartyLeader) { return cls_.SetPartyLeader(newPartyLeader); }, pybind11::arg("newPartyLeader"));
	//cl_PriWrapper.def("GetTotalXP", [](PriWrapper& cls_) { return cls_.GetTotalXP(); });
	//cl_PriWrapper.def("SetTotalXP", [](PriWrapper& cls_, int newTotalXP) { return cls_.SetTotalXP(newTotalXP); }, pybind11::arg("newTotalXP"));
	//cl_PriWrapper.def("GetXpLevel", [](PriWrapper& cls_) { return cls_.GetXpLevel(); });
	//cl_PriWrapper.def("SetXpLevel", [](PriWrapper& cls_, int newXpLevel) { return cls_.SetXpLevel(newXpLevel); }, pybind11::arg("newXpLevel"));
	cl_PriWrapper.def("GetDodgeInputThreshold", [](PriWrapper& cls_) { return cls_.GetDodgeInputThreshold(); });
	cl_PriWrapper.def("SetDodgeInputThreshold", [](PriWrapper& cls_, float newDodgeInputThreshold) { return cls_.SetDodgeInputThreshold(newDodgeInputThreshold); }, pybind11::arg("newDodgeInputThreshold"));
	cl_PriWrapper.def("GetSteeringSensitivity", [](PriWrapper& cls_) { return cls_.GetSteeringSensitivity(); });
	cl_PriWrapper.def("SetSteeringSensitivity", [](PriWrapper& cls_, float newSteeringSensitivity) { return cls_.SetSteeringSensitivity(newSteeringSensitivity); }, pybind11::arg("newSteeringSensitivity"));
	cl_PriWrapper.def("GetAirControlSensitivity", [](PriWrapper& cls_) { return cls_.GetAirControlSensitivity(); });
	cl_PriWrapper.def("SetAirControlSensitivity", [](PriWrapper& cls_, float newAirControlSensitivity) { return cls_.SetAirControlSensitivity(newAirControlSensitivity); }, pybind11::arg("newAirControlSensitivity"));
	cl_PriWrapper.def("GetNextTimeRestrictedStatEventAllowedTime", [](PriWrapper& cls_) { return cls_.GetNextTimeRestrictedStatEventAllowedTime(); });
	cl_PriWrapper.def("SetNextTimeRestrictedStatEventAllowedTime", [](PriWrapper& cls_, float newNextTimeRestrictedStatEventAllowedTime) { return cls_.SetNextTimeRestrictedStatEventAllowedTime(newNextTimeRestrictedStatEventAllowedTime); }, pybind11::arg("newNextTimeRestrictedStatEventAllowedTime"));
	cl_PriWrapper.def("GetLastTimeRestrictedStatEventTime", [](PriWrapper& cls_) { return cls_.GetLastTimeRestrictedStatEventTime(); });
	cl_PriWrapper.def("SetLastTimeRestrictedStatEventTime", [](PriWrapper& cls_, float newLastTimeRestrictedStatEventTime) { return cls_.SetLastTimeRestrictedStatEventTime(newLastTimeRestrictedStatEventTime); }, pybind11::arg("newLastTimeRestrictedStatEventTime"));
	cl_PriWrapper.def("GetTimeTillItem", [](PriWrapper& cls_) { return cls_.GetTimeTillItem(); });
	cl_PriWrapper.def("SetTimeTillItem", [](PriWrapper& cls_, int newTimeTillItem) { return cls_.SetTimeTillItem(newTimeTillItem); }, pybind11::arg("newTimeTillItem"));
	cl_PriWrapper.def("GetMaxTimeTillItem", [](PriWrapper& cls_) { return cls_.GetMaxTimeTillItem(); });
	cl_PriWrapper.def("SetMaxTimeTillItem", [](PriWrapper& cls_, int newMaxTimeTillItem) { return cls_.SetMaxTimeTillItem(newMaxTimeTillItem); }, pybind11::arg("newMaxTimeTillItem"));
	cl_PriWrapper.def("GetBoostPickups", [](PriWrapper& cls_) { return cls_.GetBoostPickups(); });
	cl_PriWrapper.def("SetBoostPickups", [](PriWrapper& cls_, int newBoostPickups) { return cls_.SetBoostPickups(newBoostPickups); }, pybind11::arg("newBoostPickups"));
	cl_PriWrapper.def("GetBallTouches", [](PriWrapper& cls_) { return cls_.GetBallTouches(); });
	cl_PriWrapper.def("SetBallTouches", [](PriWrapper& cls_, int newBallTouches) { return cls_.SetBallTouches(newBallTouches); }, pybind11::arg("newBallTouches"));
	cl_PriWrapper.def("GetCarTouches", [](PriWrapper& cls_) { return cls_.GetCarTouches(); });
	cl_PriWrapper.def("SetCarTouches", [](PriWrapper& cls_, int newCarTouches) { return cls_.SetCarTouches(newCarTouches); }, pybind11::arg("newCarTouches"));
	cl_PriWrapper.def("GetReplacingBotPRI", [](PriWrapper& cls_) { return cls_.GetReplacingBotPRI(); });
	cl_PriWrapper.def("SetReplacingBotPRI", [](PriWrapper& cls_, PriWrapper newReplacingBotPRI) { return cls_.SetReplacingBotPRI(newReplacingBotPRI); }, pybind11::arg("newReplacingBotPRI"));
	cl_PriWrapper.def("GetClubID", [](PriWrapper& cls_) { return cls_.GetClubID(); });
	cl_PriWrapper.def("SetClubID", [](PriWrapper& cls_, long long unsigned int newClubID) { return cls_.SetClubID(newClubID); }, pybind11::arg("newClubID"));
	cl_PriWrapper.def("GetPublicIP", [](PriWrapper& cls_) { return cls_.GetPublicIP(); });
	cl_PriWrapper.def("GetSpectatorShortcut", [](PriWrapper& cls_) { return cls_.GetSpectatorShortcut(); });
	cl_PriWrapper.def("SetSpectatorShortcut", [](PriWrapper& cls_, int newSpectatorShortcut) { return cls_.SetSpectatorShortcut(newSpectatorShortcut); }, pybind11::arg("newSpectatorShortcut"));
	cl_PriWrapper.def("GetClubDetails", [](PriWrapper& cls_) { return cls_.GetClubDetails(); });
	cl_PriWrapper.def("__ClubID__ChangeNotifyFunc", [](PriWrapper& cls_) { return cls_.__ClubID__ChangeNotifyFunc(); });
	cl_PriWrapper.def("__PREI__ChangeNotifyFunc", [](PriWrapper& cls_) { return cls_.__PREI__ChangeNotifyFunc(); });
	cl_PriWrapper.def("__ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc", [](PriWrapper& cls_) { return cls_.__ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc(); });
	cl_PriWrapper.def("eventDestroyed", [](PriWrapper& cls_) { return cls_.eventDestroyed(); });
	cl_PriWrapper.def("OnSpectatorShortcutChanged", [](PriWrapper& cls_) { return cls_.OnSpectatorShortcutChanged(); });
	cl_PriWrapper.def("SetSpectatorShortcut2", [](PriWrapper& cls_, int InShortcut) { return cls_.SetSpectatorShortcut2(InShortcut); }, pybind11::arg("InShortcut"));
	cl_PriWrapper.def("ServerSetPublicIP", [](PriWrapper& cls_, std::string IP) { return cls_.ServerSetPublicIP(IP); }, pybind11::arg("IP"));
	cl_PriWrapper.def("OnUniqueIdChanged", [](PriWrapper& cls_) { return cls_.OnUniqueIdChanged(); });
	cl_PriWrapper.def("UpdatePlayerAvatarBorder", [](PriWrapper& cls_) { return cls_.UpdatePlayerAvatarBorder(); });
	cl_PriWrapper.def("UpdatePlayerBanner", [](PriWrapper& cls_) { return cls_.UpdatePlayerBanner(); });
	cl_PriWrapper.def("ClientAchievementProgression", [](PriWrapper& cls_, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress) { return cls_.ClientAchievementProgression(AchievementId, AchievementType, Progress, MaxProgress); }, pybind11::arg("AchievementId"), pybind11::arg("AchievementType"), pybind11::arg("Progress"), pybind11::arg("MaxProgress"));
	cl_PriWrapper.def("ClientUnlockAchievement", [](PriWrapper& cls_, int AchievementId, unsigned char AchievementType) { return cls_.ClientUnlockAchievement(AchievementId, AchievementType); }, pybind11::arg("AchievementId"), pybind11::arg("AchievementType"));
	cl_PriWrapper.def("ServerSetPlayerActivatedFX", [](PriWrapper& cls_, FXActorWrapper FX) { return cls_.ServerSetPlayerActivatedFX(FX); }, pybind11::arg("FX"));
	cl_PriWrapper.def("UpdateCarLocalPlayer", [](PriWrapper& cls_) { return cls_.UpdateCarLocalPlayer(); });
	cl_PriWrapper.def("OnReplacingBotPRIChanged", [](PriWrapper& cls_) { return cls_.OnReplacingBotPRIChanged(); });
	cl_PriWrapper.def("OnTeamChanged", [](PriWrapper& cls_) { return cls_.OnTeamChanged(); });
	cl_PriWrapper.def("ClearBotReplacement", [](PriWrapper& cls_) { return cls_.ClearBotReplacement(); });
	cl_PriWrapper.def("ReportCheater", [](PriWrapper& cls_, std::string Reason) { return cls_.ReportCheater(Reason); }, pybind11::arg("Reason"));
	cl_PriWrapper.def("ValidateLoadoutTeamPaints", [](PriWrapper& cls_) { return cls_.ValidateLoadoutTeamPaints(); });
	cl_PriWrapper.def("ValidateLoadoutSlots", [](PriWrapper& cls_) { return cls_.ValidateLoadoutSlots(); });
	cl_PriWrapper.def("ValidateLoadoutDLC", [](PriWrapper& cls_) { return cls_.ValidateLoadoutDLC(); });
	cl_PriWrapper.def("OnStartVoteToForfeitDisabledChanged", [](PriWrapper& cls_) { return cls_.OnStartVoteToForfeitDisabledChanged(); });
	cl_PriWrapper.def("SetStartVoteToForfeitDisabled", [](PriWrapper& cls_, long unsigned int bDisabled) { return cls_.SetStartVoteToForfeitDisabled(bDisabled); }, pybind11::arg("bDisabled"));
	cl_PriWrapper.def("ServerVoteToForfeit", [](PriWrapper& cls_) { return cls_.ServerVoteToForfeit(); });
	cl_PriWrapper.def("SetUserCarPreferences", [](PriWrapper& cls_, float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity) { return cls_.SetUserCarPreferences(NewDodgeThreshold, NewSteeringSensitivity, NewAirControlSensitivity); }, pybind11::arg("NewDodgeThreshold"), pybind11::arg("NewSteeringSensitivity"), pybind11::arg("NewAirControlSensitivity"));
	cl_PriWrapper.def("ServerSetUserCarPreferences", [](PriWrapper& cls_, float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity) { return cls_.ServerSetUserCarPreferences(NewDodgeThreshold, NewSteeringSensitivity, NewAirControlSensitivity); }, pybind11::arg("NewDodgeThreshold"), pybind11::arg("NewSteeringSensitivity"), pybind11::arg("NewAirControlSensitivity"));
	cl_PriWrapper.def("ValidateUserInt", [](PriWrapper& cls_, std::string Reason, int NewValue, int Min, int Max) { return cls_.ValidateUserInt(Reason, NewValue, Min, Max); }, pybind11::arg("Reason"), pybind11::arg("NewValue"), pybind11::arg("Min"), pybind11::arg("Max"));
	cl_PriWrapper.def("ValidateUserFloat", [](PriWrapper& cls_, std::string Reason, float NewValue, float Min, float Max) { return cls_.ValidateUserFloat(Reason, NewValue, Min, Max); }, pybind11::arg("Reason"), pybind11::arg("NewValue"), pybind11::arg("Min"), pybind11::arg("Max"));
	//cl_PriWrapper.def("SetXPInfo", [](PriWrapper& cls_, int InTotalXP, int InXPLevel) { return cls_.SetXPInfo(InTotalXP, InXPLevel); }, pybind11::arg("InTotalXP"), pybind11::arg("InXPLevel"));
	//cl_PriWrapper.def("SetTotalXP2", [](PriWrapper& cls_, int NewXP) { return cls_.SetTotalXP2(NewXP); }, pybind11::arg("NewXP"));
	cl_PriWrapper.def("OnPawnTypeChanged", [](PriWrapper& cls_) { return cls_.OnPawnTypeChanged(); });
	cl_PriWrapper.def("SetWaitingPlayer", [](PriWrapper& cls_, long unsigned int B) { return cls_.SetWaitingPlayer(B); }, pybind11::arg("B"));
	cl_PriWrapper.def("SetPawnType2", [](PriWrapper& cls_, unsigned char NewPawnType) { return cls_.SetPawnType2(NewPawnType); }, pybind11::arg("NewPawnType"));
	cl_PriWrapper.def("IsPlayer", [](PriWrapper& cls_) { return cls_.IsPlayer(); });
	cl_PriWrapper.def("IsEditor", [](PriWrapper& cls_) { return cls_.IsEditor(); });
	cl_PriWrapper.def("IsSpectator", [](PriWrapper& cls_) { return cls_.IsSpectator(); });
	cl_PriWrapper.def("ServerSpectate", [](PriWrapper& cls_) { return cls_.ServerSpectate(); });
	cl_PriWrapper.def("ClientChangeTeamFailed", [](PriWrapper& cls_, int TeamNum) { return cls_.ClientChangeTeamFailed(TeamNum); }, pybind11::arg("TeamNum"));
	cl_PriWrapper.def("ServerChangeTeam", [](PriWrapper& cls_, int TeamNum) { return cls_.ServerChangeTeam(TeamNum); }, pybind11::arg("TeamNum"));
	cl_PriWrapper.def("ReplicatePodiumTitles", [](PriWrapper& cls_) { return cls_.ReplicatePodiumTitles(); });
	cl_PriWrapper.def("OnMatchAdmin", [](PriWrapper& cls_) { return cls_.OnMatchAdmin(); });
	cl_PriWrapper.def("OnMVPChange", [](PriWrapper& cls_) { return cls_.OnMVPChange(); });
	cl_PriWrapper.def("NotifyWonMVP", [](PriWrapper& cls_) { return cls_.NotifyWonMVP(); });
	cl_PriWrapper.def("IsInvalidName", [](PriWrapper& cls_) { return cls_.IsInvalidName(); });
	cl_PriWrapper.def("IsInWarmUpMode", [](PriWrapper& cls_) { return cls_.IsInWarmUpMode(); });
	cl_PriWrapper.def("SetReady", [](PriWrapper& cls_, long unsigned int bNewReady) { return cls_.SetReady(bNewReady); }, pybind11::arg("bNewReady"));
	cl_PriWrapper.def("ServerMatchAdminSetPaused", [](PriWrapper& cls_, long unsigned int bPause) { return cls_.ServerMatchAdminSetPaused(bPause); }, pybind11::arg("bPause"));
	cl_PriWrapper.def("ServerMatchAdminSetScoreAndTime", [](PriWrapper& cls_, int NewScoreTeam0, int NewScoreTeam1, int SecondsRemaining, long unsigned int bOverTime, long unsigned int bRestartRound) { return cls_.ServerMatchAdminSetScoreAndTime(NewScoreTeam0, NewScoreTeam1, SecondsRemaining, bOverTime, bRestartRound); }, pybind11::arg("NewScoreTeam0"), pybind11::arg("NewScoreTeam1"), pybind11::arg("SecondsRemaining"), pybind11::arg("bOverTime"), pybind11::arg("bRestartRound"));
	cl_PriWrapper.def("SetMatchAdmin", [](PriWrapper& cls_, long unsigned int bIsMatchAdmin) { return cls_.SetMatchAdmin(bIsMatchAdmin); }, pybind11::arg("bIsMatchAdmin"));
	cl_PriWrapper.def("ServerReadyUp", [](PriWrapper& cls_) { return cls_.ServerReadyUp(); });
	cl_PriWrapper.def("ShouldBroadCastWelcomeMessage", [](PriWrapper& cls_, long unsigned int bExiting) { return cls_.ShouldBroadCastWelcomeMessage(bExiting); }, pybind11::arg("bExiting"));
	cl_PriWrapper.def("UpdateOnlineProductStats", [](PriWrapper& cls_) { return cls_.UpdateOnlineProductStats(); });
	cl_PriWrapper.def("SetWaitingStartTime2", [](PriWrapper& cls_) { return cls_.SetWaitingStartTime2(); });
	cl_PriWrapper.def("OnRespawnTimeRemainingChanged", [](PriWrapper& cls_) { return cls_.OnRespawnTimeRemainingChanged(); });
	cl_PriWrapper.def("SetRespawnTime2", [](PriWrapper& cls_, int NewTime) { return cls_.SetRespawnTime2(NewTime); }, pybind11::arg("NewTime"));
	cl_PriWrapper.def("ClientScoredGoal", [](PriWrapper& cls_, Vector & BallHitLocation) { return cls_.ClientScoredGoal(BallHitLocation); }, pybind11::arg("BallHitLocation"));
	cl_PriWrapper.def("OnScoredGoal", [](PriWrapper& cls_, Vector & BallHitLocation) { return cls_.OnScoredGoal(BallHitLocation); }, pybind11::arg("BallHitLocation"));
	cl_PriWrapper.def("OnRep_SteeringSensitivity", [](PriWrapper& cls_) { return cls_.OnRep_SteeringSensitivity(); });
	cl_PriWrapper.def("OnRep_ClientScorePoint", [](PriWrapper& cls_) { return cls_.OnRep_ClientScorePoint(); });
	cl_PriWrapper.def("ResetScore", [](PriWrapper& cls_) { return cls_.ResetScore(); });
	cl_PriWrapper.def("RemovePoints", [](PriWrapper& cls_, int Points) { return cls_.RemovePoints(Points); }, pybind11::arg("Points"));
	cl_PriWrapper.def("ScorePoint2", [](PriWrapper& cls_, int AdditionalScore) { return cls_.ScorePoint2(AdditionalScore); }, pybind11::arg("AdditionalScore"));
	cl_PriWrapper.def("CanAwardTimeRestrictedStatEvent", [](PriWrapper& cls_) { return cls_.CanAwardTimeRestrictedStatEvent(); });
	cl_PriWrapper.def("RecordTimeRestrictedStatEvent", [](PriWrapper& cls_) { return cls_.RecordTimeRestrictedStatEvent(); });
	cl_PriWrapper.def("ResetTimeRestrictedStatEvent", [](PriWrapper& cls_) { return cls_.ResetTimeRestrictedStatEvent(); });
	cl_PriWrapper.def("GetMatchXP", [](PriWrapper& cls_) { return cls_.GetMatchXP(); });
	cl_PriWrapper.def("CommitStats", [](PriWrapper& cls_) { return cls_.CommitStats(); });
	cl_PriWrapper.def("UpdateFromLoadout", [](PriWrapper& cls_) { return cls_.UpdateFromLoadout(); });
	cl_PriWrapper.def("UpdateUserCarPreferences", [](PriWrapper& cls_, AirControlComponentWrapper AirControlComponent) { return cls_.UpdateUserCarPreferences(AirControlComponent); }, pybind11::arg("AirControlComponent"));
	cl_PriWrapper.def("HandleAirControl", [](PriWrapper& cls_, AirControlComponentWrapper AirControlComp) { return cls_.HandleAirControl(AirControlComp); }, pybind11::arg("AirControlComp"));
	cl_PriWrapper.def("SetCar2", [](PriWrapper& cls_, CarWrapper NewCar) { return cls_.SetCar2(NewCar); }, pybind11::arg("NewCar"));
	cl_PriWrapper.def("IsClientPlayerPRI", [](PriWrapper& cls_) { return cls_.IsClientPlayerPRI(); });
	cl_PriWrapper.def("IsLocalPlayerPRI", [](PriWrapper& cls_) { return cls_.IsLocalPlayerPRI(); });
	cl_PriWrapper.def("Unregister", [](PriWrapper& cls_) { return cls_.Unregister(); });
	cl_PriWrapper.def("AddLocalPlayerToGameEvent", [](PriWrapper& cls_) { return cls_.AddLocalPlayerToGameEvent(); });
	cl_PriWrapper.def("OnLoadoutsSetInternal", [](PriWrapper& cls_) { return cls_.OnLoadoutsSetInternal(); });
	cl_PriWrapper.def("AreLoadoutsSet", [](PriWrapper& cls_) { return cls_.AreLoadoutsSet(); });
	cl_PriWrapper.def("OnLoadoutsOnlineSet", [](PriWrapper& cls_) { return cls_.OnLoadoutsOnlineSet(); });
	cl_PriWrapper.def("OnLoadoutsSet2", [](PriWrapper& cls_) { return cls_.OnLoadoutsSet2(); });
	cl_PriWrapper.def("RemoveCertifiedProductStat", [](PriWrapper& cls_, long long unsigned int InstanceID) { return cls_.RemoveCertifiedProductStat(InstanceID); }, pybind11::arg("InstanceID"));
	cl_PriWrapper.def("InitLoadoutAttributesForTeam", [](PriWrapper& cls_, PriXWrapper PRI) { return cls_.InitLoadoutAttributesForTeam(PRI); }, pybind11::arg("PRI"));
	cl_PriWrapper.def("ShouldValidateOnlineProducts", [](PriWrapper& cls_) { return cls_.ShouldValidateOnlineProducts(); });
	cl_PriWrapper.def("OnSplitScreenStatusChanged", [](PriWrapper& cls_) { return cls_.OnSplitScreenStatusChanged(); });
	cl_PriWrapper.def("ServerSplitScreenStatusChanged", [](PriWrapper& cls_, long unsigned int bInSplitScreen) { return cls_.ServerSplitScreenStatusChanged(bInSplitScreen); }, pybind11::arg("bInSplitScreen"));
	cl_PriWrapper.def("UpdateSplitScreenStatus", [](PriWrapper& cls_) { return cls_.UpdateSplitScreenStatus(); });
	cl_PriWrapper.def("OnPartyLeaderChanged", [](PriWrapper& cls_) { return cls_.OnPartyLeaderChanged(); });
	// [deprecated] cl_PriWrapper.def("ServerSetPartyLeader", [](PriWrapper& cls_, SteamID & InPartyLeader, long unsigned int bInParty) { return cls_.ServerSetPartyLeader(InPartyLeader, bInParty); }, pybind11::arg("InPartyLeader"), pybind11::arg("bInParty"));
	// [deprecated] cl_PriWrapper.def("SetPartyLeader2", [](PriWrapper& cls_, SteamID & InPartyLeader, long unsigned int bInParty) { return cls_.SetPartyLeader2(InPartyLeader, bInParty); }, pybind11::arg("InPartyLeader"), pybind11::arg("bInParty"));
	cl_PriWrapper.def("UpdatePartyStatus", [](PriWrapper& cls_) { return cls_.UpdatePartyStatus(); });
	cl_PriWrapper.def("OnSkillTierChanged", [](PriWrapper& cls_) { return cls_.OnSkillTierChanged(); });
	cl_PriWrapper.def("ReplicateSkillTier", [](PriWrapper& cls_, int NewTier) { return cls_.ReplicateSkillTier(NewTier); }, pybind11::arg("NewTier"));
	cl_PriWrapper.def("OnTitleChanged", [](PriWrapper& cls_) { return cls_.OnTitleChanged(); });
	cl_PriWrapper.def("SyncPlayerTitle", [](PriWrapper& cls_) { return cls_.SyncPlayerTitle(); });
	cl_PriWrapper.def("UpdateTitleFromLoadout", [](PriWrapper& cls_) { return cls_.UpdateTitleFromLoadout(); });
	cl_PriWrapper.def("UpdateTitle2", [](PriWrapper& cls_) { return cls_.UpdateTitle2(); });
	cl_PriWrapper.def("GetNewFriendKey", [](PriWrapper& cls_) { return cls_.GetNewFriendKey(); });
	cl_PriWrapper.def("ServerSetPlayerHistoryKey", [](PriWrapper& cls_, unsigned char * HistoryKeyArray) { return cls_.ServerSetPlayerHistoryKey(HistoryKeyArray); }, pybind11::arg("HistoryKeyArray"));
	cl_PriWrapper.def("OnRep_UniqueId", [](PriWrapper& cls_) { return cls_.OnRep_UniqueId(); });
	cl_PriWrapper.def("EventOwnerChanged", [](PriWrapper& cls_, PriWrapper PRI) { return cls_.EventOwnerChanged(PRI); }, pybind11::arg("PRI"));
	cl_PriWrapper.def("EventSpectatorShortcutChanged", [](PriWrapper& cls_, PriWrapper PRI) { return cls_.EventSpectatorShortcutChanged(PRI); }, pybind11::arg("PRI"));
	cl_PriWrapper.def("EventServerAchievementProgression", [](PriWrapper& cls_, PriWrapper PRI, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress) { return cls_.EventServerAchievementProgression(PRI, AchievementId, AchievementType, Progress, MaxProgress); }, pybind11::arg("PRI"), pybind11::arg("AchievementId"), pybind11::arg("AchievementType"), pybind11::arg("Progress"), pybind11::arg("MaxProgress"));
	cl_PriWrapper.def("EventStartVoteToForfeitDisabledChanged", [](PriWrapper& cls_, PriWrapper PRI) { return cls_.EventStartVoteToForfeitDisabledChanged(PRI); }, pybind11::arg("PRI"));
	cl_PriWrapper.def("EventCarPreUpdate", [](PriWrapper& cls_, PriWrapper PRI) { return cls_.EventCarPreUpdate(PRI); }, pybind11::arg("PRI"));
	cl_PriWrapper.def("EventVanityChanged", [](PriWrapper& cls_) { return cls_.EventVanityChanged(); });
}
